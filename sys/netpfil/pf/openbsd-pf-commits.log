commit 8cfc1ee57a049402d88ef882a298a1628e046446
Author: kn <kn@openbsd.org>
Date:   Thu Apr 27 12:10:30 2023 +0000

    Remove net lock from DIOCGETTIMEOUT
    
    'pfctl -s timeouts' values are only used inside of pf, entirely protected
    by the pf lock through the ioctl interface;  the net lock is useless.
    
    Previous attempts to remove net lock usage showed that the pf lock cannot
    yet entirely replace it, so start with small pieces like this one.
    
    Contrary to IPv4/6 read-only ioctls, some pf ioctls without FWRITE flag do
    modify internal pf state, which is not entirely obvious when approached
    from the ioctl layer.
    
    OK sashan dlg

 sys/net/pf_ioctl.c | 4 +---
 1 file changed, 1 insertion(+), 3 deletions(-)

commit b46ef14d0f90f345b5e0d02eb410767017a09f42
Author: mvs <mvs@openbsd.org>
Date:   Wed Apr 26 19:54:35 2023 +0000

    Introduce `rtlabel_mtx' mutex(9) to protect route labels storage. This
    time kernel and net locks are held in various combination to protect it.
    We don't want to put kernel lock to all the places. Netlock also can't
    be used  because rtfree(9) which calls rtlabel_unref() has unknown
    netlock state within.
    
    This new `rtlabel_mtx' mutex(9) protects `rt_labels' list and `label'
    entry dereference. Since we don't export 'rt_label' structure, keep this
    lock private to net/route.c. For this reason rtlabel_id2name() now
    copies label string to externally passed buffer instead of returning
    address of `rt_labels' list data. This is the way which rtlabel_id2sa()
    already works.
    
    ok bluhm@

 sys/net/pf_ioctl.c | 10 +++-------
 1 file changed, 3 insertions(+), 7 deletions(-)

commit 745370075ce9aff7a2273f2dc8ae61ff26acad94
Author: jsg <jsg@openbsd.org>
Date:   Thu Mar 23 01:41:12 2023 +0000

    fix off-by-one in pf_state_expires() bounds test
    such a value would have triggered a KASSERT()
    ok sashan@ deraadt@

 sys/net/pf.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 58feb3ffc6e4325f32e45913d0699eeb367a8a88
Author: sashan <sashan@openbsd.org>
Date:   Sat Mar 4 10:55:37 2023 +0000

    pf(4) should be enforcing TTL=1 to packets sent to 224.0.0.1 only.
    Issue found and kindly reported by Luca Di Gregorio <lucdig _at_ gmail>
    
    OK bluhm@

 sys/net/pf.c | 10 +++++++---
 1 file changed, 7 insertions(+), 3 deletions(-)

commit 3cf8a20e24f66b849a0eb7ce22568ccd0be0d5cf
Author: sashan <sashan@openbsd.org>
Date:   Wed Feb 15 18:11:47 2023 +0000

    pfsync(4) panics on NULL pointer dereference if there
    are no data ready for bulk transfer. reported and fix
    kindly tested by hrvoje@
    
    OK bluhm@

 sys/net/if_pfsync.c | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

commit 1fdb608f55af06552858daaa549822514987da72
Author: sashan <sashan@openbsd.org>
Date:   Tue Feb 7 17:58:43 2023 +0000

    internal representation of icmp type/code in pfctl(8)/pf(4) does not
    fit into u_int8_t. Issue has been noticed and kindly reported by
    amalinin _at_ bh0.amt.ru via bugs@.
    
    OK bluhm@

 sys/net/pfvar.h | 7 +++----
 1 file changed, 3 insertions(+), 4 deletions(-)

commit ef8a89aa808e8efbaf0c93fbb50a42230300f540
Author: yasuoka <yasuoka@openbsd.org>
Date:   Sun Jan 22 23:05:51 2023 +0000

    Fix pf_anchor_stackframe commit to revert pf rule matching to the
    previous behavior that stops when any rule matches within quick
    anchors.
    
    ok sasha kn

 sys/net/pf.c | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

commit 0a543725ccdd2a01669122ce79bb67e66ede77f2
Author: bluhm <bluhm@openbsd.org>
Date:   Thu Jan 12 13:09:47 2023 +0000

    Binding the accept socket in TCP input relies on the fact that the
    listen port is not bound to port 0.  With a matching pf divert-to
    rule this assumption is no longer true and could crash the kernel
    with kassert.  In both pf and stack drop TCP packets with destination
    port 0 before they can do harm.
    OK sashan@ claudio@

 sys/net/pf.c | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

commit acafb14ed9a415a9d14f4ce03118e42089440453
Author: sashan <sashan@openbsd.org>
Date:   Fri Jan 6 17:44:33 2023 +0000

    PF_ANCHOR_STACK_MAX is insufficient protection against stack overflow.
    On amd64 stack overflows for anchor rule with depth ~30. The tricky
    thing is the 'safe' depth varies depending on kind of packet processed
    by pf_match_rule(). For example for local outbound TCP packet stack
    overflows when recursion if pf_match_rule() reaches depth 24.
    
    Instead of lowering PF_ANCHOR_STACK_MAX to 20 and hoping it will
    be enough on all platforms and for all packets I'd like to stop
    calling pf_match_rule() recursively. This commit brings back
    pf_anchor_stackframe array we used to have back in 2017. It also
    revives patrick@'s idea to pre-allocate stack frame arrays
    from per-cpu.
    
    OK kn@

 sys/net/pf.c       | 215 +++++++++++++++++++++++++++++++++++++----------------
 sys/net/pf_ioctl.c |  18 ++++-
 sys/net/pfvar.h    |   3 +-
 3 files changed, 168 insertions(+), 68 deletions(-)

commit 607956cbff2fc0078a6e5d38f8d8af5d04abf1e5
Author: dlg <dlg@openbsd.org>
Date:   Thu Jan 5 23:44:35 2023 +0000

    more consistently name pf_state * variables "st".
    
    pf_state ** are generally called "stp" now too.
    
    discussed with and ok sashan@

 sys/net/pf.c       | 1106 ++++++++++++++++++++++++++--------------------------
 sys/net/pf_ioctl.c |   96 ++---
 2 files changed, 603 insertions(+), 599 deletions(-)

commit 38f9a0c9d30813e3a61c60f891a7047cedb67566
Author: sashan <sashan@openbsd.org>
Date:   Thu Jan 5 10:06:58 2023 +0000

    pfctl fails to add addresses to undefined/inactive table
    
    pfr_add_tables() function must set PFR_TFLAG_ACTIVE flag
    to table which is attached to rule. This will then allow
    pfr_add_addrs() to populate the table with addresses.
    
    without this pair of pfctl(8) commands fails as follows:
        # echo 'pass from <foo> to any' |pfctl -f -
        # pfctl -t foo -T add 192.168.1.0/24
        pfctl: Table does not exist
    
    
    OK mbuhl@

 sys/net/pf_table.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit e9311d0bc3a9c1f27941a3b741f6753baf581fe3
Author: dlg <dlg@openbsd.org>
Date:   Wed Jan 4 10:31:55 2023 +0000

    move the pf_state_tree_id type from pfvar.h to pfvar_priv.h.
    
    the pf_state_tree_id type is private to the kernel.
    
    while here, move it from being an RB tree to an RBT tree. this saves
    about 12k in pf.o on amd64.
    
    ok sashan@

 sys/net/if_pfsync.c |  5 ++---
 sys/net/pf.c        | 21 ++++++++++-----------
 sys/net/pf_ioctl.c  | 11 ++++-------
 sys/net/pf_lb.c     |  8 +++-----
 sys/net/pfvar.h     |  6 +-----
 5 files changed, 20 insertions(+), 31 deletions(-)

commit 211190b84f6802d85490bd4ef6b3ac434dd683fd
Author: dlg <dlg@openbsd.org>
Date:   Wed Jan 4 02:00:49 2023 +0000

    move the pf_state_tree rb tree type from pfvar.h to pfvar_priv.h
    
    the pf_state_tree types are kernel private, and are not used by
    userland. make build agrees with me.
    
    while here, move the pf_state_tree from the RB macros to the RBT
    functions. this shaves about 13k off pf.o on amd64.
    
    ok sashan@

 sys/net/pf.c       | 28 +++++++++++++++-------------
 sys/net/pf_ioctl.c |  5 +++--
 sys/net/pfvar.h    |  9 +++------
 3 files changed, 21 insertions(+), 21 deletions(-)

commit 11f8e959ebce39d23b22c2737e3af3f3b181fc82
Author: dlg <dlg@openbsd.org>
Date:   Mon Jan 2 05:32:40 2023 +0000

    use the pf generated toeplitz hash when setting the mbuf flow id.
    
    before this it would use the pf state id, which is just an increasing
    number. the toeplitz hash is generated/used by the rest of the
    stack, so this encourages consistent flow of traffic through the
    system.

 sys/net/pf.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 04cdc2f221d0a137bc3fe350017128664d5a8b58
Author: patrick <patrick@openbsd.org>
Date:   Tue Dec 27 20:13:03 2022 +0000

    Fix array bounds mismatch with clang 15
    
    New warning -Warray-parameter is a bit overzealous.
    ok millert@ tb@

 sys/net/pf.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 03a727d7dcc61f3460a8c2f93bb57d3524d893cd
Author: dlg <dlg@openbsd.org>
Date:   Sat Dec 24 05:20:32 2022 +0000

    fix and enable toeplitz hashing of pf_state_keys again.
    
    the hash generated when setting up the pf pdesc struct uses outer
    addresses, while the addresses used in the state table goes through
    pf_state_key_addr_setup(), which does interesting things with some
    ipv6 icmp values. state lookups used pf_state_key_addr_setup(), but
    pf_state_key_setup copied the pdesc value, causing an inconsistency.
    pf_state_key_setup now calls pf_state_key_addr_setup().
    
    found by anton@
    tested by anton@ florian@

 sys/net/pf.c | 11 +++++------
 1 file changed, 5 insertions(+), 6 deletions(-)

commit ab9483613a32b059f2b3d797356d296898efd068
Author: dlg <dlg@openbsd.org>
Date:   Fri Dec 23 07:14:55 2022 +0000

    disable the use of the has in the pf state key lookup (for now).
    
    anton@ says the previous commit breaks ipv6 related regress tests.
    disabling the use of the hash in the state key compare gets it going
    again while i can figure out what's going on.

 sys/net/pf.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit ad6271c5803ac5f60f3823ae073cfb046050012d
Author: dlg <dlg@openbsd.org>
Date:   Thu Dec 22 05:59:26 2022 +0000

    use stoeplitz to generate a hash/flowid for state keys.
    
    the hash will be used to partition work in pf and pfsync in the
    future, and right now it is used as the first comparison in the rb
    tree state lookup.
    
    using stoeplitz means that pf will hash traffic the same way that
    hardware using a stoeplitz key will hash incoming traffic on rings.
    stoeplitz is also used by the tcp stack to generate a flow id, which
    is used to pick which transmit ring is used on nics with multiple
    queues too. using the same algorithm throughout the stack encourages
    affinity of packets to rings and softnet threads the whole way
    through.
    
    using the hash as the first comparison in the state rb tree comparison
    should encourage faster traversal of the state tree by having all
    the address/port bits summarised into the single hash value. however,
    tests by hrvoje popovski don't show performance changing. on the
    plus side, if this change is free from a performance point of view
    then it makes the future steps more straightforward.
    
    discussed at length at h2k22
    tested by sashan@ and hrvoje popovski
    ok tb@ sashan@ claudio@ jmatthew@

 sys/net/pf.c    | 56 +++++++++++++++++++++++++++++++++++++++++++++++++++++++-
 sys/net/pfvar.h |  3 ++-
 2 files changed, 57 insertions(+), 2 deletions(-)

commit e240af1e683ccef7a1b84d74c31d10f2c8d92dfd
Author: dlg <dlg@openbsd.org>
Date:   Wed Dec 21 03:02:34 2022 +0000

    tiny whitespace tweak.

 sys/net/pf.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit c87814b777e1b492102cf4fcdc062dab40743c5e
Author: dlg <dlg@openbsd.org>
Date:   Wed Dec 21 02:51:06 2022 +0000

    consistently use the PF_REF wrappers around refcnts.

 sys/net/pf.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 35751c747c9f1e1c8a27869d6c2516a9a1b31ef9
Author: dlg <dlg@openbsd.org>
Date:   Wed Dec 21 02:23:10 2022 +0000

    prefix pf_state_key and pf_state_item struct bits to make them more unique.
    
    this makes searching for the struct members easier, which in turn
    makes tweaking code around them a lot easier too. sk_refcnt in
    particular would have been a lot nicer to fiddle with than just
    refcnt because pf_state structs also have a refcnt, which is annoying.
    
    tweaks and ok sashan@
    reads ok kn@

 sys/net/pf.c       | 170 +++++++++++++++++++++++++++--------------------------
 sys/net/pf_ioctl.c |  29 +++++----
 sys/net/pfvar.h    |   4 +-
 3 files changed, 106 insertions(+), 97 deletions(-)

commit d956567b8a83e77dcbaa40d1038b81c18ca02b19
Author: dlg <dlg@openbsd.org>
Date:   Mon Dec 19 04:35:33 2022 +0000

    move pf_state_item and pf_state_key structs from pfvar.h to pfvar_priv.h.
    
    both of these are kernel private data structures and do not need
    to be visible to userland. moving them to pfvar_priv.h makes this
    explicit, and makes it leass scary to tweak them in the future.
    
    ok deraadt@ kn@ sashan@

 sys/net/pfvar.h | 27 +--------------------------
 1 file changed, 1 insertion(+), 26 deletions(-)

commit 437c6c3f437b1cb182e10d7cb7a6528e67c89fe2
Author: dlg <dlg@openbsd.org>
Date:   Fri Dec 16 02:05:44 2022 +0000

    always keep pf_state_keys attached to pf_states.
    
    pf_state structures don't contain ip addresses, protocols, ports,
    etc. that information is stored in a pf_state_key struct, which is
    used to wire a state into the state table. when things like pfsync
    or the pf state ioctls want to export information about a state,
    particularly the addresses on it, they needs the pf_state_key struct
    to read from.
    
    before this diff the code assumed that when a state was removed
    from the state tables it could throw the pf_state_key structs away
    as part of that removal. this code changes it so once pf_state_insert
    succeeds, a pf_state will keep its references to the pf_state_key
    structs until the pf_state struct itself is being destroyed.
    
    this allows anything that holds a reference to a pf_state to also
    look at the pf_state_key structs because they're now effectively
    an immutable part of the pf_state struct.
    
    this is by far the simplest and most straightforward fix for pfsync
    crashing on pf_state_key dereferences we've come up with so far.
    it has been made possible by the addition of reference counts to
    pf_state and pf_state_key structs, which allows us to properly
    account for this adjusted lifecycle for pf_state_keys on pf_state
    structs.
    
    sashan@ and i have been kicking this diff around for a couple of
    weeks now.
    ok sashan@ jmatthew@

 sys/net/pf.c    | 181 +++++++++++++++++++++++++++++++++-----------------------
 sys/net/pfvar.h |   3 +-
 2 files changed, 109 insertions(+), 75 deletions(-)

commit af09f97befaf183c8fe005c6f3670aeed4f82daa
Author: bluhm <bluhm@openbsd.org>
Date:   Fri Nov 25 20:27:53 2022 +0000

    revert pf.c r1.1152 again: move pf_purge out from under the kernel lock
    
    Using systqmp for pf_purge creates a deadlock between pf_purge()
    and ixgbe_stop() and possibly other drivers.  On systqmp pf(4) needs
    netlock which the interface ioctl(2) is holding.  ix(4) waits in
    sched_barrier() which is also scheduled on the systqmp task queue.
    
    Removing the netlock from pf_purge() as a quick fix caused other
    problems.
    
    backout suggested by deraadt@

 sys/net/pf.c       | 141 +++++++++++++----------------------------------------
 sys/net/pf_ioctl.c |   8 ++-
 sys/net/pfvar.h    |   3 +-
 3 files changed, 39 insertions(+), 113 deletions(-)

commit bb21efd54073efdf25d8c39120acaa75108f874a
Author: kettenis <kettenis@openbsd.org>
Date:   Fri Nov 25 18:03:53 2022 +0000

    Revert previous commit.  It was not properly tested and produces splassert
    warnings.  Rushing to pile more stuff on top of it isn't the answer.  This
    needs a rethink.
    
    ok deraadt@

 sys/net/pf.c | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

commit 635ac89356b68de9e5bb87000ac49d5c1af679c3
Author: dlg <dlg@openbsd.org>
Date:   Fri Nov 25 03:45:39 2022 +0000

    get rid of NET_LOCK in the pf purge work
    
    pf purge was moved to systqmp (to get it away from KERNEL_LOCK)
    which is also used as the backend for things like intr_barrier and
    sched_barrier. it is common for network cards to call intr_barrier
    while holding NET_LOCK, and if pf is trying to get the NET_LOCK in
    the purge tasks that are now running in systqmp, it's a deadlock.
    bluhm@ hit this exact issue.
    
    sashan@ has been working to get rid of the need for NET_LOCK in pf,
    so now we can remove the NET_LOCKs here rather than create a pf
    specific taskq to run these tasks in.
    
    ok sashan@ bluhm@

 sys/net/pf.c | 8 +-------
 1 file changed, 1 insertion(+), 7 deletions(-)

commit 6c44725cbd982622be7e34db9a33578d61031d16
Author: sashan <sashan@openbsd.org>
Date:   Tue Nov 22 22:28:40 2022 +0000

    Interface tables (a.k.a. kif) in pf(4) are currently protected
    by NET_LOCK() only. This change makes them protected by PF_LOCK().
    Having this change in tree will allow us to remove NET_LOCK()
    protection from ioctl(2) code path in pf(4).
    
    OK dlg@, kn@

 sys/net/pf_if.c | 23 ++++++++++++++++++++++-
 1 file changed, 22 insertions(+), 1 deletion(-)

commit 408def72c86da2d640648ebfe32644a317bf86de
Author: kn <kn@openbsd.org>
Date:   Mon Nov 21 22:50:07 2022 +0000

    Replace manual loop and duplicate RB_NEXT with RB_FOREACH
    
    The loop begins with saving a pointer to the next interface, does work and
    then gets the same next interface again, for nothing.
    
    Switch to the elsewhere consistently used RB_FOREACH helper.
    
    OK sashan

 sys/net/pf_if.c | 8 +++-----
 1 file changed, 3 insertions(+), 5 deletions(-)

commit edd74edc674adc995f726ebfa0b3a14395d91255
Author: sashan <sashan@openbsd.org>
Date:   Mon Nov 21 07:27:10 2022 +0000

    Fix DIOCIGETIFACES ioctl so all network interfaces
    and interface groups are reported. The bug allowed
    to enumerate the first 64 interfaces only.
    
    The issue has been noticed and bug kindly reported
    by Olivier Croquin.
    
    OK kn@

 sys/net/pf_if.c | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

commit 6e91a17356d7291d5b254e7ac9c3db558e697e3e
Author: kn <kn@openbsd.org>
Date:   Sat Nov 12 02:48:14 2022 +0000

    Put pf_state_import() under NPFSYNC>0 to fix build without pfsync

 sys/net/pf.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit a6949b2035d79ade7f81b1802b868ff5a4ee8942
Author: dlg <dlg@openbsd.org>
Date:   Fri Nov 11 16:12:08 2022 +0000

    try pf.c r1.1143 again: move pf_purge out from under the kernel lock
    
    this also avoids holding NET_LOCK too long.
    
    the main change is done by running the purge tasks in systqmp instead
    of systq. the pf state list was recently reworked so iteration over
    the state can be done without blocking insertions.
    
    however, scanning a lot of states can still take a lot of time, so
    this also makes the state list scanner yield if it has spent too
    much time running.
    
    the other purge tasks for source nodes, rules, and fragments have
    been moved to their own timeout/task pair to simplify the time
    accounting.
    
    in my environment, before this change pf purges often took 10 to
    50ms. the softclock thread runs next to it often took a similar
    amount of time, presumably because they ended up spinning waiting
    for each other. after this change the pf_purges are more like 6 to
    12ms, and dont block softclock. most of the variability in the runs
    now seems to come from contention on the net lock.
    
    tested by me sthen@ chris@
    ok sashan@ kn@ claudio@
    
    the diff was backed out because it made things a bit more racey,
    but sashan@ has squashed those races this week. let's try it again.

 sys/net/pf.c       | 141 ++++++++++++++++++++++++++++++++++++++++-------------
 sys/net/pf_ioctl.c |   8 +--
 sys/net/pfvar.h    |   3 +-
 3 files changed, 113 insertions(+), 39 deletions(-)

commit 3eb75377085e55d6e66bc0814c3359f206dc2264
Author: dlg <dlg@openbsd.org>
Date:   Fri Nov 11 15:02:31 2022 +0000

    add a mutex to struct pf_state and init it.
    
    nothing is protected by it yet but it will allow us to provide
    consistent updates to individual states without relying on a global
    lock. getting that right between the packet processing in pf itself,
    pfsync, the pf purge code, the ioctl paths, etc is not worth the
    required contortions.
    
    while pf_state does grow, it doesn't use more cachelines on machines
    where we will want to run in parallel with a lot of states.
    
    stolen from and ok sashan@

 sys/net/pf.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit 3c2c1cfaf9c7a7a0a3cd4669ff61a20e9a485698
Author: dlg <dlg@openbsd.org>
Date:   Fri Nov 11 11:47:12 2022 +0000

    rename pfsync_up() to pfsync_is_up()
    
    foo_up() where foo is a network driver is usually a function that
    configures and brings an interface up into a running state. this
    small tweak just makes the code a bit easier for me to read.

 sys/net/if_pfsync.c | 4 ++--
 sys/net/if_pfsync.h | 4 ++--
 sys/net/pf.c        | 4 ++--
 3 files changed, 6 insertions(+), 6 deletions(-)

commit 76981aeb2e81250c73432bbb33e9200842af4543
Author: sashan <sashan@openbsd.org>
Date:   Fri Nov 11 11:22:48 2022 +0000

    Turn KASSERT() into if() to prevent state being inserted to
    pfsync snapshot multiple times.
    
    OK dlg@

 sys/net/if_pfsync.c | 15 +++++++++++----
 1 file changed, 11 insertions(+), 4 deletions(-)

commit 4103306ead01e8d3532b293f8cd3d438413c56b2
Author: dlg <dlg@openbsd.org>
Date:   Fri Nov 11 11:02:35 2022 +0000

    rewrite the pf_state_peer_ntoh and pf_state_peer_hton macros as functions.
    
    i can read this code as functions, but it takes too much effort as macros.

 sys/net/pf.c    | 40 +++++++++++++++++++++++++++++++++++++++-
 sys/net/pfvar.h | 38 +-------------------------------------
 2 files changed, 40 insertions(+), 38 deletions(-)

commit bd25c3007b75528acd661300d06ff901ab170b82
Author: dlg <dlg@openbsd.org>
Date:   Fri Nov 11 10:55:48 2022 +0000

    move struct pf_state from pfvar.h to pfvar_priv.h.
    
    we (sashan) are going to add a mutex to the pf_state struct, but a
    mutex is a kernel data structure that changes shape depending on
    things like whether MULTIPROCESSOR is enabled, and should therefore
    not be visible to userland. when we added a mutex to pf_state,
    compiling pfctl failed because it doesn't know what a mutex is and
    it can't know which version of it the current kernel is running
    with.
    
    moving struct pf_state to pfvar_priv.h makes it clear it is a private
    kernel only data structure, and avoids this leak into userland.
    
    tested by me and make build
    ok sashan@

 sys/net/pfvar.h | 49 ++-----------------------------------------------
 1 file changed, 2 insertions(+), 47 deletions(-)

commit e0fbf0e28dd12cf1f98854a5f92dacc317245e3c
Author: sashan <sashan@openbsd.org>
Date:   Thu Nov 10 16:29:20 2022 +0000

    revert pf_state mtx commit, because it breaks tree.
    pfctl does not build
    
    OK dlg@

 sys/net/pf.c    | 60 +++++++++++++++----------------------
 sys/net/pfvar.h | 92 +++++++++++++++++++++++++--------------------------------
 2 files changed, 63 insertions(+), 89 deletions(-)

commit 02c56bfae7bc5569d6b0b04844f85ecbef1382ff
Author: sashan <sashan@openbsd.org>
Date:   Thu Nov 10 14:22:43 2022 +0000

    Add a mutex to pf_state structure. Mutex retain a consistency
    of structure members without using a global state lock.
    The first member which uses protection by mutex is key[] array.
    more will follow.
    
    OK dlg@

 sys/net/pf.c    | 60 ++++++++++++++++++++++---------------
 sys/net/pfvar.h | 92 ++++++++++++++++++++++++++++++++-------------------------
 2 files changed, 89 insertions(+), 63 deletions(-)

commit a21b78cad07af7560419baae8ed65d4a38a32eac
Author: sashan <sashan@openbsd.org>
Date:   Wed Nov 9 23:00:00 2022 +0000

    simplify expiration of 'once' rules.
    let packet to mark 'once' rule as expired. The rule
    will be removed by pfctl(8) when rules are updated.
    
    OK kn@

 sys/net/pf.c       | 65 +++++++++++++++---------------------------------------
 sys/net/pf_ioctl.c | 30 +------------------------
 sys/net/pfvar.h    |  4 +---
 3 files changed, 20 insertions(+), 79 deletions(-)

commit 5f17b30aee8b388e13101395f1f026cb3b5be4a6
Author: sashan <sashan@openbsd.org>
Date:   Tue Nov 8 16:20:26 2022 +0000

    This diff fixes panic tripped by KASSERT(st->sync_state == PFSYNC_S_NONE)
    found in pfsync_insert_state(). It is caused by two packets which happen
    to belong to the same session. Think of UDP stream or two TCP SYN packets
    transmitted almost simultaneously. The first such packet wins a state lock
    and inserts state to table. The second packet waits for state lock
    as a reader. As soon as the first packet is done with state creation
    it drops the lock and is going to sent S_INS message to its peer via
    pfsync. The second update meanwhile obtains the state lock as a reader.
    It finds a state created by the first packet. Later the second packet
    also finds out the state needs to be updated, because sync_state
    is still set to PFSYNC_S_NONE. The second packet puts state to snapshot
    list marking it as S_UPD. All this happens before the first packet has
    a chance to make a progress. Think of the first packet loses cpu after
    dropping a write lock. Once the first packet gets running again it
    trips KASSERT() because sync_state is set to S_UPD.
    
    tested by hrvoje@
    
    OK dlg@

 sys/net/pf.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 8cdf5d8ca0d84114a845740c91e3dd46ea4472c4
Author: dlg <dlg@openbsd.org>
Date:   Mon Nov 7 16:35:11 2022 +0000

    revert "move pf_purge out from under the kernel lock".
    
    hrvoje popovski showed me pfsync blowing up with this. im backing
    it out quickly in case something else at the hackathon makes it
    harder to do later.
    
    kn@ agrees

 sys/net/pf.c       | 144 ++++++++++++++---------------------------------------
 sys/net/pf_ioctl.c |   8 ++-
 sys/net/pfvar.h    |   3 +-
 3 files changed, 41 insertions(+), 114 deletions(-)

commit 22b63e6173746a6e967b6ce430f1f0bfd6a9db13
Author: dlg <dlg@openbsd.org>
Date:   Mon Nov 7 12:56:38 2022 +0000

    move pf_purge out from under the kernel lock and avoid the hogging cpu
    
    this also avoids holding NET_LOCK too long.
    
    the main change is done by running the purge tasks in systqmp instead
    of systq. the pf state list was recently reworked so iteration over
    the state can be done without blocking insertions.
    
    however, scanning a lot of states can still take a lot of time, so
    this also makes the state list scanner yield if it has spent too
    much time running.
    
    the other purge tasks for source nodes, rules, and fragments have
    been moved to their own timeout/task pair to simplify the time
    accounting.
    
    in my environment, before this change pf purges often took 10 to
    50ms. the softclock thread runs next to it often took a similar
    amount of time, presumably because they ended up spinning waiting
    for each other. after this change the pf_purges are more like 6 to
    12ms, and dont block softclock. most of the variability in the runs
    now seems to come from contention on the net lock.
    
    tested by me sthen@ chris@
    ok sashan@ kn@ claudio@

 sys/net/pf.c       | 144 +++++++++++++++++++++++++++++++++++++++--------------
 sys/net/pf_ioctl.c |   8 +--
 sys/net/pfvar.h    |   3 +-
 3 files changed, 114 insertions(+), 41 deletions(-)

commit 8e365c3b94fe10351d4377954bb0a09377cb7ffa
Author: kn <kn@openbsd.org>
Date:   Sun Nov 6 21:34:01 2022 +0000

    Constify pfsync_acts[]; OK dlg

 sys/net/if_pfsync.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit a5c2db95e153c86e54293d09adfcaab05b890aa9
Author: dlg <dlg@openbsd.org>
Date:   Sun Nov 6 21:31:24 2022 +0000

    get rid of pfsync_state_export.
    
    it wraps pf_state_export and has the same arguments and return type.
    pfsync can just call pf_state_export instead.
    
    ok clang

 sys/net/if_pfsync.c | 10 ++--------
 1 file changed, 2 insertions(+), 8 deletions(-)

commit e004f9b1ce004809c6da01202abc8fcfcd9c22cc
Author: dlg <dlg@openbsd.org>
Date:   Sun Nov 6 18:05:05 2022 +0000

    move pfsync_state_import in if_pfsync.c to pf_state_import in pf.c
    
    this is straightening the deck chairs. the state import and export
    code are used by both the pf ioctls and pfsync, but the export code
    is in pf.c and the import code is in if_pfsync. if pfsync was
    disabled then the ioctl stuff wouldnt link.
    
    moving the import code to pf.c makes it more symmetrical(?) and
    robust.
    
    tweaks and ok from kn@ sashan@

 sys/net/if_pfsync.c | 239 +++-------------------------------------------------
 sys/net/if_pfsync.h |   4 +-
 sys/net/pf.c        | 221 +++++++++++++++++++++++++++++++++++++++++++++++-
 sys/net/pf_ioctl.c  |   4 +-
 sys/net/pf_norm.c   |  16 +++-
 sys/net/pfvar.h     |   8 +-
 6 files changed, 256 insertions(+), 236 deletions(-)

commit 39a5cc30bcf39f1b59b166978c9a0f335ad4d190
Author: dlg <dlg@openbsd.org>
Date:   Sun Nov 6 13:03:52 2022 +0000

    make /dev/pf a clonable device.
    
    this provides a 1:1 relationship of pfopen() calls to pfclose()
    calls. in turn, this makes it a lot easier to track stuff allocated
    by a process and then clean it up if that process goes away
    unexpectedly. the unique dev_t provided by the cloning machinery
    gives us a good identifier to track this state with too.
    
    discussed with h2k22
    ok sashan@
    deraadt@ agrees this is a good time to put this in

 sys/net/pf_ioctl.c | 10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

commit 547fa50847452ed7a93eb593268c4ff9dbbc4e68
Author: jan <jan@openbsd.org>
Date:   Sat Nov 5 22:33:11 2022 +0000

    Fix kernel build without IPSEC option.
    
    ok deraadt@

 sys/net/if_pfsync.c | 19 +++++++++++++++++--
 1 file changed, 17 insertions(+), 2 deletions(-)

commit 33c43c6d649cb278e929a54ed859d02dd780bf43
Author: bket <bket@openbsd.org>
Date:   Mon Oct 10 16:43:12 2022 +0000

    Recalculate checksum of normalised packet
    
    In 2011, henning@ removed fiddling with the ip checksum of normalised
    packets in r1.131 of sys/net/pf_norm.c. Rationale was that the checksum
    is always recalculated in all output paths anyway. In 2016, procter@
    reintroduced checksum modification to preserve end-to-end checksums in
    r1.189 of sys/net/pf_norm.c. Likely soomewhere in that timeslot checksum
    recalculation of normalised packets was broken.
    
    With input from bluhm@.
    
    OK sashan@, bluhm@

 sys/net/pf.c      |  6 +++---
 sys/net/pf_norm.c | 27 ++++++++++++++++++++++-----
 sys/net/pfvar.h   |  4 +++-
 3 files changed, 28 insertions(+), 9 deletions(-)

commit 8c664ca5427760632512c03b468d61ac8f9d2f51
Author: bluhm <bluhm@openbsd.org>
Date:   Sat Sep 3 19:22:19 2022 +0000

    Use a mutex to update tcp_maxidle, tcp_iss, and tcp_now.  This
    removes pressure from the exclusive netlock in tcp_slowtimo().
    Reading is done atomically.  Ensure that the tcp_now value is read
    only once per function to provide consistent time.
    OK yasuoka@

 sys/net/pf.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 14b185b35597645fd8f1e1ddde5b752876bd7a14
Author: yasuoka <yasuoka@openbsd.org>
Date:   Sat Sep 3 14:57:54 2022 +0000

    When divert-reply is used, keep some pf states after pcb is dropped if
    its local address is translated, to prevent its source port from being
    reused.  regress test by blumn.
    
    ok blumn

 sys/net/pf.c    | 22 ++++++++++++++++++++--
 sys/net/pfvar.h |  3 ++-
 2 files changed, 22 insertions(+), 3 deletions(-)

commit 56efcf3b0a8406345ef182842522fdd5f7c4118d
Author: benno <benno@openbsd.org>
Date:   Wed Aug 31 11:29:12 2022 +0000

    make kernel build without INET6 again
    ok sashan@

 sys/net/pf_lb.c | 15 ++++++++++-----
 1 file changed, 10 insertions(+), 5 deletions(-)

commit a6b8fd29c9fca9cf5e0c486549ff4cfaed27a25e
Author: bluhm <bluhm@openbsd.org>
Date:   Tue Aug 30 11:53:03 2022 +0000

    Refactor internet PCB lookup function.  Rename in_pcbhashlookup()
    so the public API is in_pcblookup() and in_pcblookup_listen().  For
    internal use introduce in_pcbhash_insert() and in_pcbhash_lookup()
    to avoid code duplication.  Routing domain is unsigned, change the
    type to u_int.
    OK mvs@

 sys/net/pf.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 027f1a50a56346e90029267b06e5d9f61d0c699a
Author: bluhm <bluhm@openbsd.org>
Date:   Mon Aug 22 20:35:39 2022 +0000

    Protect pf_reassemble() with pf fragment lock.  When the pool limit
    for fragment entries was reached, pf_create_fragment() called
    pf_flush_fragments() without lock.  This could result in a crash.
    Let PF_FRAG_LOCK() cover the whole pf_reassemble() function as
    pf_nfrents++ was also missing the lock.
    crash found and fix tested by Hrvoje Popovski;  OK sashan@

 sys/net/pf_norm.c | 31 +++++++++++++------------------
 1 file changed, 13 insertions(+), 18 deletions(-)

commit 9e8a1cdfd23caf414ca874057442fd8062181c6e
Author: bluhm <bluhm@openbsd.org>
Date:   Mon Aug 8 12:06:30 2022 +0000

    To make protocol input functions MP safe, internet PCB need protection.
    Use their reference counter in more places.
    The in_pcb lookup functions hold the PCBs in hash tables protected
    by table->inpt_mtx mutex.  Whenever a result is returned, increment
    the ref count before releasing the mutex.  Then the inp can be used
    as long as neccessary.  Unref it at the end of all functions that
    call in_pcb lookup.
    As a shortcut, pf may also hold a reference to the PCB.  When
    pf_inp_lookup() returns it, it also incements the ref count and the
    caller can handle it like the inp from table lookup.
    OK sashan@

 sys/net/pf.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit 6a1c2aef88b5c0b0929f8a576cb2182a8feaaf9f
Author: bluhm <bluhm@openbsd.org>
Date:   Sat Aug 6 15:57:58 2022 +0000

    Clean up the netlock macros.  Merge NET_RLOCK_IN_SOFTNET and
    NET_RLOCK_IN_IOCTL, which have the same implementation.  The R and
    W are hard to see, call the new macro NET_LOCK_SHARED.  Rename the
    opposite assertion from NET_ASSERT_WLOCKED to NET_ASSERT_LOCKED_EXCLUSIVE.
    Update some outdated comments about net locking.
    OK mpi@ mvs@

 sys/net/pf_ioctl.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit c2364f2ab38e3255986defad064283e6e86862e7
Author: sashan <sashan@openbsd.org>
Date:   Wed Aug 3 08:16:04 2022 +0000

    Bug was reported by Chriss Cappucio. It has turned out my earlier change
    to pf_lb.c was not complete. We must add a test to determine number of
    addresses defined by pool, so we don't treat pool definition
    172.16.0.0/16 as a single IP address in pool. If pool is defined as
    172.16.0.0/16, then we don't want to fall back to PF_POOL_NONE. Missing
    this measure in pf_map_addr() may cause pf_get_sport() to enter infinite
    loop when source ports translation become depleted for the first address
    found in pool (like 172.16.0.1), because the bug prevents pf_map_addr()
    to move to next address in pool (like 172.16.0.2).
    
    while investigating issue I've also noticed an oddity for small random
    pools such as 192.168.1.32/28. One would expect the addresses for nat
    will be randomly picked from range .32 - .47 in this case. however the
    random selection yield significantly more (like 20%) addresses ending by .32
    In order to fix it we make random pool to use arc4random_uniform(~mask + 1)
    instead of current arc4random().
    
    feedback by claudio@
    tested by hrvoje@

 sys/net/pf_lb.c | 45 +++++++++++++++++++++++++++++++++------------
 1 file changed, 33 insertions(+), 12 deletions(-)

commit a86a5b2a5233fca8d4220c1119d57c0990436552
Author: mbuhl <mbuhl@openbsd.org>
Date:   Thu Jul 28 12:27:29 2022 +0000

    Release PF und NET lock before calling copyin for DIOCXCOMMIT.
    OK sashan, bluhm

 sys/net/pf_ioctl.c | 22 +++++++++++-----------
 1 file changed, 11 insertions(+), 11 deletions(-)

commit fa90ac5c787b88bcd714c01650b5cded334d9725
Author: mbuhl <mbuhl@openbsd.org>
Date:   Wed Jul 20 09:33:11 2022 +0000

    Add a pool for the allocation of the pf_anchor struct.
    It was possible to exhaust kernel memory by repeatedly calling
    pfioctl DIOCXBEGIN with different anchor names.
    OK bluhm@
    Reported-by: syzbot+9dd98cbce69e26f0fc11@syzkaller.appspotmail.com

 sys/net/pf.c         |  5 +++--
 sys/net/pf_ioctl.c   |  6 +++++-
 sys/net/pf_ruleset.c | 22 +++++++++++++++-------
 sys/net/pfvar.h      |  7 ++++---
 4 files changed, 27 insertions(+), 13 deletions(-)

commit 669e3a8026cf2c02884e167dc26b7fbe11f3def6
Author: henning <henning@openbsd.org>
Date:   Tue Jun 28 13:48:06 2022 +0000

    fix syncookies in conjunction with tcp fast port reuse.
    This really pointed out that the place syncookies were hooked in was almost,
    but not completely right. The way it was the special case for tcp fast port
    reuse in pf_test_state wasn't hit, because the first packet
    hitting that was the ACK from the peer finishing the 3WHS, and the
    reconstructed SYN came after. We're now doing pf_find_state (and *only* that)
    first, then syncookies, then going on so that the old state is thrown away
    properly and we get a new one with the sequence number modulator set up
    correctly
    Bonus: -11 lines of code
    tracked down (that took a while) + fixed under contract with Hush
    Communications Canada; special thanks to Lyndon
    ok sashan

 sys/net/pf.c | 67 +++++++++++++++++++++++++-----------------------------------
 1 file changed, 28 insertions(+), 39 deletions(-)

commit 30d709c8a85cb6e091ed98efee6889d483b0b544
Author: mbuhl <mbuhl@openbsd.org>
Date:   Sun Jun 26 11:37:08 2022 +0000

    Allow waiting during ktable allocation in pf_ioctl.
    
    OK bluhm
    
    Reported-by: syzbot+50ea4f33ed5dd9264918@syzkaller.appspotmail.com
    Reported-by: syzbot+df65f8b7ee8c0089e885@syzkaller.appspotmail.com

 sys/net/pf.c       |  6 +++---
 sys/net/pf_if.c    |  9 ++++-----
 sys/net/pf_ioctl.c | 11 ++++++-----
 sys/net/pf_table.c | 30 ++++++++++++++----------------
 sys/net/pfvar.h    |  6 +++---
 5 files changed, 30 insertions(+), 32 deletions(-)

commit 9339d28aec66ec1a8e8f26a4f068b3b817c153ff
Author: sashan <sashan@openbsd.org>
Date:   Thu Jun 16 20:47:26 2022 +0000

    pfctl reports existing table as being added. glitch has
    been spotted and reported by jmc@
    
    OK kn@

 sys/net/pf_table.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit b54c49ee96706252b9b0c2c04915fb136800229a
Author: henning <henning@openbsd.org>
Date:   Mon Jun 13 12:48:00 2022 +0000

    fix logic bug in pf_find_state()
    a state in PFTM_PURGE could potentially hide another state on the same state
    key that is active and we'd incorrectly block the packet
    I believe that cannot happen as things are now.
    ok sashan

 sys/net/pf.c | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

commit e91a68406293cd085fd94eeccc8a69eb3ae6ae62
Author: sashan <sashan@openbsd.org>
Date:   Tue Jun 7 22:14:15 2022 +0000

    fixes NULL pointer dereference panic triggered by relayd.
    same panic can be triggered when address table is part
    of anchor loaded by 'load anchor ... from ..,' statement.
    pf_find_or_create_ruleset() function called by pfr_add_tables()
    must receive ruleset name which comes from pre-allocated root
    table.
    
    OK claudio@ dlg@

 sys/net/pf_table.c | 5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)

commit 0271abd8e4942e853c0fc03b1a76e617f0d9a984
Author: bluhm <bluhm@openbsd.org>
Date:   Mon May 23 11:17:35 2022 +0000

    In pf the kernel paniced if IP options in packet within ICMP payload
    were truncated.  Drop such packets instead.
    Reported-by: syzbot+91abd3aa2fdfe900f9ce@syzkaller.appspotmail.com
    OK sashan@ claudio@

 sys/net/pf.c | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

commit 06331d7edaa1dff44af2b10cb262126d717f8b46
Author: bluhm <bluhm@openbsd.org>
Date:   Mon May 23 09:54:18 2022 +0000

    Fix white space.

 sys/net/pf.c | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

commit 601d48eb3b72c0227a877336d7c62b3e65cc2469
Author: miod <miod@openbsd.org>
Date:   Wed May 18 06:02:33 2022 +0000

    Remove #ifdef DDB specific includes, added in 1.968 but related code bits
    removed in 1.970.
    
    ok bluhm@

 sys/net/pf.c | 7 +------
 1 file changed, 1 insertion(+), 6 deletions(-)

commit b8dc7befe550998daf7d1cc53cdb4cafbf337ba3
Author: bluhm <bluhm@openbsd.org>
Date:   Mon May 16 13:31:19 2022 +0000

    pfi_kif_alloc() may be called with M_NOWAIT.  Add NULL check to
    handle malloc(9) failure.
    from markus@; OK sashan@

 sys/net/pf_if.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit de97784bae590f3bed548339caca009d64cfd871
Author: sashan <sashan@openbsd.org>
Date:   Tue May 10 23:12:25 2022 +0000

    move memory allocations in pfr_add_tables() out of
    NET_LOCK()/PF_LOCK() scope. bluhm@ helped a lot
    to put this diff into shape.
    
    OK bluhm@

 sys/net/pf_ioctl.c |   6 +-
 sys/net/pf_table.c | 207 +++++++++++++++++++++++++++++++++++++++++------------
 2 files changed, 161 insertions(+), 52 deletions(-)

commit 37b541b9fa24c6abff9c48e6d61b07889687c1a8
Author: bluhm <bluhm@openbsd.org>
Date:   Thu May 5 16:44:22 2022 +0000

    Clean up divert_packet().  Function does not return error, make it
    void.  Introduce mutex and refcounting for inp like in the other
    PCB functions.
    OK sashan@

 sys/net/pf.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

commit 5f7837b6d7d435f1a86caabb25845b96934d4181
Author: sashan <sashan@openbsd.org>
Date:   Tue May 3 13:32:47 2022 +0000

    Make pf(4) more paranoid about IGMP/MLP messages. MLD/IGMP messages
    with ttl other than 1 will be discarded. Also MLD messages with
    other than link-local source address will be discarded. IGMP
    messages with destination address other than multicast class
    will be discarded.
    
    feedback and OK bluhm@, cluadio@

 sys/net/pf.c | 24 ++++++++++++++++++++++--
 1 file changed, 22 insertions(+), 2 deletions(-)

commit f3a753b5d08950d5841ff29dc67c3de26fb7ab37
Author: mbuhl <mbuhl@openbsd.org>
Date:   Fri Apr 29 09:55:43 2022 +0000

    Release PF und NET lock before calling copyout for DIOCIGETIFACES.
    OK sashan@
    Reported-by: syzbot+b6afd166e314799e3809@syzkaller.appspotmail.com

 sys/net/pf_if.c    | 12 +++---------
 sys/net/pf_ioctl.c | 20 ++++++++++++++++----
 sys/net/pfvar.h    |  4 ++--
 3 files changed, 21 insertions(+), 15 deletions(-)

commit 214dd8280ca1918f257af21db60567840cf3ab4f
Author: bluhm <bluhm@openbsd.org>
Date:   Fri Apr 29 08:58:49 2022 +0000

    IGMP and ICMP6 MLD packets always have the router alert option set.
    pf blocked IPv4 options and IPv6 option header by default.  This
    forced users to set allow-opts in pf rules.
    Better let multicast work by default.  Detect router alerts by
    parsing IP options and hop by hop headers.  If the packet has only
    this option and is a multicast control packet, do not block it due
    to bad options.
    tested by otto@; OK sashan@

 sys/net/pf.c | 136 ++++++++++++++++++++++++++++++++++++++++++++++++++---------
 1 file changed, 115 insertions(+), 21 deletions(-)

commit 1db365080554b3903d331cc396a3d998496e04a3
Author: sashan <sashan@openbsd.org>
Date:   Thu Apr 21 15:22:49 2022 +0000

    Introduce a dedicated link entries for snapshots in pfsync(4). The purpose
    of snapshots is to allow pfsync(4) to move items from global lists
    to local lists (a.k.a. snapshots) under a mutex protection. Snapshots
    are then processed without holding any mutexes. Such idea does not fly
    well if link entry is currently used for global lists as well as snapshots.
    Feedback by bluhm@ Credits also goes to hrvoje@ for extensive testing.
    
    OK bluhm@

 sys/net/if_pfsync.c | 97 +++++++++++++++++++++++++++++++++++++++--------------
 sys/net/pfvar.h     |  4 ++-
 2 files changed, 74 insertions(+), 27 deletions(-)

commit d4308a21b8d16fdce6d3ab5fa399c63d8e0c7109
Author: bluhm <bluhm@openbsd.org>
Date:   Wed Apr 20 20:51:09 2022 +0000

    In pfsync there were some KASSERT hidden behind #ifdef PFSYNC_DEBUG.
    Assertions should be active and rely on #ifdef DIAGNOSTIC.  Retire
    PFSYNC_DEBUG.
    OK sashan@ dlg@

 sys/net/if_pfsync.c | 10 ++--------
 1 file changed, 2 insertions(+), 8 deletions(-)

commit 3665335fec520a64e0e34a43c62c8d09d6d638eb
Author: bluhm <bluhm@openbsd.org>
Date:   Thu Apr 14 11:39:44 2022 +0000

    pf and pfsync are running without kernel lock, so the mutexes must
    have at least mpfloor spl protection.  Fix witness issue found by
    Hrvoje where pfsync holds mutex and interrupt grabs kernel lock.
    OK sashan@

 sys/net/if_pfsync.c | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

commit 2e34be423f161ceb30b2f0a9c2b0c9f1599af261
Author: mbuhl <mbuhl@openbsd.org>
Date:   Sat Apr 9 13:15:44 2022 +0000

    Release PF und NET lock before calling copyin for DIOCXROLLBACK.
    OK bluhm@
    Reported-by: syzbot+2945769fc3e6fd9ee413@syzkaller.appspotmail.com

 sys/net/pf_ioctl.c | 14 +++++---------
 1 file changed, 5 insertions(+), 9 deletions(-)

commit 82d8999861ab5f22447b98b0b22dcdac96cfaddc
Author: mbuhl <mbuhl@openbsd.org>
Date:   Thu Apr 7 19:27:24 2022 +0000

    Release PF und NET lock before calling copyin and copyout for
    DIOCXBEGIN.
    OK bluhm@
    OK sashan@
    Reported-by: syzbot+b22ec16c5bf937578937@syzkaller.appspotmail.com

 sys/net/pf_ioctl.c | 16 +++++++---------
 1 file changed, 7 insertions(+), 9 deletions(-)

commit dd4299a012879df1408c0d0141d71d8f873d7316
Author: mbuhl <mbuhl@openbsd.org>
Date:   Thu Apr 7 14:13:01 2022 +0000

    pf_rollback_rules always has the same return value, make it void.
    OK sashan
    OK bluhm@

 sys/net/pf_ioctl.c | 21 ++++++---------------
 1 file changed, 6 insertions(+), 15 deletions(-)

commit 575778de4c0c9ea81e267e05d157dcf52b005e30
Author: bluhm <bluhm@openbsd.org>
Date:   Thu Apr 7 13:38:54 2022 +0000

    In pfsync(4) sc_len is modified with atomic operations except in
    one place.  Use atomic_add_long() there.  Call the local variable
    sclen, that makes it easier to grep for the struct field sc_len.
    OK sashan@

 sys/net/if_pfsync.c | 23 ++++++++++++-----------
 1 file changed, 12 insertions(+), 11 deletions(-)

commit b3345d3144ef58464025243f8684fc6a10d7b728
Author: sashan <sashan@openbsd.org>
Date:   Mon Apr 4 12:57:36 2022 +0000

    pf_validate_range() must not assume rdr ports are in network order.
    bug found and reported by Kurt (kmos@).
    
    OK bluhm@

 sys/net/pf_ioctl.c | 20 ++++++++++++--------
 1 file changed, 12 insertions(+), 8 deletions(-)

commit 462999584ca2e6a5e3e6d713e8765d4bdce7ac22
Author: bluhm <bluhm@openbsd.org>
Date:   Wed Mar 23 17:36:09 2022 +0000

    Use goto fail consistently to leave the giant switch in pfioctl().
    To terminate inner switches and loops, break is used.  This makes
    it easier to reason whereto the code jumps.
    no binary change; OK millert@ sashan@

 sys/net/pf_ioctl.c | 122 ++++++++++++++++++++++++++---------------------------
 1 file changed, 61 insertions(+), 61 deletions(-)

commit 2426d74d418a97fac09c93fbca3cf132d12cec4d
Author: sashan <sashan@openbsd.org>
Date:   Wed Mar 23 09:01:59 2022 +0000

    resurrect pf_consistency_lock as pfioctl_rw this time. pfioctl_rw
    serializes access to pf(4) from concurrent processes which
    change/read firewall configuration.
    
    OK bluhm@

 sys/net/pf_ioctl.c | 25 ++++++++++++++++++++-----
 1 file changed, 20 insertions(+), 5 deletions(-)

commit c04adf2d4e195884b54782cce998f2fab5d50a6d
Author: sthen <sthen@openbsd.org>
Date:   Thu Mar 17 18:27:55 2022 +0000

    fix typos; Martin Vahlensieck

 sys/net/pf.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 15f55cb3305ed79c5fc80130172c532b9a6ca6c3
Author: sashan <sashan@openbsd.org>
Date:   Tue Mar 8 20:46:01 2022 +0000

    merge iack_mtx, upd_c_mtx, del_mtx, ins_mtx and upd_mtx mutexes into single
    mutex st_mtx. This simplifies pf(4) state handling in pfsync(4). It also
    makes it more reliable.
    
    OK bluhm@

 sys/net/if_pfsync.c | 41 +++++++++++++++--------------------------
 1 file changed, 15 insertions(+), 26 deletions(-)

commit bdccb2a11ab0e95be79e3e0578403fcb5a01ae89
Author: jsg <jsg@openbsd.org>
Date:   Sat Mar 5 10:43:32 2022 +0000

    #if INET6 -> #ifdef INET6 to be consistent

 sys/net/pf.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 8173f80a4c92048eb0cbfc4f6de9139228ac7392
Author: bluhm <bluhm@openbsd.org>
Date:   Fri Feb 25 22:18:44 2022 +0000

    To fix crashes seen by Hrvoje with pfsync, IPsec and parallel
    forwarding, protect tdb flags and lists in pfsync with a mutex.
    help and OK sashan@

 sys/net/if_pfsync.c | 38 ++++++++++++++++++++++++++++++--------
 1 file changed, 30 insertions(+), 8 deletions(-)

commit 308aaa404019ba82df3af9e8a13d726fb603ecb2
Author: sashan <sashan@openbsd.org>
Date:   Wed Feb 16 08:46:11 2022 +0000

    nat-to round-robin without a pool should fallback to POOL_NONE
    bug reported by giovanni@
    
    OK giovanni@

 sys/net/pf_lb.c | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

commit 2960c8affbaf508f693eb4835f38c377df7492b7
Author: dlg <dlg@openbsd.org>
Date:   Wed Feb 16 04:25:34 2022 +0000

    check pf rule "set prio" values consistently.
    
    consistently means we do the check in pf_rule_copyin() so both
    DIOCADDRULE and DIOCCHANGERULE have the prio values checked. this in
    turn prevents invalid prio values getting set on a rule via
    DIOCCHANGERULE.
    
    this was caught by a kassert in the ifq priq code firing.
    
    Reported-by: syzbot+a8f8e24a44b441e71d93@syzkaller.appspotmail.com
    ok sashan@

 sys/net/pf_ioctl.c | 16 ++++++----------
 1 file changed, 6 insertions(+), 10 deletions(-)

commit 43496f5abc1b87305c8f87f3d38acc3b24349b79
Author: sashan <sashan@openbsd.org>
Date:   Wed Feb 9 11:42:58 2022 +0000

    let pfattach() to also initialize pf_default_rule_new to avoid
    div-by-zero in pf_purge()
    
    Reported-by: syzbot+e720e3bab51366d7b667@syzkaller.appspotmail.com
    
    OK deraadt@

 sys/net/pf_ioctl.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit 21c0b6fa66cea5aeffe9e197d81883eee9d43575
Author: deraadt <deraadt@openbsd.org>
Date:   Tue Feb 8 18:08:33 2022 +0000

    Do not /0 if timeout[PFTM_INTERVAL] manages to become zero
    crash noticed by gnezdo, a seperate commit will fix the identified
    cause, but being careful at this point is a good idea.
    ok sashan

 sys/net/pf.c | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

commit 035d4f5430cb74df720b029db6206161d62be3c7
Author: bluhm <bluhm@openbsd.org>
Date:   Mon Jan 24 22:49:48 2022 +0000

    An af-to pf rule must have an address family naf to use after
    translation.  Make stricter sanity checks in pf ioctl to avoid later
    crashes during packet processing.
    Reported-by: syzbot+0ef9190e7d0195496d0d@syzkaller.appspotmail.com
    OK sashan@

 sys/net/pf_ioctl.c | 58 ++++++++++++++++++++++++++++++------------------------
 1 file changed, 32 insertions(+), 26 deletions(-)

commit 6c51f7d89f3d76b4f8d49e9640ce1287fd1f6ce0
Author: sashan <sashan@openbsd.org>
Date:   Tue Jan 11 09:00:17 2022 +0000

    move allocations in DIOCSADDRULE and DIOCHANGERULE outside of locks.
    this diff lets pf_rule_copyin() to be called outside of PF_LOCK()/NET_LOCK().
    
    OK bluhm@

 sys/net/pf_ioctl.c | 300 +++++++++++++++++++++++++++++++++--------------------
 1 file changed, 186 insertions(+), 114 deletions(-)

commit df8d9afdef6b73e3daea5e6c657dbb8b744d67b3
Author: jsg <jsg@openbsd.org>
Date:   Sun Jan 2 22:36:03 2022 +0000

    spelling
    ok jmc@ reads ok tb@

 sys/net/pf.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 5a50f165b8ad031682f9dce0938f29a73af4641e
Author: sashan <sashan@openbsd.org>
Date:   Sun Dec 26 14:04:29 2021 +0000

    DIOCHANGERRULE ioctl must set pointer to ruleset in rule it inserts.
    
    Reported-by: syzbot+7718c5f69c595f76b298@syzkaller.appspotmail.com
    
    OK bluhm@, OK jmatthew@

 sys/net/pf_ioctl.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit 840840b0ba8d4c6274090cce6a5f80acf621ee83
Author: sashan <sashan@openbsd.org>
Date:   Sun Dec 26 01:00:32 2021 +0000

    make 'set skip on ...' in pf.conf dynamic
    
    This is an old issue in pf(4): whenever new interface appears
    in IP stack, we must reload pf.conf to apply 'set skip on ...'
    to newly plumbed network interfaces. Time has come to fix it.
    The idea is to also create pfi_kif for interfaces, which are
    referred by 'set skip on ...'. Such pfi_kif instances are
    created/destroyed by pfi_set_flags()/pfi_clear_flags().
    
    claudio@ dragged my attention to this in Gouveia. Also his
    feedback helped me to put change into shape.
    
    OK claudio@

 sys/net/pf_if.c    | 144 +++++++++++++++++++++++++++++++++++++++++++----------
 sys/net/pf_ioctl.c |   8 ++-
 sys/net/pfvar.h    |  10 ++--
 3 files changed, 130 insertions(+), 32 deletions(-)

commit 38bfd041cb0f3c15f443e825a3c3432e2dd5dc55
Author: sashan <sashan@openbsd.org>
Date:   Thu Dec 16 02:01:59 2021 +0000

    fix zero division found by syzkaller. The sanity checks in pf(4) ioctls
    are not powerful enough to detect invalid port ranges (or even invalid
    rules). syzkaller does not use pfctl(8), it uses ioctl(2) to pass some
    random chunk of memory as a rule to pf(4). Fix adds explicit check
    for 0 divider to pf_get_transaddr(). It should make syzkaller happy
    without disturbing anyone else.
    
    OK gnezdo@
    
    Reported-by: syzbot+d1f00da48fa717e171f3@syzkaller.appspotmail.com

 sys/net/pf_lb.c | 11 ++++++-----
 1 file changed, 6 insertions(+), 5 deletions(-)

commit 655f9804762dfa336e800d7bdd3ff15bf9778ee6
Author: sashan <sashan@openbsd.org>
Date:   Mon Dec 6 07:41:33 2021 +0000

    fix odd check in pfi_kif_free()
    pointed out by jsg@
    
    
    OK jsg@

 sys/net/pf_if.c | 7 +++----
 1 file changed, 3 insertions(+), 4 deletions(-)

commit 4b0e5db302209284feee6c09c003f585d1261f04
Author: bluhm <bluhm@openbsd.org>
Date:   Thu Nov 25 13:46:02 2021 +0000

    Implement reference counting for IPsec tdbs.  Not all cases are
    covered yet, more ref counts to come.  The timeouts are protected,
    so the racy tdb_reaper() gets retired.  The tdb_policy_head, onext
    and inext lists are protected.  All gettdb...() functions return a
    tdb that is ref counted and has to be unrefed later.  A flag ensures
    that tdb_delete() is called only once.
    Tested by Hrvoje Popovski; OK sthen@ mvs@ tobhe@

 sys/net/if_pfsync.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit ac7c051c054eee5ed63de6d85c5e5ba3d640b4e1
Author: jsg <jsg@openbsd.org>
Date:   Mon Nov 22 12:56:04 2021 +0000

    move PFR_TFLAG_CONST test, missed in rev 1.138
    prompted by uninitialised var found by bluhm@ running regress on sparc64
    ok sashan@

 sys/net/pf_table.c | 9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

commit 999a6f611a4e145fb42cda51197cf146eb7623f5
Author: sashan <sashan@openbsd.org>
Date:   Tue Nov 16 20:51:30 2021 +0000

    move memory allocations in pfr_add_addrs() outside of NET_LOCK()/PF_LOCK()
    scope.
    
    feedback by bluhm@
    
    OK bluhm@

 sys/net/pf_ioctl.c |   6 +-
 sys/net/pf_table.c | 260 +++++++++++++++++++++++++++++++++++++++++++++++------
 sys/net/pfvar.h    |   9 +-
 3 files changed, 242 insertions(+), 33 deletions(-)

commit c97e88384b251efd05d99cc4990115bb68cfac49
Author: sashan <sashan@openbsd.org>
Date:   Thu Nov 11 12:35:01 2021 +0000

    Allow pfi_kif_get() callers to pre-allocate buffer for new kif. If kif
    object exists already, then caller must free the pre-allocated buffer.
    If caller does not pre-allocate buffer, the pfi_kif_get() will get
    memory from pool using M_NOWAIT flag.
    
    Commit is  also polishing pfi_initialize() a bit so it uses M_WAITOK
    allocation for pfi_all.
    
    there is no change in current behaviour.
    
    feedback by bluhm@
    
    OK bluhm@

 sys/net/if_pfsync.c |  4 +--
 sys/net/pf_if.c     | 81 ++++++++++++++++++++++++++++++++++++++---------------
 sys/net/pf_ioctl.c  |  6 ++--
 sys/net/pf_table.c  |  4 +--
 sys/net/pfvar.h     |  6 ++--
 5 files changed, 70 insertions(+), 31 deletions(-)

commit 7f9adf34a4095d89cdfc3ba67fcb26fe30ad41ae
Author: sashan <sashan@openbsd.org>
Date:   Sun Oct 24 10:58:43 2021 +0000

    let pf_table.c to use standard way to work with lists
    
    OK todd@, mvs@, kn@

 sys/net/pf_table.c | 27 ++++++++++++---------------
 1 file changed, 12 insertions(+), 15 deletions(-)

commit ac7813e481239b44d93d6f090054f2ae603d82d9
Author: sashan <sashan@openbsd.org>
Date:   Sat Oct 23 09:36:58 2021 +0000

    YIELD() in pf_table.c should preempt for ioctl() callers only
    
    OK @mpi

 sys/net/pf_table.c | 39 +++++++++++++++++++++------------------
 1 file changed, 21 insertions(+), 18 deletions(-)

commit 52ade9e76be23b8910d4e6b91c3840ea68ea5382
Author: sashan <sashan@openbsd.org>
Date:   Wed Jul 7 18:38:25 2021 +0000

    pfsync_undefer() must be called outside of PF_LOCK
    
    OK @bluhm

 sys/net/if_pfsync.c | 33 +++++++++++++++++++++------------
 sys/net/if_pfsync.h |  8 ++++++--
 sys/net/pf.c        | 30 ++++++++++++++++++++++--------
 3 files changed, 49 insertions(+), 22 deletions(-)

commit 7845b46b2ba574e7f66bc4888cb6171c09dd88f3
Author: dlg <dlg@openbsd.org>
Date:   Fri Jun 25 23:48:30 2021 +0000

    let pfsync_request_update actually retry when it overfills a packet.
    
    a continue in the middle of a do { } while (0) loop is effectively
    a break, it doesnt restart the loop.
    
    without the retry, the code leaked update messages which in turn
    made pool_destroy in pfsync destroy trip over a kassert cos items
    were still out.
    
    found by and fix tested by hrvoje popovski
    ok sashan@

 sys/net/if_pfsync.c | 22 +++++++++++++---------
 1 file changed, 13 insertions(+), 9 deletions(-)

commit 3f1b5c31154a0e33fd002641cfd038dc6b15129f
Author: dlg <dlg@openbsd.org>
Date:   Wed Jun 23 06:53:51 2021 +0000

    augment the global pf state list with its own locks.
    
    before this, things that iterated over the global list of pf states
    had to take the net, pf, or pf state locks. in particular, the
    ioctls that dump the state table took the net and pf state locks
    before iterating over the states and using copyout to export them
    to userland. when we tried replacing the use rwlocks with mutexes
    under the pf locks, this blew up because you can't sleep when holding
    a mutex and there's a sleeping lock used inside copyout.
    
    this diff introduces two locks around the global state list: a mutex
    that protects the head and tail of the list, and an rwlock that
    protects the links between elements in the list. inserts on the
    state list only occur during packet handling and can be done by
    taking the mutex and putting the state on the tail before releasing
    the mutex. iterating over states is only done from thread/process
    contexts, so we can take a read lock, then the mutex to get a
    snapshot of the head and tail pointers, and then keep the read lock
    to iterate between the head and tail points. because it's a read
    lock we can then take other sleeping locks (eg, the one inside
    copyout) without (further) gymnastics. the pf state purge code takes
    the rwlock exclusively and the mutex to remove elements from the
    list.
    
    this allows the ioctls and purge code to loop over the list
    concurrently and largely without blocking the creation of states
    when pf is processing packets.
    
    pfsync also iterates over the state list when doing bulk sends,
    which the state purge code needs to be careful around.
    
    ok sashan@

 sys/net/if_pfsync.c |  58 +++++++++-------
 sys/net/pf.c        | 140 +++++++++++++++++++++++++------------
 sys/net/pf_ioctl.c  | 197 ++++++++++++++++++++++++++++++++--------------------
 sys/net/pfvar.h     |   4 +-
 4 files changed, 252 insertions(+), 147 deletions(-)

commit db679a193ea08825f60c959ea7c77d26f1417e69
Author: dlg <dlg@openbsd.org>
Date:   Wed Jun 23 05:51:27 2021 +0000

    pf_purge_expired_states can check the time once instead of for every state.

 sys/net/pf.c | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

commit ec01c30cfc1f65fb5693cfc0c8e90915338c25c6
Author: dlg <dlg@openbsd.org>
Date:   Wed Jun 23 05:43:53 2021 +0000

    pfsync_undefer_notify needs to be careful before dereferecing state keys.
    
    pfsync_undefer_notify uses the state keys to look up the address
    family, which is used to figure out if it should call ipv4 or ipv6
    functions. however, the pf state purge code can unlink a state from
    the trees (ie, the state keys get removed) while the pfsync defer
    code is holding a reference to it and expects to be able to send
    the deferred packet in the future. we can test if the state keys
    are set by checking if the timeout state is PFTM_UNLINK or not.
    
    this currently relies on both pf_remove_state and pfsync_undefer_notify
    being called with the NET_LOCK held. this probably needs to be
    rethought later but is good enough for now.
    
    found the hard way on a production firewall at work.

 sys/net/if_pfsync.c | 13 ++++++++++++-
 1 file changed, 12 insertions(+), 1 deletion(-)

commit 99e6e1ef5c9fa2ffc9cbb56b4b4f522d9b8918e3
Author: dlg <dlg@openbsd.org>
Date:   Wed Jun 23 04:16:32 2021 +0000

    rework pf_state_expires to avoid confusion around state->timeout.
    
    im going to make it so pf_purge_expired_states() can gather states
    largely without sharing a lock with pfsync or actual packet processing
    in pf. if pf or pfsync unlink a state while pf_purge_expired_states
    is looking at it, we can race with some checks and fall over a
    KASSERT.
    
    i'm fixing this by having the caller of pf_state_expires read
    state->timeout first, do it's checks, and then pass the value as
    an argument into pf_state_expires. this means there's a consistent
    view of the state->timeout variable across all the checks that
    pf_purge_expired_states in particular does. if pf/pfsync does change
    the timeout while pf_purge_expired_states is looking at it, the
    worst thing that happens is that it doesn't get picked as a candidate
    for purging in this pass and will have to wait for the next sweep.
    
    ok sashan@ as part of a bigger diff

 sys/net/pf.c    | 39 +++++++++++++++++++++++++++++----------
 sys/net/pfvar.h |  3 +--
 2 files changed, 30 insertions(+), 12 deletions(-)

commit b8dc9bf2edb09a543d6ff84db11cbb5209a0a26f
Author: dlg <dlg@openbsd.org>
Date:   Thu Jun 17 00:18:09 2021 +0000

    more consistently use pfsync_free_deferral to free the mbuf.
    
    pfsync_free_deferral doesnt need to check pd_m for NULL before
    calling m_freem because m_freem does that anyway.
    
    if pf_setup_pdesc in pfsync_undefer_notify failed, the mbuf was
    freed but the pd_m pointer was not cleared, which would have led
    to a double free when pfsync_free_deferral tried to do the same
    thing for it.
    
    if pfsync_undefer is supposed to drop the mbuf, let pfsync_free_deferral
    do it for us.
    
    ok jmatthew@

 sys/net/if_pfsync.c | 14 ++++----------
 1 file changed, 4 insertions(+), 10 deletions(-)

commit 58d692258f509b462083459af44d37e7e7de44e1
Author: dlg <dlg@openbsd.org>
Date:   Tue Jun 15 10:10:22 2021 +0000

    use getnsecuptime instead of getmicrouptime.
    
    working on a uint64_t is easier than remembering how timercmp and
    timersub works.
    
    ok jmatthew@

 sys/net/if_pfsync.c | 25 ++++++++++++-------------
 1 file changed, 12 insertions(+), 13 deletions(-)

commit a7d9d42416c4c067f364a0565dc0f902c2943295
Author: dlg <dlg@openbsd.org>
Date:   Tue Jun 15 08:36:19 2021 +0000

    get the uptime before comparing to it.
    
    "that seems kind of important" jmatthew@

 sys/net/if_pfsync.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit 1c3ff09ad37ab9532af634dd4fbc4845d7a4edf4
Author: dlg <dlg@openbsd.org>
Date:   Tue Jun 15 05:06:24 2021 +0000

    rework pfsync deferal timeout handling.
    
    instead of having a timeout per deferred packet structure, use a
    single timeout in pfsync that pulls items off the list of deferred
    packets.
    
    this avoids confusion about whether a timeout is handling the defer
    or another context owns it. this way round, the context that removes
    a defer from the list owns it and is responsible for completing it.
    
    this should fix a panic we hit on the firewalls at work. there's
    still another one that needs a fix, but sashan@ has been looking
    at it. this might make it simpler to deal with though.
    
    ok sashan@ jmatthew@

 sys/net/if_pfsync.c | 83 ++++++++++++++++++++++++++++++++++++++---------------
 1 file changed, 60 insertions(+), 23 deletions(-)

commit 3cc9bc2c41c589c0483bd3971e1890d376506495
Author: sashan <sashan@openbsd.org>
Date:   Wed Jun 2 21:49:31 2021 +0000

    With parallel execution of pf_test() two packets may try to update the same
    state in pfsync(4) queue. pfsync_q_ins() takes that race into account with one
    exception: the KASSERT() at line 2352. That KASSERT()  needs to be removed.
    
    2346 void
    2347 pfsync_q_ins(struct pf_state *st, int q)
    2348 {
    2349    struct pfsync_softc *sc = pfsyncif;
    2350    size_t nlen, sc_len;
    2351
    2352    KASSERT(st->sync_state == PFSYNC_S_NONE);
    2353
    2354 #if defined(PFSYNC_DEBUG)
    2355         if (sc->sc_len < PFSYNC_MINPKT)
    2356                 panic("pfsync pkt len is too low %zd", sc->sc_len);
    2357 #endif
    2358 do {
    2359         mtx_enter(&sc->sc_mtx[q]);
    2360
    2361         /*
    2362          * If two threads are competing to insert the same state, then
    2363          * there must be just single winner.
    2364          */
    2365         if (st->sync_state != PFSYNC_S_NONE) {
    2366                 mtx_leave(&sc->sc_mtx[q]);
    2367                 break;
    2368         }
    
    
    OK bluhm@

 sys/net/if_pfsync.c | 4 +---
 1 file changed, 1 insertion(+), 3 deletions(-)

commit f561b0b3a7579ff54ed700154559df8dbf301937
Author: dlg <dlg@openbsd.org>
Date:   Wed Jun 2 07:46:22 2021 +0000

    whitespace tweaks, no functional change.

 sys/net/pf_ioctl.c | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

commit e793fd616de367323f0480eb0276dfea1300d67d
Author: dlg <dlg@openbsd.org>
Date:   Tue Jun 1 09:57:11 2021 +0000

    a couple of minor whitespace tweaks. no functional change.
    
    am i a pf hacker now?

 sys/net/pf.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 83714fa12aa34703bf2fcc5e2d25f7f8a463dae7
Author: sashan <sashan@openbsd.org>
Date:   Mon May 17 23:01:26 2021 +0000

    fix state key reference underflow, when sk == skrev
    
    the bug has been reported by Sebastien and Olivier Cherrier.
    it has turned out the pf_state_key_link_reverse() does not
    grab enough references when both state keys (sk and skrev)
    are identical. This makes pf to trip assert later, when
    references are being dropped:
    
    panic(ffffffff81dfbc8e) at panic+0x11d
    __assert(ffffffff81e64b54,ffffffff81e0a6ee,33a,ffffffff81e03b7f)
    refcnt_rele(fffffd810bf02458) at refcnt_rele+0x6f
    pf_state_key_unref(fffffd810bf023f0) at pf_state_key_unref+0x21
    pf_remove_state(fffffd810c0c4578) at pf_remove_state+0x1fa
    pf_purge_expired_states(2) at pf_purge_expired_states+0x232
    pf_purge(ffffffff82236a30) at pf_purge+0x33
    taskq_thread(ffff800000032080) at taskq_thread+0x81
    
    fixed tested by Olivier Cherrier and semarie@
    
    OK semarie@

 sys/net/pf.c | 19 +++++++++++++------
 1 file changed, 13 insertions(+), 6 deletions(-)

commit 43e954e31fd47e7049d74a1d85cf400328ac0d98
Author: sashan <sashan@openbsd.org>
Date:   Tue Apr 27 09:38:29 2021 +0000

    pf_state_key_link_reverse() is prone to race on parallel forwarding
    
    we need to adjust assertions. at time we call pf_state_key_link_reverse()
    is state_key either linked to correct reverse peer or not linked at all.
    The pf_state_key_link_reverse() is being called as a reader ons tate_lock.
    There might be more packets, which try to update the state key.
    
    OK bluhm@

 sys/net/pf.c | 20 ++++++++++++++------
 1 file changed, 14 insertions(+), 6 deletions(-)

commit c202673480ce60c9d08dcd83e1aecb53dcf67f2a
Author: dlg <dlg@openbsd.org>
Date:   Fri Apr 23 03:29:24 2021 +0000

    only skip pf once for packets that are injected by a divert-packet socket.
    
    when a divert socket gets a packet from userland to send back through
    the kernel, it marks it as diverted so pf knows not to divert it
    back to userland again. this marking stuck to the packet though,
    so if it went through pf again (eg, on the way out of the network
    stack) pf would skip it again. this is undesirable if you want pf
    to do things to the packet on this outgoing hope, such as nat.
    
    this has pf clear the mark once it's been used, which allows the
    next run of a packet through pf to have stuff work on it.
    
    found by some people at parta networks.
    ok sashan@ lteo@ bluhm@
    bluhm@ also suggested keeping my diff in the same style as the rest of pf.c

 sys/net/pf.c | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

commit 678831be5eff0bcb5217b54d0dcfb6698acf8411
Author: jsg <jsg@openbsd.org>
Date:   Wed Mar 10 10:21:47 2021 +0000

    spelling
    
    ok gnezdo@ semarie@ mpi@

 sys/net/if_pfsync.c | 4 ++--
 sys/net/if_pfsync.h | 4 ++--
 sys/net/pf.c        | 4 ++--
 sys/net/pf_norm.c   | 4 ++--
 sys/net/pfvar.h     | 4 ++--
 5 files changed, 10 insertions(+), 10 deletions(-)

commit 2818ef99e36cb3e1aa903761b5b1dde22c59b89f
Author: bluhm <bluhm@openbsd.org>
Date:   Mon Mar 1 11:05:42 2021 +0000

    Refactor ip_fragment() and ip6_fragment().  Use a mbuf list to
    simplify the handling of the fragment list.  Now the functions
    ip_fragment() and ip6_fragment() always consume the mbuf.  They
    free the mbuf and mbuf list in case of an error and take care about
    the counter.  Adjust the code a bit to make v4 and v6 look similar.
    Fixes a potential mbuf leak when pf_route6() called pf_refragment6()
    and it failed.  Now the mbuf is always freed by ip6_fragment().
    OK dlg@ mvs@

 sys/net/pf.c      | 30 +++++++++++++-----------------
 sys/net/pf_norm.c | 43 +++++++++++++++----------------------------
 2 files changed, 28 insertions(+), 45 deletions(-)

commit 5c7fed39bd376c774afa6b5ea3c41fd50de48416
Author: dlg <dlg@openbsd.org>
Date:   Thu Feb 25 02:48:19 2021 +0000

    we don't have to cast to caddr_t when calling m_copydata anymore.
    
    the first cut of this diff was made with coccinelle using this spatch:
    
    @rule@
    type caddr_t;
    expression m, off, len, cp;
    @@
    -m_copydata(m, off, len, (caddr_t)cp)
    +m_copydata(m, off, len, cp)
    
    i had fix it's opinionated idea of formatting by hand though, so
    i'm not sure it was worth it.
    
    ok deraadt@ bluhm@

 sys/net/if_pfsync.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 254bd8f22547979836e70833bca874f274e40b6a
Author: mvs <mvs@openbsd.org>
Date:   Tue Feb 23 11:43:40 2021 +0000

    Use NULL instead of 0 in `m_nextpkt' assignment.
    
    ok deraadt@ dlg@

 sys/net/pf.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit be7274bff2cdfc1e4013aa1cc73f6ee5bcc3b103
Author: bluhm <bluhm@openbsd.org>
Date:   Mon Feb 22 13:04:56 2021 +0000

    When cutting of the head of an overlapping fragment during pf
    reassembly, reinsert the fragment into the lookup table with correct
    index.
    Reported-by: syzbot+d043455a5346f726f1c4@syzkaller.appspotmail.com
    OK claudio@

 sys/net/pf_norm.c | 27 ++++++++++++++++++++++++++-
 1 file changed, 26 insertions(+), 1 deletion(-)

commit 39bcd3993ef9a341866eb277683416c7d0282f76
Author: dlg <dlg@openbsd.org>
Date:   Fri Feb 19 06:14:07 2021 +0000

    we dont need to wrap some short lines.

 sys/net/if_pfsync.c | 8 +++-----
 1 file changed, 3 insertions(+), 5 deletions(-)

commit 9d239d3fe5d0e5633aa01d923c24304fa193f9e3
Author: dlg <dlg@openbsd.org>
Date:   Fri Feb 19 06:12:44 2021 +0000

    check the state for PF_ROUTE when undeferring a packet, not the rule.

 sys/net/if_pfsync.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit f22573b003fc0ba43e37333805e25e0f8cff76be
Author: dlg <dlg@openbsd.org>
Date:   Tue Feb 16 03:12:32 2021 +0000

    use rtalloc_mpath in pf_route and pf_route6.
    
    if you have multiple links to the same destination, this will let
    you use them with route-to/reply-to/dup-to.
    
    ok claudio@

 sys/net/pf.c | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

commit f9a0c1a6378a904bcfda8b3ff89a25f74a8382fd
Author: patrick <patrick@openbsd.org>
Date:   Fri Feb 12 16:16:10 2021 +0000

    pf_remove_divert_state() is an entry point into pf, modifying the pf state
    table.  Hence we have to grab both the pf lock and the pf state lock.
    
    Found by dlg@
    ok bluhm@ sashan@

 sys/net/pf.c | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

commit d3e7e8bfaa80a92f7ba41f4a8ae98451375792a5
Author: bluhm <bluhm@openbsd.org>
Date:   Fri Feb 12 13:48:31 2021 +0000

    Fix null pointer dereference in pf_route6().  Embedding scope into
    addresses that come from pf cannot be right, so remove the code.
    Coverity CID 1501718
    OK dlg@ claudio@

 sys/net/pf.c | 4 +---
 1 file changed, 1 insertion(+), 3 deletions(-)

commit d7220220b7edab0576584f12b36dc5556e577b7d
Author: patrick <patrick@openbsd.org>
Date:   Tue Feb 9 23:37:54 2021 +0000

    pfsync_state_import() must not be called with the pf state lock held,
    since the actual modification of the state table is done by a call to
    pf_state_insert(), which takes the pf state lock itself.  Other calls
    to pfsync_state_import() also only have the pf lock.
    
    Reported-by: syzbot+d6ea8620b43dc69ecbc6@syzkaller.appspotmail.com
    ok bluhm@

 sys/net/pf_ioctl.c | 4 +---
 1 file changed, 1 insertion(+), 3 deletions(-)

commit 76d6a2bf54552deea333fea759971f73d6efc225
Author: patrick <patrick@openbsd.org>
Date:   Tue Feb 9 14:06:19 2021 +0000

    Activate use of PF_LOCK() by removing the WITH_PF_LOCK ifdefs.
    
    Silence from the network group
    ok sashan@

 sys/net/if_pfsync.c | 15 +--------------
 sys/net/pf_ioctl.c  |  4 +---
 sys/net/pf_norm.c   |  8 +-------
 3 files changed, 3 insertions(+), 24 deletions(-)

commit 2d1fcc79dc4d10fc9b63bb9bf17c5622eda82c67
Author: sashan <sashan@openbsd.org>
Date:   Thu Feb 4 00:55:41 2021 +0000

    make if_pfsync.c a better friend with PF_LOCK
    
    The code delivered in this change is currently disabled. Brave souls
    may enable the code by adding -DWITH_PF_LOCK when building customized
    kernel. Big thanks goes to Hrvoje@ for providing test equipment and
    testing.
    
    As soon as we enter the next release cycle, the WITH_PF_LOCK will be
    defined as default option for MP kernels.
    
    OK dlg@

 sys/net/if_pfsync.c | 549 ++++++++++++++++++++++++++++++++++++----------------
 sys/net/if_pfsync.h |   4 +-
 sys/net/pf.c        |   8 +-
 3 files changed, 383 insertions(+), 178 deletions(-)

commit 251649164bf66ee51a475847245386750d55d5c3
Author: dlg <dlg@openbsd.org>
Date:   Wed Feb 3 07:41:12 2021 +0000

    change pf_route so pf only runs when packets enter and leave the stack.
    
    before this change pf_route operated on the semantic that pf runs
    when packets go over an interface, so when pf_route changed which
    interface the packet was on it would run pf_test again. this change
    changes (restores) the semantic that pf is only supposed to run
    when packets go in or out of the network stack, even if route-to
    is responsibly for short circuiting past the network stack.
    
    just to be clear, for normal packets (ie, those not touched by
    route-to/reply-to/dup-to), there isn't a difference between running
    pf when packets enter or leave the stack, or having pf run when a
    packet goes over an interface.
    
    the main reason for this change is that running the same packet
    through pf multiple times creates confusion for the state table.
    by default, pf states are floating, meaning that packets are matched
    to states regardless of which interface they're going over. if a
    packet leaving on em0 is rerouted out em1, both traversals will end
    up using the same state, which at best will make the accounting
    look weird, or at worst fail some checks in the state and get
    dropped.
    
    another reason for this commit is is to make handling of the changes
    that route-to makes consistent with other changes that are made to
    packet. eg, when nat is applied to a packet, we don't run pf_test
    again with the new addresses.
    
    the main caveat with this diff is you can't have one rule that
    pushes a packet out a different interface, and then have a rule on
    that second interface that NATs the packet. i'm not convinced this
    ever worked reliably or was used much anyway, so we don't think
    it's a big concern.
    
    discussed with many, with special thanks to bluhm@, sashan@ and
    sthen@ for weathering most of that pain.
    ok claudio@ sashan@ jmatthew@

 sys/net/pf.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 5812a4ad62ca07807ac0bc59f22eb8813e6069bc
Author: dlg <dlg@openbsd.org>
Date:   Mon Feb 1 00:31:04 2021 +0000

    change route-to so it sends packets to IPs instead of interfaces.
    
    this is a significant (and breaking) reworking of the policy based
    routing that pf can do. the intention is to make it as easy as
    nat/rdr to use, and more robust when it's operating.
    
    the main reasons for this change are:
    
    - route-to, reply-to, and dup-to do not work with pfsync
    
     this is because the information about where to route-to is stored in
     rules, and it is hard to have a ruleset synced between firewalls,
     and impossible to have them synced 100% of the time.
    
    - i can make my boxes panic in certain situations using route-to
    
     yeah...
    
    - the configuration and syntax for route-to rules are confusing.
    
     the argument to route-to and co is an interace name with an optional
     ip address. there are several problems with this. one is that people
     tend to think about routing as sending packets to peers by their
     address, not by the interface they're reachable on. another is that
     we currently have no way to synchronise interface topology information
     between firewalls, so using an interface to say where packets go
     means we can't do failover of these states with pfsync. another
     is that a change in routing topology means a host may become
     reachable over a different interface. tying routing policy to
     interfaces gets in the way of failover and load balancing.
    
    this change does the following:
    
    - stores the route info in the state instead of the pf rule
    
     this allows route-to to keep working when the ruleset changes, and
     allows route-to info to be sent over pfsync. there's enough spare bits
     in pfsync messages that the protocol doesnt break.
    
     the caveat is that route-to becomes tied to pass rules that create
     state, like rdr-to and nat-to.
    
    - the argument to route-to etc is a destination ip address
    
     it's not limited to a next-hop address (thought a next-hop can be a
     destination address). this allows for the failover and load balancing
     referred to above.
    
    - deprecates the address@interface host syntax in pfctl
    
     because routing is done entirely by IPs, the interface is derived from
     the route lookup, not pf. any attempt to use the @interface syntax
     will fail now in all contexts.
    
    there's enthusiasm from proctor@ jmatthew@ and others
    ok sashan@ bluhm@

 sys/net/if_pfsync.c |  10 +--
 sys/net/pf.c        | 180 +++++++++++++++++++++-------------------------------
 sys/net/pfvar.h     |  10 +--
 3 files changed, 82 insertions(+), 118 deletions(-)

commit 008d8c136577862aacffffbf6c5dc2e7a22998ff
Author: dlg <dlg@openbsd.org>
Date:   Thu Jan 28 09:37:20 2021 +0000

    handle "once" rules before letting pfsync defer tx of a packet.
    
    pfsync may want to defer the transmission of a packet. it does this so
    it can try and get a state over to a peer firewall before a host may
    send a reply to the peer, which would get dropped cos there's no
    matching state.
    
    i think the once rule processing should happen before that. the state
    is created from the rule, whether the packet the state is for goes out
    immediately or not shouldn't matter.
    
    ok sashan@

 sys/net/pf.c | 30 +++++++++++++++---------------
 1 file changed, 15 insertions(+), 15 deletions(-)

commit 07fecaf2ae862a82468ad35442df66c53a2559e1
Author: dlg <dlg@openbsd.org>
Date:   Wed Jan 27 23:53:35 2021 +0000

    if the route resolved in pf_route is invalid, generate an icmp error.
    
    of course this is limited to the !dup-to case.
    
    ok sashan@ bluhm@

 sys/net/pf.c | 11 ++++++++++-
 1 file changed, 10 insertions(+), 1 deletion(-)

commit 80bc0a3f809e78e72d30f4d949cd97e1054ca935
Author: dlg <dlg@openbsd.org>
Date:   Wed Jan 27 04:46:21 2021 +0000

    have pf_route{,6} clear the pf_pdesc mbuf ref early for route-to/reply-to.
    
    pf_route and pf_route6 are called to take over delivery of the
    packet with route-to and reply-to instead of letting it get processed
    normally. for the dup-to handling, it copies the mbuf but leaves
    the original mbuf in place. pf_route takes over the packet by
    clearing the mbuf pointer in the pf_pdesc struct. this diff moves
    the clearing of that pointer to the start of the function, rather
    than checking for dup-to again on the way out of the function.
    
    i think this is better because it means that it's more robust in
    the face of future code changes. even if that's not true, it's still
    shorter code in a forwarding path.
    
    ok sashan@ jmatthew@

 sys/net/pf.c | 8 +++-----
 1 file changed, 3 insertions(+), 5 deletions(-)

commit 670ae1ca2f741f5623d5b74af4ffbda999c3e86d
Author: dlg <dlg@openbsd.org>
Date:   Wed Jan 27 03:02:06 2021 +0000

    don't run copies of packets made by dup-to through pf_test.
    
    dup-to is kind of like what you do with a span port, but is a bit
    more fine grained. it copies packets in a connection out an interface
    so that connection can be monitored. it doesnt make sense for pf
    to see the copied packets and try to match or create new states for
    them either. at best it needs config to stop pf seeing the copies
    (eg, set skip on $dup_to_tgt_if). at worst it breaks the connections
    you're monitoring because the states in pf get confused.
    
    found while discussing larger route-to changes on tech@.
    
    ok bluhm@ sashan@

 sys/net/pf.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit c34fe1b3cf88eb8acf1a10a07d780dbf157bdf0b
Author: bluhm <bluhm@openbsd.org>
Date:   Wed Jan 20 23:25:19 2021 +0000

    An invalid packet may not have set src and dst in packet descriptor.
    Add a NULL check to prevent crash in pflog(4) introduced in previous
    commit.
    Reported-by: syzbot+c6d2f2ad34b822bce98a@syzkaller.appspotmail.com

 sys/net/if_pflog.c | 16 +++++++++-------
 1 file changed, 9 insertions(+), 7 deletions(-)

commit a0942b10af817d9babc3e6a5ec8005dfb7e4e3e8
Author: bluhm <bluhm@openbsd.org>
Date:   Wed Jan 20 13:40:15 2021 +0000

    Print rewritten addresses in tcpdump(8) logged with pflog(4) for
    rdr-to, nat-to, af-to rules.  The kernel uses the information from
    the packet description and fills it into the fields in the pflog
    header.  While doing this, it is trival to figure out whether the
    packet has been rewritten.
    OK sashan@

 sys/net/if_pflog.c | 13 ++++++++++---
 1 file changed, 10 insertions(+), 3 deletions(-)

commit 2cbebc019f52ca82e5fb8c4ec5d5ed5614c8fef5
Author: bluhm <bluhm@openbsd.org>
Date:   Tue Jan 19 22:22:23 2021 +0000

    pflog(4) tried to log the translated packet with rdr-to, nat-to,
    and af-to addresses and ports applied.  Therefore it created a mbuf
    chain on the stack with a partial copy.  This is too complicated
    for IP options, extension header, NAT46 af-to, and fragmented mbuf
    chains.  It even caused a crash in syzkaller.  Usually the length
    checks in pf_setup_pdesc() rejected the faked mbuf and the goto
    copy logged the packet unmodified.  Remove the pflog_mtap() function
    and call bpf_mtap_hdr() directly.  As the old buggy code was bypassed
    in most cases, tcpdump(8) output of pflog does not change.
    Uncondionally log the unmodified packet.
    Reported-by: syzbot+947e89e06ac3fec187d0@syzkaller.appspotmail.com
    OK sashan@

 sys/net/if_pflog.c | 141 +----------------------------------------------------
 sys/net/pf.c       |  13 ++---
 2 files changed, 5 insertions(+), 149 deletions(-)

commit e2b629398376d04c74ab3f45ae067161fd27c4e4
Author: mvs <mvs@openbsd.org>
Date:   Mon Jan 18 18:29:19 2021 +0000

    Convert ifunit() to if_unit(9).
    
    ok sashan@

 sys/net/if_pfsync.c | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

commit 74cd0baeececc34944a03856094a4dcf5c732d0f
Author: bluhm <bluhm@openbsd.org>
Date:   Sat Jan 16 13:09:46 2021 +0000

    The sysctl variable net.inet.ip.forwarding is checked before
    ip_input() passes the packet to ip_forward().  But with an af-to
    rule, pf(4) calls ip_forward() directly.  Check the forwarding
    sysctl also in pf to get consistent behavior.  This requires to set
    both ip and ip6 forwarding to get packet flow in both directions
    over af-to rules.
    OK kn@

 sys/net/pf.c | 26 +++++++++++++++++++-------
 1 file changed, 19 insertions(+), 7 deletions(-)

commit 5590171a8d67f0ebce08ae5b2fc443f2ad932848
Author: bluhm <bluhm@openbsd.org>
Date:   Fri Jan 15 22:27:49 2021 +0000

    Remove a check that bypasses pf state tests.  It dates back to 2003
    when NAT was implemented differently.  Now it does not seem to make
    sense anymore.  sashan@ has identified cases where it does harm.
    dlg@ wants to remove it to simplify route-to code.
    from dlg@; OK sashan@

 sys/net/pf.c | 8 +-------
 1 file changed, 1 insertion(+), 7 deletions(-)

commit 836d0133ad827a0c2cece89c40cf8a4500f6c8cb
Author: tb <tb@openbsd.org>
Date:   Thu Jan 14 09:44:33 2021 +0000

    Fix build without carp: ifp0 is only used within #if NCARP > 0.
    
    ok kn mvs

 sys/net/pf.c | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

commit e70d9b4245f7f0652c6c683ef33a2b4c0df40dae
Author: mvs <mvs@openbsd.org>
Date:   Wed Jan 13 09:13:30 2021 +0000

    Link pflog(4) instances to `pflog_ifs' list instead of allocating
    `pflogifs' array. This was done to prevent panics caused by internal
    malloc(9) limit.
    
    Also we avoid the case while single pflog(4) interface with a high index
    allocates an array for all indices below and eats up kernel memory.
    Since we have a very little count of pflog(4) interfaces linear search
    does not performance impact.
    
    ok bluhm@ claudio@ kn@

 sys/net/if_pflog.c | 75 +++++++++++++++++++-----------------------------------
 sys/net/if_pflog.h |  8 +++---
 2 files changed, 31 insertions(+), 52 deletions(-)

commit f6d3bf21b274662ea88e4e2d963249cb83c2035e
Author: bluhm <bluhm@openbsd.org>
Date:   Tue Jan 12 00:10:34 2021 +0000

    Sometimes a user ID was logged in pflog(4) although the logopt of
    the rule did not specify it.  Check the option again for the log
    rule in case another rule has triggered a socket lookup.  Remove
    logopt group, it is not documented and cannot work as struct pfloghdr
    does not contain a gid.  Rename PF_LOG_SOCKET_LOOKUP to PF_LOG_USER
    to express what it does.  The lookup involved is only an implemntation
    detail.
    OK kn@ sashan@ mvs@

 sys/net/if_pflog.c | 6 +++---
 sys/net/pfvar.h    | 4 ++--
 2 files changed, 5 insertions(+), 5 deletions(-)

commit 7f0da9a6542d1ab1cd01cf380bb2393340c39d64
Author: kn <kn@openbsd.org>
Date:   Mon Jan 11 21:50:56 2021 +0000

    Remove unused start routine
    
    pflog(4) does not send or generate packets by design.
    
    OK mvs sashan

 sys/net/if_pflog.c | 13 +------------
 1 file changed, 1 insertion(+), 12 deletions(-)

commit 16b8f7a471d155a199400718935c2a668c5318a0
Author: bluhm <bluhm@openbsd.org>
Date:   Mon Jan 4 12:48:27 2021 +0000

    Minor refactoring in pf(4).  Note that struct pfsync_state is no
    longer memcopied but assigned.  Alignment should not be an issue
    as it is __packed.
    Part of a larger diff from dlg@; OK dlg@ sashan@

 sys/net/if_pfsync.c | 32 +++++++++++++++-----------------
 sys/net/pf.c        | 22 ++++------------------
 2 files changed, 19 insertions(+), 35 deletions(-)

commit 39c2a1337a9413565cfbd66e4bd09ea8181b627e
Author: kn <kn@openbsd.org>
Date:   Wed Dec 16 18:00:44 2020 +0000

    Reject rules with invalid port ranges
    
    Ranges where the left boundary is bigger than the right one are always bogus
    as they work like `port any' (`port 34<>12' means "all ports") or in way
    that inverts the rule's action (`pass ... port 34:12' means "pass no port at
    all").
    
    Add checks for all ranges and invalidate those that yield no or all ports.
    
    For this to work on redirections, make pfctl(8) pass the range's type,
    otherwise boundary including ranges are not detected as such;  that is to
    say, `struct pf_pool's `port_op' member was unused in the kernel so far.
    
    `rdr-to' rules with invalid ranges could panic the kernel when hit.
    Reported-by: syzbot+9c309db201f06e39a8ba@syzkaller.appspotmail.com
    
    OK sashan

 sys/net/pf_ioctl.c | 24 +++++++++++++++++++++++-
 1 file changed, 23 insertions(+), 1 deletion(-)

commit 4bd0ce1d82cdb4b868f828db388c35f1e007c0c8
Author: jan <jan@openbsd.org>
Date:   Sat Dec 12 22:59:21 2020 +0000

    Correct wrong type of variable and remove useless casts.
    
    OK bluhm@

 sys/net/pf_lb.c | 10 ++++------
 1 file changed, 4 insertions(+), 6 deletions(-)

commit 471f2571dbcecd0ac12f9020fb846fcac790084a
Author: jan <jan@openbsd.org>
Date:   Sat Dec 12 11:48:52 2020 +0000

    Rename the macro MCLGETI to MCLGETL and removes the dead parameter ifp.
    
    OK dlg@, bluhm@
    No Opinion mpi@
    Not against it claudio@

 sys/net/if_pfsync.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 22c79bfc5a343ef1dfe575157d8cd8a0dc743910
Author: dlg <dlg@openbsd.org>
Date:   Thu Dec 10 06:40:22 2020 +0000

    when setting a flowid, set the M_FLOWID csum_flags bit too.
    
    this "fixes" TCP going over an interface with fq codel enabled. the
    way the codel code classifies a packet without a flowid set is to
    randomly assign it to a bucket. this in turn means that packets
    will get reordered, and tcp hates that.
    
    sthen was able to find a test case and narrow down at which time
    the problem appeared, helped greatly.
    
    tested by sthen@ and millert@
    ok sashan@ jmatthew@

 sys/net/pf.c | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

commit 4e62cf09d9b60392fb204355196d717aa8b5ffc5
Author: sashan <sashan@openbsd.org>
Date:   Mon Dec 7 08:29:41 2020 +0000

    synproxy should be processing incoming SYN packets only.
    issue noticed by sthen@. fix discussed with bluhm@ and procter@
    
    OK bluhm@, kn@, procter@

 sys/net/pf.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 610c242e11d3a47e9d6d59e0de7e6458b4f9d5f2
Author: sashan <sashan@openbsd.org>
Date:   Thu Oct 22 12:25:20 2020 +0000

    - missing NET_UNLOCK() in pf_ioctl.c error path
    
    Reported-by: syzbot+b9af9c29ed1a6dabda25@syzkaller.appspotmail.com
    
    OK anton@

 sys/net/pf_ioctl.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit b606633baa2efaa6cdd633b3f61e8c1a4a7a3e70
Author: sashan <sashan@openbsd.org>
Date:   Wed Oct 21 08:08:04 2020 +0000

    - move NET_LOCK() further down in pf_ioctl.c. Also move memory allocations
      outside of NET_LOCK()/PF_LOCK() scope in easy spots.
    
    OK kn@

 sys/net/pf_ioctl.c | 303 ++++++++++++++++++++++++++++++++++++++++++-----------
 1 file changed, 239 insertions(+), 64 deletions(-)

commit 31da571e3a31e0cfe5efe8d67034fe5f61580a90
Author: naddy <naddy@openbsd.org>
Date:   Wed Oct 14 19:22:14 2020 +0000

    replace a MAXPATHLEN that slipped back in with PATH_MAX so userland won't
    have to pull in <sys/param.h>
    ok kn@ sashan@ deraadt@

 sys/net/pfvar.h | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit cfacd38e8821bfa142553bf5407555860d0a0915
Author: claudio <claudio@openbsd.org>
Date:   Fri Oct 2 09:14:33 2020 +0000

    relax check for valid onrdomain range. onrdomain is -1 if the value is
    unused by the rule. So skip the rest of the check in that case.
    Fixes rulest loading for semarie@
    OK semarie@

 sys/net/pf_ioctl.c | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

commit 060fb83795e1fc2afde4199fd3a96ae5f421fd1b
Author: kn <kn@openbsd.org>
Date:   Thu Oct 1 14:02:08 2020 +0000

    rdomain IDs do not need to exist for "on rdomain N" to work
    
    Unlike "... rtable N", pf.conf(5)'s "on rdomain N" does not alter packet
    state and will always work no matter if rdomain N currently exists or not,
    i.e. the rule "pass on rdomain 42" will simply match (and pass) packets if
    rdomain 42 exists, and it will simply not match (neither pass nor block)
    packets if 42 does not exist.
    
    There's no need to reload the ruleset whenever routing domains are created
    or deleted, which can already be observed now by creating an rdomain,
    loading rules referencing it and deleting the same rdomain immediately
    afterwards: pf will continue to work as expected.
    
    Relax both pfctl(8)'s parser check as well as pf(4)'s copyin routine to
    accept any valid routing domain ID without expecting it to exist at the time
    of ruleset creation - this lifts the requirement to create rdomains before
    referencing them in pf.conf while keeping pf behaviour unchanged.
    
    Prompted by yasuoka's recent pfctl parse.y r1.702 commit requiring an rtable
    to exist upon ruleset creation.
    
    Discussed with claudio and bluhm at k2k20.
    
    Feedback sashan
    OK sashan yasouka claudio

 sys/net/pf_ioctl.c | 8 +++-----
 1 file changed, 3 insertions(+), 5 deletions(-)

commit e8ee43aaee9616e969ffc92773690761dc2b6614
Author: mvs <mvs@openbsd.org>
Date:   Fri Aug 28 12:01:48 2020 +0000

    Add missing #if's to fix build without bpf(4).
    
    ok deraadt@

 sys/net/if_pflog.c | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

commit d4c262408bc9cf29e13a8fa27e2032e62ac7cdbb
Author: kn <kn@openbsd.org>
Date:   Mon Aug 24 15:41:15 2020 +0000

    Rehash main ruleset after rule expiration
    
    When "once" rules expire, they are removed from the active ruleset,
    hence the main ruleset needs to be rehashed iff itself contains once rules.
    
    After the previous commit, pf_setup_pfsync_matching() became much simpler
    but its name even less accurate;  simplify it further and rename it to
    pf_calc_chksum() while here.
    
    Admins using "once" rules in combination with pfsync(4) are hopefully aware
    of this caveat (self-changing rulesets) already, but now the checksum in
    "pfctl -v -s info" actually indicates out-of-sync rulesets and is no longer
    misleading.
    
    OK sashan

 sys/net/pf_ioctl.c | 21 +++++++++------------
 1 file changed, 9 insertions(+), 12 deletions(-)

commit d13e571b26fdbf3ca2dbb1f5316356782620cf67
Author: kn <kn@openbsd.org>
Date:   Mon Aug 24 15:30:58 2020 +0000

    Remove ptr_array from struct pf_ruleset
    
    Each ruleset's rules are stored in a TAILQ called "ptr" with "rcount"
    representing the number of rules in the ruleset;  "ptr_array" points to an
    array of the same length.
    
    "ptr" is backed by pool_get(9) and may change in size as "expired" rules
    get removed from the ruleset - see "once" in pf.conf(5).
    
    "ptr_array" is allocated momentarily through mallocarray(9) and gets filled
    with the TAILQ entries, so that the sole user pfsync(4) can access the list
    of rules by index to pick the n-th rule during state insertion.
    
    Remove "ptr_array" and make pfsync iterate over the TAILQ instead to get the
    matching rule's index.  This simplifies both code and data structures and
    avoids duplicate memory management.
    
    OK sashan

 sys/net/if_pfsync.c | 11 +++++++----
 sys/net/pf_ioctl.c  | 21 ++-------------------
 sys/net/pfvar.h     |  3 +--
 3 files changed, 10 insertions(+), 25 deletions(-)

commit 0e70c421686277e7363578ca32cb8a999f499cfd
Author: kn <kn@openbsd.org>
Date:   Fri Aug 21 22:59:27 2020 +0000

    Leave default ifq_maxlen handling to ifq_init()
    
    Most clonable interface drivers (except bridge, enc, loop, pppx,
    switch, trunk and vlan) initialise the send queue's length to IFQ_MAXLEN
    during *_clone_create() even though ifq_init(), which is eventually called
    through if_attach(), does the same.
    
    Remove all early "ifq_set_maxlen(&ifq->if_snd, IFQ_MAXLEN);" lines to leave
    it to ifq_init() and have clonable drivers a tad more in sync.
    
    OK mvs

 sys/net/if_pflog.c  | 3 +--
 sys/net/if_pfsync.c | 3 +--
 2 files changed, 2 insertions(+), 4 deletions(-)

commit 6dab8d3655d06e5759cf33eb8b6edeba2abf9a53
Author: kn <kn@openbsd.org>
Date:   Tue Aug 11 23:40:54 2020 +0000

    Run start routing without KERNEL_LOCK()
    
    pfsyncstart() does not require the big lock, make it use the ifq API.
    
    OK mvs

 sys/net/if_pfsync.c | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

commit c7bb43b135182e950dd28d10eb69a16e993de9d6
Author: dlg <dlg@openbsd.org>
Date:   Thu Jul 30 03:30:04 2020 +0000

    make pflog more mpsafe with variables on the stack instead of globals.
    
    pflog wants to copy and patch the packet that is being logged to
    properly show if it is being transformed, and it does this by copying
    the ip and transport headers into a local mbuf and patching them
    there, and then wiring the remaining data from the original packet
    into an mbuf chain hanging off this patched mbuf.
    
    it's just unfortunate that the mbufs it was using are global and
    not locked. this is particularly unfortunate if you're running the
    stack in parallel on multiple cpus and pflog gets to running
    concurrently.
    
    this changes pflog to use an mbuf on the stack to copy the headers
    into and patch. the mbuf used to point to the trailing data has
    been replaced with an m_hdr, also on the stack, like what bpf_mtap_ether
    does to skip past where a vlan shim should be.
    
    ok sashan@ jmatthew@

 sys/net/if_pflog.c | 43 ++++++++++++++++++-------------------------
 1 file changed, 18 insertions(+), 25 deletions(-)

commit 1af47697ef58c38f61988320bbad0117fd45c950
Author: mvs <mvs@openbsd.org>
Date:   Wed Jul 29 12:08:15 2020 +0000

    pfsync(4) holds pointer to corresponding `ifnet' as `sc_sync_if'. This
    pointer obtained by ifunit() and it's reference counter is not bumped.
    This can cause use after free issue. Replace this pointer by interface
    index.
    
    ok dlg@ sashan@

 sys/net/if_pfsync.c | 106 ++++++++++++++++++++++++++++++----------------------
 1 file changed, 62 insertions(+), 44 deletions(-)

commit 511c53b1292838559a33b3d8e51ffa1f0e25a599
Author: yasuoka <yasuoka@openbsd.org>
Date:   Wed Jul 29 02:32:13 2020 +0000

    Fix previous commit which referred wrong address and returned wrong
    value.
    
    ok sashan

 sys/net/pf_lb.c | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

commit 26b62979914d6a4b0f84caad2286d5a9821237d3
Author: yasuoka <yasuoka@openbsd.org>
Date:   Tue Jul 28 16:47:41 2020 +0000

    Use the table on root always if current table is not active.
    
    ok sashan

 sys/net/pf_lb.c    | 42 +++++++++++++++++++++---------------------
 sys/net/pf_table.c | 28 ++++++++++++++++++----------
 sys/net/pfvar.h    |  4 +++-
 3 files changed, 42 insertions(+), 32 deletions(-)

commit 5da81402b19e42920b16d3a0ade962b28d684f78
Author: mvs <mvs@openbsd.org>
Date:   Fri Jul 24 18:17:14 2020 +0000

    Use interface index instead of pointer to `ifnet' in carp(4).
    
    ok sashan@

 sys/net/pf.c | 24 +++++++++++++++---------
 1 file changed, 15 insertions(+), 9 deletions(-)

commit 4cb186b8253a910ea9fce3f89a177045d4eefc79
Author: yasuoka <yasuoka@openbsd.org>
Date:   Fri Jul 24 14:06:33 2020 +0000

    Increase state counter for least-states when the address is selected
    by sticky-address.  Also fix the problem that the interface which is
    specified by the selected table entry is not used properly.
    
    ok jung sashan

 sys/net/pf_lb.c | 72 ++++++++++++++++++++++++++++++++++++++-------------------
 1 file changed, 48 insertions(+), 24 deletions(-)

commit 7f1a6fd2a8fb2ffbef8c3ff05fd862fd599efd5f
Author: henning <henning@openbsd.org>
Date:   Tue Jul 21 14:13:17 2020 +0000

    when calculating the ruleset's checksum, skip automatic table names.
    the checksum is exclusively used for pfsync to verify rulesets are identical
    on all nodes. the automatic table names are random and have a near zero
    chance to match. found at a customer in zurich
    ok sashan kn

 sys/net/pf_ioctl.c | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

commit 9c6ad19ba47d5e4eab34a993293873932b3e574a
Author: henning <henning@openbsd.org>
Date:   Tue Jul 21 14:10:51 2020 +0000

    rename PF_OPT_TABLE_PREFIX to PF_OPTIMIZER_TABLE_PFX and move it to pfvar.h
    OPT is misleading and usually refers to command line arguments to pfctl
    ok sashan kn

 sys/net/pfvar.h | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit 0cae21bd7dc539ce7833e6c95a4e4259d9044374
Author: patrick <patrick@openbsd.org>
Date:   Fri Jul 10 13:26:36 2020 +0000

    Change users of IFQ_SET_MAXLEN() and IFQ_IS_EMPTY() to use the "new" API.
    
    ok dlg@ tobhe@

 sys/net/if_pflog.c  | 4 ++--
 sys/net/if_pfsync.c | 4 ++--
 2 files changed, 4 insertions(+), 4 deletions(-)

commit 98da7c78c1129e233f4db1a3d25af46bb08b1a17
Author: patrick <patrick@openbsd.org>
Date:   Fri Jul 10 13:23:34 2020 +0000

    Change users of IFQ_PURGE() to use the "new" API.
    
    ok dlg@ tobhe@

 sys/net/if_pflog.c  | 4 ++--
 sys/net/if_pfsync.c | 4 ++--
 2 files changed, 4 insertions(+), 4 deletions(-)

commit 38e8113e1d44d9c1366bf6b2d859748b5bcb35a0
Author: sashan <sashan@openbsd.org>
Date:   Sun Jun 28 06:40:14 2020 +0000

    state import should accept AF_INET/AF_INET6 only
    
    Reported-by: syzbot+6fef0091252d57113bfb@syzkaller.appspotmail.com
    
    ok kn@

 sys/net/if_pfsync.c | 15 ++++++++++++---
 1 file changed, 12 insertions(+), 3 deletions(-)

commit 3209772dfcc3950dd5df01bc44eebf75e637511e
Author: cheloha <cheloha@openbsd.org>
Date:   Wed Jun 24 22:03:40 2020 +0000

    kernel: use gettime(9)/getuptime(9) in lieu of time_second(9)/time_uptime(9)
    
    time_second(9) and time_uptime(9) are widely used in the kernel to
    quickly get the system UTC or system uptime as a time_t.  However,
    time_t is 64-bit everywhere, so it is not generally safe to use them
    on 32-bit platforms: you have a split-read problem if your hardware
    cannot perform atomic 64-bit reads.
    
    This patch replaces time_second(9) with gettime(9), a safer successor
    interface, throughout the kernel.  Similarly, time_uptime(9) is replaced
    with getuptime(9).
    
    There is a performance cost on 32-bit platforms in exchange for
    eliminating the split-read problem: instead of two register reads you
    now have a lockless read loop to pull the values from the timehands.
    This is really not *too* bad in the grand scheme of things, but
    compared to what we were doing before it is several times slower.
    
    There is no performance cost on 64-bit (__LP64__) platforms.
    
    With input from visa@, dlg@, and tedu@.
    
    Several bugs squashed by visa@.
    
    ok kettenis@

 sys/net/if_pfsync.c | 26 +++++++++++++-------------
 sys/net/pf.c        | 40 ++++++++++++++++++++--------------------
 sys/net/pf_if.c     | 10 +++++-----
 sys/net/pf_ioctl.c  | 12 ++++++------
 sys/net/pf_norm.c   |  8 ++++----
 sys/net/pf_table.c  | 20 ++++++++++----------
 6 files changed, 58 insertions(+), 58 deletions(-)

commit 379654e8aeea3de2831b9211617a4fafc616564f
Author: dlg <dlg@openbsd.org>
Date:   Wed Jun 17 06:45:22 2020 +0000

    make ph_flowid in mbufs 16bits by storing whether it's set in csum_flags.
    
    i've been wanting to do this for a while, and now that we've got
    stoeplitz and it gives us 16 bits, it seems like the right time.

 sys/net/pf.c | 8 +++-----
 1 file changed, 3 insertions(+), 5 deletions(-)

commit a7d8badaea099544bf43bded5c1d916c89d6280a
Author: yasuoka <yasuoka@openbsd.org>
Date:   Thu Jun 4 04:27:51 2020 +0000

    Fix pfr_kentry_byaddr() to be used for a rule in an anchor.  It
    couldn't find an entry if its table is attached a table on the root.
    This fixes the problem "route-to <TABLE> least-states" doesn't work.
    The problem is found by IIJ.
    
    OK sashan

 sys/net/pf_table.c | 64 ++++++++++++++++++++----------------------------------
 1 file changed, 23 insertions(+), 41 deletions(-)

commit 4d5cbc65b3f249a15784c3b64c2933d8466f7caa
Author: mpi <mpi@openbsd.org>
Date:   Wed May 27 11:19:28 2020 +0000

    Document the various flavors of NET_LOCK() and rename the reader version.
    
    Since our last concurrency mistake only ioctl(2) ans sysctl(2) code path
    take the reader lock.  This is mostly for documentation purpose as long as
    the softnet thread is converted back to use a read lock.
    
    dlg@ said that comments should be good enough.
    
    ok sashan@

 sys/net/pf_ioctl.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 3d97bff14298474002b520e82ff3c664e4465720
Author: sashan <sashan@openbsd.org>
Date:   Sun Apr 19 22:31:06 2020 +0000

    fix insufficient input sanitization in pf_rulecopyin() and pf_pool_copyin()
    
    Reported-by: syzbot+d0639632a0affe0a690e@syzkaller.appspotmail.com
    Reported-by: syzbot+ae5e359d7f82688edd6a@syzkaller.appspotmail.com
    
    OK anton@

 sys/net/pf_ioctl.c | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

commit 3c6c39936460d119f3d0d08761b69e36164ad920
Author: mpi <mpi@openbsd.org>
Date:   Sun Apr 12 11:56:52 2020 +0000

    Stop processing packets under non-exclusive (read) netlock.
    
    Prevent concurrency in the socket layer which is not ready for that.
    
    Two recent data corruptions in pfsync(4) and the socket layer pointed
    out that, at least, tun(4) was incorrectly using NET_RUNLOCK().  Until
    we find a way in software to avoid future mistakes and to make sure that
    only the softnet thread and some ioctls are safe to use a read version
    of the lock, put everything back to the exclusive version.
    
    ok stsp@, visa@

 sys/net/if_pfsync.c | 6 +++---
 sys/net/pf_ioctl.c  | 6 +++---
 2 files changed, 6 insertions(+), 6 deletions(-)

commit de721aa40991755732716a361d971e00b9f7864a
Author: stsp <stsp@openbsd.org>
Date:   Sat Apr 11 10:56:42 2020 +0000

    Avoid triggering KASSERT for bogus reason in pfsync_sendout with PFSYNC_DEBUG.
    ok mpi@

 sys/net/if_pfsync.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit f0da91f32678eafc14df582c795aa2e46fa7e2b3
Author: stsp <stsp@openbsd.org>
Date:   Sat Apr 11 10:23:16 2020 +0000

    fix build with PFSYNC_DEBUG by switching a format string from %d to %zd

 sys/net/if_pfsync.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 63cf9471a61d4f7a002fa265fd31e4f833fe840f
Author: mpi <mpi@openbsd.org>
Date:   Tue Feb 18 12:13:39 2020 +0000

    Cleanup <sys/kthread.h> and <sys/proc.h> includes.
    
    Do not include <sys/kthread.h> where it is not needed and stop including
    <sys/proc.h> in it.
    
    ok visa@, anton@

 sys/net/pf_ioctl.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 4804479228fbb3123e7e38fe7132f93163a634dd
Author: bluhm <bluhm@openbsd.org>
Date:   Wed Jan 8 21:48:59 2020 +0000

    Check address family of pf ioctl(2) DIOCNATLOOK parameter at kernel
    entry instead of calling panic() due to unhandled af.
    Reported-by: syzbot+92be143c2dd1746cf2af@syzkaller.appspotmail.com
    from Benjamin Baier

 sys/net/pf_ioctl.c | 14 +++++++++++++-
 1 file changed, 13 insertions(+), 1 deletion(-)

commit ad87be15a422e16f1f3208327599f073a088d400
Author: kn <kn@openbsd.org>
Date:   Tue Nov 26 19:57:52 2019 +0000

    Use proper NUL byte not zero with strings
    
    No object change
    OK sashan

 sys/net/pf_ioctl.c | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

commit f6949e646d06fd938b13a9999ec975b927addbe9
Author: sashan <sashan@openbsd.org>
Date:   Tue Nov 26 18:50:29 2019 +0000

    fix kernel crash in pf_ioctl with WITH_PF_LOCK and NET_TASKQ > 1
    
    the problem was introduced with a "mechanical" patch, which
    replaced all "breaks;" with "PF_UNLOCK(); break;" This is wrong
    for case of DIOCGETRULESETS.
    
    issue analyzed and patch created by Joerg Goltermann <jg@osn.de>
    
    OK tb@

 sys/net/pf_ioctl.c | 6 ++----
 1 file changed, 2 insertions(+), 4 deletions(-)

commit 3a2a944f03a833aa61625f841cefd067c69ebf69
Author: dlg <dlg@openbsd.org>
Date:   Mon Nov 18 03:23:41 2019 +0000

    don't leak the the task struct used for the addrhook in pfi_detach_ifnet.

 sys/net/pf_if.c | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

commit ca571ff055e4f2146be1dae512004ce24778b6c7
Author: otto <otto@openbsd.org>
Date:   Sun Nov 17 08:25:05 2019 +0000

    "set delay" never worked as committed: the delay field was not copied
    in and the pf_pktdelay struct ws not declared and initialzed properly.
    ok rob@ kn@

 sys/net/pf.c       | 6 +++---
 sys/net/pf_ioctl.c | 3 ++-
 sys/net/pfvar.h    | 5 +++--
 3 files changed, 8 insertions(+), 6 deletions(-)

commit f22742ab73d4232c93319a7e0ff237cb69eb42d9
Author: dlg <dlg@openbsd.org>
Date:   Fri Nov 8 07:16:29 2019 +0000

    convert interface address change hooks to tasks and a task_list.
    
    this follows what's been done for detach and link state hooks, and
    makes handling of hooks generally more robust.
    
    address hooks are a bit different to detach/link state hooks in
    that there's only a few things that register hooks (carp, pf, vxlan),
    but a lot of places to run the hooks (lots of ipv4 and ipv6 address
    configuration).
    
    an address hook cookie was in struct pfi_kif, which is part of the
    pf abi. rather than break pfctl -sI, this maintains the void * used
    for the cookie and uses it to store a task, which is then used as
    intended with the new api.

 sys/net/pf_if.c | 15 +++++++++------
 1 file changed, 9 insertions(+), 6 deletions(-)

commit 97b2944ceda74601c1f493fe3e483ed89992fca1
Author: dlg <dlg@openbsd.org>
Date:   Thu Nov 7 11:46:42 2019 +0000

    remove the detach and linkstate hooks when the parent is going away.
    
    i think this is a fix for a real bug. pfsync leaked the hooks it
    had on a parent^Wsyncdev when the parent went away. now there's
    KASSERTs to make sure all hooks are removed before an interface
    goes away, the leak caused the KASSERTs to fire and made the bug
    obvious.
    
    found by hrvoje popovski

 sys/net/if_pfsync.c | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

commit 4f5e51a4e9a138283295ab8b7f236f90bf0f58ce
Author: dlg <dlg@openbsd.org>
Date:   Thu Nov 7 07:36:31 2019 +0000

    turn the linkstate hooks into a task list, like the detach hooks.
    
    this is largely mechanical, except for carp. this moves the addition
    of the carp link state hook after we're committed to using the new
    interface as a carpdev. because the add can't fail, we avoid a
    complicated unwind dance. also, this tweaks the carp linkstate hook
    so it only updates the relevant carp interface, not all of the
    carpdevs on the parent.
    
    hrvoje popovski has tested an early version of this diff and it's
    generally ok, but there's some splasserts that this diff fires that
    i'll fix in an upcoming diff.
    
    ok claudio@

 sys/net/if_pfsync.c | 22 ++++++++--------------
 1 file changed, 8 insertions(+), 14 deletions(-)

commit 3fe9d1bd1154bd2f33ea9eb9c49bd45b08486a1a
Author: dlg <dlg@openbsd.org>
Date:   Wed Nov 6 03:51:26 2019 +0000

    replace the hooks used with if_detachhooks with a task list.
    
    the main semantic change is that things registering detach hooks
    have to allocate and set a task structure that then gets added to
    the list. this means if the task is allocated up front (eg, as part
    of carps softc or bridges port structure), it avoids the possibility
    that adding a hook can fail. a lot of drivers weren't checking for
    failure, and unwinding state in the event of failure in other parts
    was error prone.
    
    while doing this i discovered that the list operations have to be
    in a particular order, but drivers weren't doing that consistently
    either. this diff wraps the list ops up so you have to seriously
    go out of your way to screw them up.
    
    ive also sprinkled some NET_ASSERT_LOCKED around the list operations
    so we can make sure there's no potential for the list to be corrupted,
    especially while it's being run.
    
    hrvoje popovski has tested this a bit, and some issues he discovered
    have been fixed.
    
    ok sashan@

 sys/net/if_pfsync.c | 20 ++++++++------------
 1 file changed, 8 insertions(+), 12 deletions(-)

commit d04cdf616e902e5e240d92ece196b3ee47bf183b
Author: millert <millert@openbsd.org>
Date:   Thu Oct 17 11:23:49 2019 +0000

    Use -1 to indicate an invalid uid/gid, not UID_MAX and GID_MAX.
    This is clearer and more consistent with the rest of the kernel.
    OK deraadt@ sashan@

 sys/net/if_pflog.c |  4 ++--
 sys/net/pf.c       | 14 +++++++-------
 2 files changed, 9 insertions(+), 9 deletions(-)

commit f1d9eb9729dfae311f02f30dbeca129d9ca1f384
Author: dlg <dlg@openbsd.org>
Date:   Mon Sep 30 01:53:04 2019 +0000

    remove the "copy function" argument to bpf_mtap_hdr.
    
    it was previously (ab)used by pflog, which has since been fixed.
    apart from that nothing else used it, so we can trim the cruft.
    
    ok kn@ claudio@ visa@
    visa@ also made sure i fixed ipw(4) so i386 won't break.

 sys/net/if_pflog.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 22cf097d30f4c61a249bccdc185b6a591ada03ad
Author: dlg <dlg@openbsd.org>
Date:   Fri Sep 13 01:47:51 2019 +0000

    avoid the use of a custom bpf copy function.
    
    currently pflog prepares a pfloghdr and then passes that, the
    original mbuf, and a pflog copy function to bpf. bpf matches on the
    original packet, and then if bpf decides it wants the packet it
    uses the custom function to copy the packet for userland to read.
    the custom function patches the packet so you see the packet after
    nat and rdr and af-to and so on. however, this means bpf is matching
    on the original packet and reporting a patched packet.
    
    this is also the only use of a custom copy function in the tree,
    and it relies on some behaviours that should be internal to bpf to
    get away with it.
    
    this pulls the patching up so it's done before the packet is given
    to bpf. this simplifies the code a bit, and means bpf is now matching
    on and reporting the same packet. removing this custom copy code
    also means that we can get rid of that functionality from the
    bpf_mtap_hdr function.
    
    ok sashan@ visa@

 sys/net/if_pflog.c | 56 +++++++++++++++++-------------------------------------
 1 file changed, 17 insertions(+), 39 deletions(-)

commit 24161c9f09cd80f4a52f017c3ecc25a699fc5806
Author: sashan <sashan@openbsd.org>
Date:   Thu Aug 29 06:13:46 2019 +0000

    pf_state_insert() must grab state lock exclusively
    
    ok bluhm@

 sys/net/pf.c | 11 +++++++++--
 1 file changed, 9 insertions(+), 2 deletions(-)

commit 4d508ee4dad867bcbf5807b46d2286a4eabf0461
Author: sashan <sashan@openbsd.org>
Date:   Mon Aug 26 09:19:12 2019 +0000

    pf.conf "set timeout interval 1" causes kernel crash
    (bug reported and fix tested by Kor)
    
    ok kn@

 sys/net/pf.c | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

commit 745adf1799919f3eb95fc0da8a5d722933d660d9
Author: sashan <sashan@openbsd.org>
Date:   Thu Jul 18 20:45:10 2019 +0000

    follow up to 'once rule' expiration
    
    ok lteo@

 sys/net/pf.c | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

commit 8e5b33d31206dd8de7e5ffe650448ba333bdd232
Author: lteo <lteo@openbsd.org>
Date:   Thu Jul 18 02:03:46 2019 +0000

    This commit fixes two bugs involving PF once rules:
    
    1. If a packet happens to match an expired once rule before the rule is removed
       by the purge thread, the rule will be added to the pf_rule_gcl list again,
       eventually causing a kernel crash when the purge thread tries to remove the
       expired rule multiple times; and
    
    2. A packet that matches an expired once rule will still cause a state to be
       created, so a once rule is not truly a one shot rule while it is in that
       expired-but-not-purged time window.
    
    To fix both bugs, add a check in pf_test_rule() to prevent expired once rules
    from being added to pf_rule_gcl.  The check is added "early" in pf_test_rule()
    to prevent any new connections from creating state if they match the expired
    once rule.
    
    This commit also includes a tweak by sashan@ to ensure that only one PF task
    will mark a once rule as expired.  Here is sashan@'s commentary:
    
    "As soon as there will be more PF tasks running in parallel, we would be
    able to hit similar crash you are fixing now. The rules are covered by
    read lock, so with more PF tasks there might be two packets racing
    to expire at once rule at the same time. Using atomic_cas() is sufficient
    measure to serialize competing packets."
    
    tested by abieber@ who reported the kernel crash on bugs@
    ok sashan@

 sys/net/pf.c | 24 ++++++++++++++++++++----
 1 file changed, 20 insertions(+), 4 deletions(-)

commit fa5da0913a443a517798fb710198a50c4dd09388
Author: sashan <sashan@openbsd.org>
Date:   Thu Jul 11 09:39:52 2019 +0000

    fix NULL pointer dereference, reported and fix tested by sthen
    
    ok yasuoka

 sys/net/pf.c | 8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)

commit 1c2f8232eb8695a7e60fd44ceb934094043abe97
Author: yasuoka <yasuoka@openbsd.org>
Date:   Tue Jul 9 11:30:19 2019 +0000

    Fix previous commit which made src-node have a reference for the kif.
    Src-node should use the reference counter since it might live longer
    than its table entry, rule or the associated states.
    
    OK sashan

 sys/net/pf.c    |  4 +++-
 sys/net/pf_if.c | 16 ++++++++++++++--
 sys/net/pfvar.h |  6 ++++--
 3 files changed, 21 insertions(+), 5 deletions(-)

commit 05aee34c6b061799e7af7dc130f0e02a34e71b54
Author: mpi <mpi@openbsd.org>
Date:   Mon Jul 8 17:49:57 2019 +0000

    free(9) sizes for M_RTABLE.
    
    ok kn@

 sys/net/pf_table.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit b4470a7bf787a11ce971643e7df7f69db5a3d1ba
Author: yasuoka <yasuoka@openbsd.org>
Date:   Tue Jul 2 09:04:53 2019 +0000

    When source address tracking record is used for "route-to", the next
    hop interface configured with "route-to" was not used.  Keep the
    interface within the pf_src_node and use it when the record is used.
    
    OK sashan

 sys/net/pf.c    | 7 ++++---
 sys/net/pf_lb.c | 9 +++++++--
 sys/net/pfvar.h | 4 ++--
 3 files changed, 13 insertions(+), 7 deletions(-)

commit 3392d201d4abf7c814f6b048785afd3183beaa2d
Author: yasuoka <yasuoka@openbsd.org>
Date:   Mon Jul 1 12:13:51 2019 +0000

    Link the state and the source track to keep the source track while
    there are states which refer it.
    
    OK sashan

 sys/net/pf.c | 19 +++++++++----------
 1 file changed, 9 insertions(+), 10 deletions(-)

commit 2927dd4c60b0d75679c6105d009317b84f38e550
Author: mpi <mpi@openbsd.org>
Date:   Thu Jun 13 21:12:52 2019 +0000

    free(9) sizes.
    
    ok kn@

 sys/net/if_pflog.c | 7 +++----
 1 file changed, 3 insertions(+), 4 deletions(-)

commit b82d192b5f65a9c7874e171ed8a92d692ac77073
Author: mpi <mpi@openbsd.org>
Date:   Mon Jun 10 16:32:51 2019 +0000

    Use mallocarray(9) & put some free(9) sizes for M_IPMOPTS allocations.
    
    ok semarie@, visa@

 sys/net/if_pfsync.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

commit 12ba9659202edf067e2b3244d4a1d374587d19d8
Author: sashan <sashan@openbsd.org>
Date:   Tue Jun 4 23:00:43 2019 +0000

    pfsync_sendout() requires PF_LOCK()
    
    OK mpi@

 sys/net/if_pfsync.c | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

commit e658ee9ff6d361cb4e21c0e8f0450824bfc1829f
Author: claudio <claudio@openbsd.org>
Date:   Thu May 9 14:59:30 2019 +0000

    Add a sysctl accessor to struct pf_status. The pf_status only holds the
    current status and statistics and can be exported without super-user
    rights via sysctl to make it easier for tools like systat to access those.
    OK deraadt@, sashan@

 sys/net/pf_ioctl.c | 18 +++++++++++++++++-
 1 file changed, 17 insertions(+), 1 deletion(-)

commit 0db42a1fafb49002468d07e09f9adeadc062a255
Author: bluhm <bluhm@openbsd.org>
Date:   Wed Mar 20 20:07:28 2019 +0000

    States in pf(4) let ICMP and ICMP6 packets pass if they have a
    packet in their payload that matches an exiting connection.  It was
    not checked whether the outer ICMP packet has the same destination
    IP as the source IP of the inner protocol packet.  Enforce that
    these addresses match, to prevent ICMP packets that do not make
    sense.
    Issue found by Nicolas Collignon, Corentin Bayet, Eloi Vanderbeken,
    Luca Moro at Synacktiv.com
    OK sashan@

 sys/net/pf.c | 28 ++++++++++++++++++++++++----
 1 file changed, 24 insertions(+), 4 deletions(-)

commit 293884981e72de80f874f7ec97ecdd10ad51ea1a
Author: bluhm <bluhm@openbsd.org>
Date:   Thu Feb 28 20:20:47 2019 +0000

    IPv6 fragments with malformed extension headers could be erroneously
    passed by pf or cause a panic in pf.
    fix from sashan@; OK bluhm@ claudio@
    bug found by Corentin Bayet, Nicolas Collignon, Luca Moro at Synacktiv

 sys/net/pf_norm.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 4c82f4125d8e39e693260b1a7a633a40e9fab08b
Author: bluhm <bluhm@openbsd.org>
Date:   Mon Feb 18 13:11:44 2019 +0000

    Change ps_len of struct pfioc_states and psn_len of struct
    pfioc_src_nodes to size_t.  This avoids integer truncation by casts
    to unsigned.  As the types of DIOCGETSTATES and DIOCGETSRCNODES
    ioctl(2) arguments change, pfctl(8) and systat(1) should be updated
    together with the kernel.  Calculate number of pf(4) states as
    size_t in userland.
    OK sashan@ deraadt@

 sys/net/pf_ioctl.c | 8 ++++----
 sys/net/pfvar.h    | 6 +++---
 2 files changed, 7 insertions(+), 7 deletions(-)

commit 6ba149ccca46e0254919f6ccb88733196e10a31f
Author: phessler <phessler@openbsd.org>
Date:   Sun Feb 10 16:42:35 2019 +0000

    "non-existant" is one of those words that don't exist, so use "non-existent"
    instead
    
    From Pamela Mosiejczuk, many thanks!
    OK phessler@ deraadt@

 sys/net/if_pfsync.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 55038654e1dfdc12cf3c83df52b344c5ad9366a2
Author: kn <kn@openbsd.org>
Date:   Thu Dec 27 16:54:01 2018 +0000

    Check for main ruleset explicitly
    
    All rulesets reference their parent anchor, except for the special cased
    main anchor containing the main ruleset, which's reference is always NULL
    since initialization and never changes.
    
    Replacing nullity tests with clearer equality checks makes the code less
    ambigious and easier to understand.
    
    OK sashan

 sys/net/pf_ioctl.c   | 6 +++---
 sys/net/pf_ruleset.c | 8 ++++----
 2 files changed, 7 insertions(+), 7 deletions(-)

commit f6275afa613025c7e76340c46ca644460557ee38
Author: kn <kn@openbsd.org>
Date:   Mon Dec 17 15:37:41 2018 +0000

    Rename pf_anchor_remove() to pf_remove_anchor()
    
    For semantic consistency with pf_{create,find,remove}_{anchor,ruleset}().
    
    Simplify logic by squashing the if/else block while here.
    No functional change.
    
    Feedback jca and mikeb, OK mikeb

 sys/net/pf_ioctl.c   |  4 ++--
 sys/net/pf_ruleset.c | 14 +++++---------
 sys/net/pfvar.h      |  4 ++--
 3 files changed, 9 insertions(+), 13 deletions(-)

commit 64e125d07ca43d2a155fbcc72bbe639a501c367e
Author: claudio <claudio@openbsd.org>
Date:   Mon Dec 17 09:11:10 2018 +0000

    Use timeout_add_sec() instead of timeout_add() with a multiplication with hz
    OK kn@, florian@, visa@, cheloha@

 sys/net/pf.c       | 4 ++--
 sys/net/pf_ioctl.c | 4 ++--
 2 files changed, 4 insertions(+), 4 deletions(-)

commit 492cf6614cc306ed0bdff70112251eb0c109ff01
Author: kn <kn@openbsd.org>
Date:   Mon Dec 10 16:48:15 2018 +0000

    Remove useless macros
    
    These are just unhelpful case conversion.
    
    OK sashan henning

 sys/net/if_pflog.c | 18 +++++++--------
 sys/net/pf.c       | 66 ++++++++++++++++++++++++++++--------------------------
 sys/net/pf_if.c    |  6 ++---
 sys/net/pf_ioctl.c | 24 +++++++++++---------
 sys/net/pf_lb.c    | 62 +++++++++++++++++++++++++-------------------------
 sys/net/pf_table.c | 18 +++++++--------
 sys/net/pfvar.h    | 17 ++------------
 7 files changed, 101 insertions(+), 110 deletions(-)

commit f72c8b6f57ca90198d62f8beef06b916b5d6ec08
Author: kn <kn@openbsd.org>
Date:   Sun Dec 9 19:38:40 2018 +0000

    Zap duplicate signatures
    
    Redundant under _KERNEL since introduction in r1.260 from 2006.
    
    OK jca

 sys/net/pfvar.h | 8 +-------
 1 file changed, 1 insertion(+), 7 deletions(-)

commit 6106643cec5ef5a82aea8ce4929827041ed1ec67
Author: henning <henning@openbsd.org>
Date:   Thu Nov 15 13:16:37 2018 +0000

    in the "pf: key search" debug message, add the direction. interface *and*
    dir make debugging much easier than the if alone.

 sys/net/pf.c | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

commit 4af1dbb05233b2fd22051cb5da29e0a0bdb92ad7
Author: reyk <reyk@openbsd.org>
Date:   Tue Oct 23 09:53:06 2018 +0000

    Make pf compile without DIAGNOSTIC again
    
    OK bluhm@ kn@

 sys/net/pf_norm.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit 7e89334d42869d2b2b968ecb23a77e0856af243b
Author: sashan <sashan@openbsd.org>
Date:   Tue Oct 16 22:49:41 2018 +0000

    - pf: honor quick on anchor rules
    
      Regression has been introduced in version 1.1024 (a 6.2 time frame).
      It's been discovered and reported by Fabian Mueller-Knapp. Fair amount
      of credit goes to kn@, benno@ and henning@ for pointing me to releveant
      section of pf.conf(5). Fabian and kn@ also did test the patch.
    
    OK kn@, henning@

 sys/net/pf.c | 9 +++++----
 1 file changed, 5 insertions(+), 4 deletions(-)

commit ab23e671fc7de2edc2d7fcf04f82b0a62e9e606d
Author: kn <kn@openbsd.org>
Date:   Mon Oct 15 21:15:35 2018 +0000

    use PFR_RB_NONE consistently
    
    Replace hardcoded 0 and implicit checks with enum as done in all other
    use cases of `pfra_fback'.  No object change.
    
    OK sashan

 sys/net/pf_table.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit b9014d31ce5fb92146d5a52ee005bc00b05c1297
Author: kn <kn@openbsd.org>
Date:   Thu Oct 4 20:25:59 2018 +0000

    Honor quick on anchor rules
    
    When evaluating the anchor's ruleset, prevent clobbering it's very own
    `quick' test result by blindly setting it.
    
    This makes the following pf.conf work as intended (packets would be blocked
    since `quick' had no effect):
    
            anchor quick {
                    pass
            }
            block
    
    Broken since after 6.1 release as reported by Fabian Mueller-Knapp, thanks!
    
    OK henning sashan

 sys/net/pf.c | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

commit d3e8a6be3acafeafc748f7db3aba07c148a376ca
Author: visa <visa@openbsd.org>
Date:   Wed Oct 3 01:24:14 2018 +0000

    Fix a race condition that affects pfsync interface deletion.
    
    When a pfsync interface is being deleted, all its timeout handlers and
    pfsync_send_dispatch() have to stop accessing the software context
    before the context is freed. Ensure sufficient synchronization by
    acquiring NET_LOCK() and clearing `pfsyncif' inside the critical
    section in pfsync_clone_destroy(). When a timeout handler has entered
    the critical section, it has to check `pfsyncif' and bail out if the
    value is NULL. pfsync_send_dispatch() already does this check.
    
    Issue reported and fix tested by Hrvoje Popovski.
    
    OK mpi@ bluhm@

 sys/net/if_pfsync.c | 41 ++++++++++++++++++++++++++++++-----------
 1 file changed, 30 insertions(+), 11 deletions(-)

commit 7ca2db4af49804d4955447c046c7590d8f883175
Author: sashan <sashan@openbsd.org>
Date:   Tue Oct 2 23:44:39 2018 +0000

    - pfsync: avoid a recursion on PF_LOCK
    
    OK bluhm@

 sys/net/if_pfsync.c | 64 ++++++++++++++++++++++++++++++++++++++++++++++++++++-
 1 file changed, 63 insertions(+), 1 deletion(-)

commit c614620a650b8250c855cb0871734657e453d7c9
Author: kn <kn@openbsd.org>
Date:   Mon Oct 1 19:47:30 2018 +0000

    Allow DIOCRGETADDRS when securelevel(7) > 1
    
    This fixes certain operations such as `pfctl -t foo -T show' when the
    system is in "Highly secure mode". `pfctl -t foo -T show -v' would already
    work due to a different ioctl (DIOCRGETASTATS) being used.
    
    Reported by Zbyszek Żółkiewski, thanks!
    
    OK sthen sashan

 sys/net/pf_ioctl.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit 0e5609475351394c791e132db4e33c768b1a41fc
Author: bluhm <bluhm@openbsd.org>
Date:   Thu Sep 13 19:53:58 2018 +0000

    Add reference counting for inet pcb, this will be needed when we
    start locking the socket.  An inp can be referenced by the PCB queue
    and hashes, by a pf mbuf header, or by a pf state key.
    OK visa@

 sys/net/pf.c    | 34 +++++++++++++++++++++++++++-------
 sys/net/pfvar.h |  4 +++-
 2 files changed, 30 insertions(+), 8 deletions(-)

commit ddb22b9530d7ad1b4698803d7b6dcb21c96a3f7d
Author: sashan <sashan@openbsd.org>
Date:   Tue Sep 11 07:53:38 2018 +0000

    - moving state look up outside of PF_LOCK()
    
    this change adds a pf_state_lock rw-lock, which protects consistency
    of state table in PF. The code delivered in this change is guarded
    by 'WITH_PF_LOCK', which is still undefined. People, who are willing
    to experiment and want to run it must do two things:
    
            - compile kernel with -DWITH_PF_LOCK
            - bump NET_TASKQ from 1 to ... sky is the limit,
              (just select some sensible value for number of tasks your
              system is able to handle)
    
    OK bluhm@

 sys/net/if_pfsync.c |  61 ++++++++++++++++++---
 sys/net/if_pfsync.h |   4 +-
 sys/net/pf.c        | 150 ++++++++++++++++++++++++++++++++++++++++------------
 sys/net/pf_ioctl.c  |  53 +++++++++++++++----
 sys/net/pfvar.h     |   4 +-
 5 files changed, 219 insertions(+), 53 deletions(-)

commit f02cb2e83cda2e7c843af31d86dd656fd741d8ab
Author: bluhm <bluhm@openbsd.org>
Date:   Mon Sep 10 16:14:07 2018 +0000

    Instead of calculating the mbuf packet header length here and there,
    put the algorithm into a new function m_calchdrlen().  Also set an
    uninitialized m_len to 0 in NFS code.
    OK claudio@

 sys/net/pf_norm.c | 23 +++--------------------
 1 file changed, 3 insertions(+), 20 deletions(-)

commit c1746f11b0c8af70eecbe03fcd247444643d7685
Author: bluhm <bluhm@openbsd.org>
Date:   Mon Sep 10 12:47:02 2018 +0000

    During fragment reassembly, mbuf chains with packet headers were
    created.  Add a new function m_removehdr() do convert packet header
    mbufs within the chain to regular mbufs.  Assert that the mbuf at
    the beginning of the chain has a packet header.
    found by Maxime Villard in NetBSD; from markus@; OK claudio@

 sys/net/pf_norm.c | 11 ++++++++---
 1 file changed, 8 insertions(+), 3 deletions(-)

commit 43fdd32499e83ef20504df8406572feafca3bcdb
Author: bluhm <bluhm@openbsd.org>
Date:   Mon Sep 10 11:37:26 2018 +0000

    Limit the fragment entry queue length to 64 per bucket.  So we have
    a global limit of 1024 fragments, but it is fine grained to the
    region of the packet.  Smaller packets may have less fragments.
    This costs another 16 bytes of memory per reassembly and devides
    the worst case for searching by 8.
    requestd by claudio@; OK sashan@ claudio@

 sys/net/pf_norm.c | 47 ++++++++++++++++++++++++++++++++++-------------
 sys/net/pfvar.h   |  9 ++++++++-
 2 files changed, 42 insertions(+), 14 deletions(-)

commit 1a0c761e8e5ff53225410adf4ad1769d9847c18d
Author: bluhm <bluhm@openbsd.org>
Date:   Sat Sep 8 13:16:58 2018 +0000

    Split the pf(4) fragment reassembly queue into smaller parts.
    Remember 16 entry points based on the fragment offset.  Instead of
    a worst case of 8196 list traversals we now check a maximum of 512
    list entries or 16 array elements.
    discussed with claudio@ and sashan@; OK sashan@

 sys/net/pf_norm.c | 175 +++++++++++++++++++++++++++++++++++++++++++++++-------
 sys/net/pfvar.h   |   8 ++-
 2 files changed, 161 insertions(+), 22 deletions(-)

commit 73f32125c47d194e9f181ae1771a9b70b1014aa0
Author: bluhm <bluhm@openbsd.org>
Date:   Tue Sep 4 20:34:10 2018 +0000

    Forgot to rename pf_frent_holes() prototype in previous commit.

 sys/net/pf_norm.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 1d5480e517264458d24982eb4ee20c0055b2860c
Author: bluhm <bluhm@openbsd.org>
Date:   Tue Sep 4 19:09:39 2018 +0000

    Avoid traversing the list of fragment entris to check whether the
    pf(4) reassembly is complete.  Instead count the holes that are
    created when inserting a fragment.  If there are no holes left, the
    fragments are continuous.
    idea from claudio@; OK claudio@ sashan@

 sys/net/pf_norm.c | 88 +++++++++++++++++++++++++++++--------------------------
 1 file changed, 47 insertions(+), 41 deletions(-)

commit 4a3906e9e2e21718b4a916370e1d60ed7b3199af
Author: sashan <sashan@openbsd.org>
Date:   Fri Aug 24 12:29:33 2018 +0000

    - cosmetic tweak to if_pfsync.c
    
    OK bluhm@, OK mpi@, henning@, jca@

 sys/net/if_pfsync.c | 23 ++++++++++-------------
 1 file changed, 10 insertions(+), 13 deletions(-)

commit febc2a6ec5c3a278300374cec402626f580e2a1a
Author: sf <sf@openbsd.org>
Date:   Sun Jul 22 09:09:18 2018 +0000

    Fix arguments of pf_purge_expired_{src_nodes,rules}()
    
    Due to the missing "void", this
    
       extern void pf_purge_expired_src_nodes();
    
    is no prototype but a declaration. It is enough to suppress the
    'implicit declaration' warning but it does not allow the compiler to
    check the arguments passed to the calls of the function.
    
    Fix the prototypes and don't pass the waslocked argument anymore. It has
    been removed a year ago.
    
    ok sashan henning

 sys/net/pf.c       | 4 ++--
 sys/net/pf_ioctl.c | 8 ++++----
 sys/net/pfvar.h    | 6 +++---
 3 files changed, 9 insertions(+), 9 deletions(-)

commit 18b958d7c909bdbfe776230b721e495c40787279
Author: sashan <sashan@openbsd.org>
Date:   Thu Jul 12 14:28:07 2018 +0000

    trade few 'goto unlock: for 'break' in pf_test()
    
    OK mpi@, OK henning@, OK jca@

 sys/net/pf.c | 11 +++++------
 1 file changed, 5 insertions(+), 6 deletions(-)

commit 40e42c82e594770b992165a4919aa17fa4935037
Author: nayden <nayden@openbsd.org>
Date:   Wed Jul 11 21:18:23 2018 +0000

    Disambiguate the source of panics in sys/net* by adding __func__
    magic constant to panic() calls.
    ok benno@ henning@ tb@

 sys/net/pf_if.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

commit 4fc68ab0d1444580643c393116dfcb731d5c2e59
Author: henning <henning@openbsd.org>
Date:   Wed Jul 11 11:39:31 2018 +0000

    the STATE_LOOKUP macro made sense ages ago. It stopped making sense
    when we moved most of the functionality into a function. g/c the macro
    and just call the function. ok mpi jca

 sys/net/pf.c | 125 +++++++++++++++++++++++++++++++++--------------------------
 1 file changed, 69 insertions(+), 56 deletions(-)

commit 625edea131f49ae5923a9a00751ed1b3fb6fe05e
Author: henning <henning@openbsd.org>
Date:   Wed Jul 11 09:05:51 2018 +0000

    provide pfi_group_addmember(), which makes the new member interface inherit
    set flags from the group. ok phessler benno

 sys/net/pf_if.c | 15 ++++++++++++++-
 sys/net/pfvar.h |  3 ++-
 2 files changed, 16 insertions(+), 2 deletions(-)

commit 6891c20edc8e58c76f533c7ee11d883ffe1e4997
Author: henning <henning@openbsd.org>
Date:   Tue Jul 10 16:48:22 2018 +0000

    The year is 2018.
    Mercury, Bowie, Cash, Motorola and DEC all left us.
    Just pf still has a default state table limit of 10000.
    Had! Now it's a tiny little bit more, 100k.
    lead guitar: me
    ok chorus: phessler theo claudio benno
    background school girl laughing: bob

 sys/net/pfvar.h | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

commit d1b124b3fdd3f51fd21b605bf0d60070c58b27ea
Author: henning <henning@openbsd.org>
Date:   Tue Jul 10 13:01:38 2018 +0000

    in pf_set_protostate(), only decrement the half-open states counter when
    the state was created on this host, i. e. not for those pfsync-imported.
    whether pfsync-imported states should be accounted is a seperate discussion,
    but as things are, we only increment the counter in pf_create_state(), and
    imported states don't excercise that path.
    probably fixes the half-open states accounting underflow-wraparounds that
    some people have been seeing.
    ok sashan

 sys/net/pf.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 64d55eb2a2f453fba861fc092ebf3df4993ab9a0
Author: henning <henning@openbsd.org>
Date:   Tue Jul 10 09:28:27 2018 +0000

    provide a generic packet delay functionality. packets to be delayed are marked
    by pf in the packet header. pf_delay_pkt reads the delay value from the packet
    header, schedules a timeout and re-queues the packet when the timeout fires.
    ok benno sashan

 sys/net/pf.c       | 46 +++++++++++++++++++++++++++++++++++++++++++---
 sys/net/pf_ioctl.c |  5 ++++-
 sys/net/pfvar.h    | 30 +++++++++++++++++++++---------
 3 files changed, 68 insertions(+), 13 deletions(-)

commit 672fea2ccb3e4cbe11883d167309a4904628e2e2
Author: procter <procter@openbsd.org>
Date:   Mon Jun 18 11:00:31 2018 +0000

    Refactor the six ways to find TCP options into one new function. As a result:
      - MSS and WSCALE option candidates must now meet their min type length.
      - 'max-mss' is now more tolerant of malformed option lists.
    These changes were immaterial to the live traffic I've examined.
    OK sashan@ mpi@

 sys/net/pf.c      | 197 +++++++++++++++++++----------------------
 sys/net/pf_norm.c | 255 ++++++++++++++++++++++--------------------------------
 sys/net/pfvar.h   |   4 +-
 3 files changed, 196 insertions(+), 260 deletions(-)

commit 3f2d79b34bf6dece8c350a5a4bee9f674713b8dc
Author: bluhm <bluhm@openbsd.org>
Date:   Mon Jun 4 12:22:45 2018 +0000

    The function pf_create_state() calls pf_set_protostate() before
    pf_state_insert(), so the state key has not been set.  When inlining,
    the compiler recognized the NULL pointer dereference in
    s->key[PF_SK_STACK]->proto and optimized it away.  But if pf.c was
    compiled with -fno-inline, the system crashed during boot.  Add a
    NULL check in pf_set_protostate() to handle the situation when the
    function is called.
    OK sashan@ henning@

 sys/net/pf.c | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

commit dc67160692ef6a78fc377a1a5bf4093adb559c29
Author: bluhm <bluhm@openbsd.org>
Date:   Fri Jun 1 12:38:25 2018 +0000

    While sending the pf syncookie, we are holding the pf lock.  So
    goto unlock when leaving this block.
    OK sashan@ henning@

 sys/net/pf.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 388c1b285726bf2ef33f3864ea712971b1edeb0a
Author: bluhm <bluhm@openbsd.org>
Date:   Thu May 10 08:52:01 2018 +0000

    pf route-to should not send packets from 127.0.0.1 or ::1 address
    to the network.  This is necessary for locally generated icmp packets
    that would be dropped otherwise.  Refine this check to modify only
    the source address of packets that go to the external network.  This
    allows route-to tricks on loopback interface.
    OK sashan@

 sys/net/pf.c | 8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)

commit c3427cc25ac69249a20c64865549a3f80d9c2074
Author: bluhm <bluhm@openbsd.org>
Date:   Tue Apr 24 23:05:09 2018 +0000

    Use pf_rm_rule() instead of pool_put() to decrement references by
    the rule created in pf_rule_copyin().  Plugs a potential kif memory
    leak in pf(4) ioctl.
    OK sashan@

 sys/net/pf_ioctl.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 5b188d72ee7bad14185866a206a2e3a92c00986d
Author: bluhm <bluhm@openbsd.org>
Date:   Tue Apr 24 20:23:41 2018 +0000

    Fix copy and paste typo in pfi_kif_unref route error message.

 sys/net/pf_if.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit c0d6d65daa21ffdb4ccb87dea1548412f0897fdc
Author: mikeb <mikeb@openbsd.org>
Date:   Fri Apr 13 14:09:42 2018 +0000

    Remove compatibility with pfctl from 6.1 and plug a few leaks
    
    No objections from henning, OK visa

 sys/net/pf_ioctl.c | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

commit bf7176672eb1aa92221be5d2f15e896e62d889de
Author: bluhm <bluhm@openbsd.org>
Date:   Fri Apr 6 10:39:15 2018 +0000

    All users of the PFLOG_PACKET() macro are inside "#if NPFLOG > 0".
    So this macro does not make much sense, just call pflog_packet().
    OK sashan@ henning@

 sys/net/if_pflog.h |  7 +------
 sys/net/pf.c       | 12 ++++++------
 2 files changed, 7 insertions(+), 12 deletions(-)

commit 1a16896473234c2ff3fc7870a14bcd445f794be0
Author: lteo <lteo@openbsd.org>
Date:   Thu Apr 5 03:32:39 2018 +0000

    Zap the obsolete PF_TRANS_ALTQ.
    
    Note: Remember to "make includes" and recompile the following programs together
    with the kernel:
    
    sbin/pfctl
    usr.sbin/authpf
    usr.sbin/ftp-proxy
    usr.sbin/relayd
    usr.sbin/tftp-proxy
    
    Thanks to sthen@ for checking the ports tree.
    
    ok bluhm@ sashan@ visa@

 sys/net/pfvar.h | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 9e77a24bfcd724139da366890e4b7f0f32b512cd
Author: lteo <lteo@openbsd.org>
Date:   Thu Apr 5 03:28:20 2018 +0000

    Explicitly check PF_TRANS_RULESET in DIOCXBEGIN, DIOCXCOMMIT, and DIOCXROLLBACK.
    
    ok bluhm@ sashan@ visa@

 sys/net/pf_ioctl.c | 34 +++++++++++++++++++++++++++++-----
 1 file changed, 29 insertions(+), 5 deletions(-)

commit cc141bdba5f1b74e6135b4ff8e0ba1f9412d6638
Author: sashan <sashan@openbsd.org>
Date:   Wed Mar 28 10:56:18 2018 +0000

    - memory leak occurs when adding same table twice.
      (tj found fix in FreeBSD repo for us)
    
    OK @bluhm, @henning

 sys/net/pf_table.c | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

commit f1c95413b9d413f9387821875bb1df488b3ff737
Author: bluhm <bluhm@openbsd.org>
Date:   Tue Mar 6 17:35:53 2018 +0000

    If source and destination addresses are equal, the incoming and
    outgoing state key is the same.  In this case the reverse link loops
    to the same state key.  The assertion in pf_state_key_link_reverse()
    did not expect this and the kernel crashed.
    bug reported and fix tested by Johan Huldtgren;  OK sashan@ visa@

 sys/net/pf.c | 9 ++++-----
 1 file changed, 4 insertions(+), 5 deletions(-)

commit 842b107f05edc185403f88703c2b24752d0c4d20
Author: benno <benno@openbsd.org>
Date:   Tue Feb 27 09:24:56 2018 +0000

    make kernel compile again without INET6
    ok mpi@

 sys/net/pf.c | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

commit 3e6763994aeb80a553b07ba51b1db2c4725c5c88
Author: mpi <mpi@openbsd.org>
Date:   Mon Feb 19 08:59:52 2018 +0000

    Remove almost unused `flags' argument of suser().
    
    The account flag `ASU' will no longer be set but that makes suser()
    mpsafe since it no longer mess with a per-process field.
    
    No objection from millert@, ok tedu@, bluhm@

 sys/net/if_pfsync.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 73e0536f0e96a36c2c428375e667b8a49caf5705
Author: sashan <sashan@openbsd.org>
Date:   Sun Feb 18 21:45:30 2018 +0000

    - regression in pflog output
      pf_match_rule() must remember current anchor before descents
      towards leaf. it must restore anchor as it ascents towards root.
      Bug pointed out and fix also tested by Matthias Pitzl from genua.
    
    OK bluhm@

 sys/net/pf.c | 25 ++++++++++++++++---------
 1 file changed, 16 insertions(+), 9 deletions(-)

commit 44e4158c5e744657a4b970c1ac79a9b92288251a
Author: dlg <dlg@openbsd.org>
Date:   Fri Feb 9 09:35:03 2018 +0000

    oh carp - i didnt mean to commit these

 sys/net/pfvar.h | 9 ++-------
 1 file changed, 2 insertions(+), 7 deletions(-)

commit 43ebaaf2b573288fd962fe7b50455a0512c618b0
Author: dlg <dlg@openbsd.org>
Date:   Fri Feb 9 09:30:37 2018 +0000

    use struct in_addr to represent an address.

 sys/net/pfvar.h | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

commit 4ee64aa978208207d48c82f9533054056802dd0e
Author: henning <henning@openbsd.org>
Date:   Thu Feb 8 09:15:46 2018 +0000

    make the watermarks/thresholds for entering and leaving syncookie mode when
    syncookies are set to adaptive tunable, ok claudio benno

 sys/net/pfvar.h | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

commit eaffd5c857ca20fb3f87e64391312b2b20487539
Author: henning <henning@openbsd.org>
Date:   Thu Feb 8 02:25:44 2018 +0000

    add DIOCGETSYNFLWATS to get current synflood detection watermarks,
    ok claudio benno procter

 sys/net/pf_ioctl.c | 15 +++++++++++++--
 sys/net/pfvar.h    |  4 +++-
 2 files changed, 16 insertions(+), 3 deletions(-)

commit c5bd0fc28bd50e256dc76600b340ac1e15b61021
Author: henning <henning@openbsd.org>
Date:   Wed Feb 7 06:11:43 2018 +0000

    look ma, henning forgot to PF_LOCK/_UNLOCK in the new ioctls, ok procter

 sys/net/pf_ioctl.c | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

commit 21b1f051a09114b39df742c0d92cd8fffbd01cf7
Author: henning <henning@openbsd.org>
Date:   Wed Feb 7 05:48:47 2018 +0000

    provide counters for # of synfloods detected, # of syncookies sent,
    # of syncookies successfuly validated, ok phessler

 sys/net/pfvar.h | 10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

commit e66ff883f02721022cf398cc03fdd9e2bc661e94
Author: henning <henning@openbsd.org>
Date:   Tue Feb 6 23:44:48 2018 +0000

    syncookies for pf.
    when syncookies are on, pf will blindly answer each and every SYN with a
    syncookie-SYNACK. Upon reception of the ACK completing the 3WHS, pf will
    reconstruct the original SYN, shove it through pf_test, where state will
    be created if the ruleset permits it. Then massage the freshly created state
    (we won't see the SYNACK), set up the sequence number modulator, and call
    into the existing synproxy code to start the 3WHS with the backend host.
    Add an - somewhat basic for now - adaptive mode where syncookies get enabled
    if a certain percentage of the state table is filled up with half-open tcp
    connections. This makes pf firewalls resilient against large synflood
    attacks.
    syncookies are off by default until we gained more experience, considered
    experimental for now.
    see http://bulabula.org/papers/2017/bsdcan/ for more details.
    joint work with sashan@, widely discussed and with lots of input by many

 sys/net/pf.c       | 55 ++++++++++++++++++++++++++++++++++++++++++++++++++----
 sys/net/pf_ioctl.c | 17 ++++++++++++++++-
 sys/net/pfvar.h    | 24 +++++++++++++++++++++++-
 3 files changed, 90 insertions(+), 6 deletions(-)

commit 568ff528e52ac26a2ec4c8366e9ac4bc31db86c1
Author: henning <henning@openbsd.org>
Date:   Tue Feb 6 09:16:11 2018 +0000

    some finger muscle workout:
    bzero -> memset and (very few) bcopy -> memcpy/memmove

 sys/net/pf.c       | 32 ++++++++++++++++----------------
 sys/net/pf_if.c    | 20 ++++++++++----------
 sys/net/pf_ioctl.c | 42 +++++++++++++++++++++---------------------
 sys/net/pf_lb.c    | 10 ++++++----
 sys/net/pf_norm.c  |  4 ++--
 5 files changed, 55 insertions(+), 53 deletions(-)

commit 664ff4ce4b3c44a35c669b1c8956839c647c29b1
Author: bluhm <bluhm@openbsd.org>
Date:   Fri Jan 19 15:33:27 2018 +0000

    In pfioctl() a pf unlock was missing in the error path.
    OK lteo@ sashan@

 sys/net/pf_ioctl.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit 1d38689dbbb026d00003a4af72a0387148a31a7c
Author: bluhm <bluhm@openbsd.org>
Date:   Fri Jan 19 12:57:15 2018 +0000

    Use the pf state key linking functions in two more places instead
    of doing it manually.
    OK sashan@ visa@

 sys/net/pf.c | 27 ++++++---------------------
 1 file changed, 6 insertions(+), 21 deletions(-)

commit 9f7515428f91819715809dd47b60a3550a42df77
Author: bluhm <bluhm@openbsd.org>
Date:   Tue Jan 16 14:48:38 2018 +0000

    If pf route-to is used for locally generated packets, they may have
    an invalid source address.  As pf route-to happens after IP source
    selection based on a different route, the address should be corrected
    after pf has allocated the new route.  Especially loopback addresses
    must not appear at outgoing packets.
    OK sashan@ visa@

 sys/net/pf.c | 19 +++++++++++++------
 1 file changed, 13 insertions(+), 6 deletions(-)

commit 18421856bb663f6ab719afb5bcf84dd776366a13
Author: bluhm <bluhm@openbsd.org>
Date:   Mon Jan 15 12:25:03 2018 +0000

    When pf(4) forwards incoming packets with route-to or reply-to,
    decrement the time-to-live or hop-limit field to prevent routing
    loops.  Sending an ICMP time exceeded error makes traceroute work.
    For outgoing packets ip_forward() has already done this.
    OK visa@ sashan@

 sys/net/pf.c | 24 +++++++++++++++++++++++-
 1 file changed, 23 insertions(+), 1 deletion(-)

commit 51a22f9bf3b9d18e5e0508f8a8d9c32e51dfd761
Author: bluhm <bluhm@openbsd.org>
Date:   Wed Jan 10 13:57:17 2018 +0000

    Use pf_send_icmp() consistently in pf_route().  It sets the routing
    domain and other mbuf flags.  In pf_route6() the bad packet counter
    and dup-to check were missing.
    OK visa@

 sys/net/pf.c | 32 +++++++++++++++++---------------
 1 file changed, 17 insertions(+), 15 deletions(-)

commit 809d3a3e7e4e2167dd03620b8ad7b0a18aaebb7d
Author: bluhm <bluhm@openbsd.org>
Date:   Tue Jan 9 15:24:24 2018 +0000

    Creating a cloned interface could return ENOMEM due to temporary
    memory shortage.  As it is invoked from a system call, it should
    not fail and wait instead.
    OK visa@ mpi@

 sys/net/if_pflog.c  | 7 ++-----
 sys/net/if_pfsync.c | 5 ++---
 2 files changed, 4 insertions(+), 8 deletions(-)

commit 4c4789d368df8953b91c5afdf522b2ca55f42b87
Author: bluhm <bluhm@openbsd.org>
Date:   Fri Dec 29 23:55:22 2017 +0000

    Make sure that pf_mbuf_link_state_key() does not overwrite an
    existing statekey in the mbuf header.  Reset the statekey in
    m_dup_pkthdr().
    suggested by and OK sahan@

 sys/net/pf.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit d36614f7383caf3a717f913d9f9879e7076aff8e
Author: bluhm <bluhm@openbsd.org>
Date:   Fri Dec 29 17:05:25 2017 +0000

    Make the functions which link the pf state keys to mbufs, inpcbs,
    or other states more consistent.
    OK visa@ sashan@ on a previous version

 sys/net/pf.c    | 93 ++++++++++++++++++++++++++++++++++++---------------------
 sys/net/pfvar.h | 10 +++----
 2 files changed, 63 insertions(+), 40 deletions(-)

commit bfcbb272c6f4c3341685dc0476a56cd2df40548c
Author: bluhm <bluhm@openbsd.org>
Date:   Thu Dec 28 11:37:44 2017 +0000

    pf drops IPv4 packets with any options by default.  For IPv6 the
    same is already done for options header.  Add the routing extension
    header to the list that need "allow-opts" to pass.
    OK sashan@ visa@

 sys/net/pf.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit 36e59af023145bcfbd91196c677db6af7e1a0b98
Author: bluhm <bluhm@openbsd.org>
Date:   Sun Dec 24 14:18:19 2017 +0000

    There was a corner case where linking the inp to the state key did
    work in pf.  The function pf_inp_link() takes the state key from
    the mbuf and not the one pf_find_state() has just found.  Introduce
    a new function pf_state_key_link_inpcb() that links the given state
    key and inpcb together with some sanity checks.
    OK sashan@

 sys/net/pf.c | 18 +++++++++++++++---
 1 file changed, 15 insertions(+), 3 deletions(-)

commit 441055dec26ba16cdd03b472cae28272b1a83141
Author: bluhm <bluhm@openbsd.org>
Date:   Mon Dec 4 15:13:12 2017 +0000

    RFC 4861 requires that all neighbor discovery packets have 255 in
    their IPv6 header hop limit field.  Let pf drop neighbor solicitation,
    neighbor advertisement, router solicitation, router advertisement,
    and redirect ICMP6 packets that do not comply.  This enforces that
    bogus packets cannot be routed when pf is enabled.
    OK mpi@ sashan@ benno@

 sys/net/pf.c | 10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

commit 511f7f2b9e32699a40c156421e4e666b2b62108e
Author: bluhm <bluhm@openbsd.org>
Date:   Fri Dec 1 10:33:33 2017 +0000

    Simplify the reverse PCB lookup logic.  The PF_TAG_TRANSLATE_LOCALHOST
    security check prevents that the user accidentally configures
    redirect where a divert-to would be appropriate.  Instead of spreading
    the logic into tcp and udp input, check the flag during PCB listen
    lookup.  This also reduces parameters of in_pcblookup_listen().
    OK visa@

 sys/net/pf.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

commit 37fced87094c38578ebbe36dae5441179ff5d22c
Author: bluhm <bluhm@openbsd.org>
Date:   Tue Nov 28 16:05:46 2017 +0000

    The divert structure was using the port number to indicate that
    divert-to or divert-reply was active.  If the address was also set,
    it meant divert-to.  Divert packet used a separate structure.  This
    is confusing and makes it hard to add new features.  It is better
    to have a divert type that explicitly says what is configured.
    Adapt the pf rule struct in kernel and pfctl, no functional change.
    Note that kernel and pfctl have to be updated together.
    OK sashan@

 sys/net/pf.c       | 19 +++++++++++--------
 sys/net/pf_ioctl.c |  5 ++---
 sys/net/pfvar.h    |  6 ++++--
 3 files changed, 17 insertions(+), 13 deletions(-)

commit c7b187916cf5f2789d8adcd9f139ac717bee373a
Author: bluhm <bluhm@openbsd.org>
Date:   Mon Nov 27 23:21:50 2017 +0000

    The divert structure was using the port number to indicate that
    divert-to or divert-reply was active.  If the address was also set,
    it meant divert-to.  Divert packet used a separate structure.  This
    is confusing and makes it hard to add new features.  It is better
    to have a divert type that explicitly says what is configured.
    Convert the pfctl(8) rule parser to divert types, kernel cleanup
    will be the next step.
    OK sashan@

 sys/net/pfvar.h | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

commit 4d3061fb7f3cafe8cf56ec6f4e8846c5fb6f0f6d
Author: bluhm <bluhm@openbsd.org>
Date:   Wed Nov 22 12:28:49 2017 +0000

    It does not make sense to call pcb lookup from pf during packet
    forwarding.  It should never match and would cause MP locking
    problems.  While there remove an useless ifp parameter from
    ip_output_ipsec_send().
    from markus@; OK visa@ sashan@

 sys/net/pf.c | 16 ++++++++++++++--
 1 file changed, 14 insertions(+), 2 deletions(-)

commit 94334c667cb14a4cfacff059c4e2da21206ed658
Author: mpi <mpi@openbsd.org>
Date:   Mon Nov 20 10:35:24 2017 +0000

    Sprinkle some NET_ASSERT_LOCKED(), const and co to prepare running
    pr_input handlers without KERNEL_LOCK().
    
    ok visa@

 sys/net/if_pfsync.c | 4 +++-
 sys/net/pf.c        | 4 +++-
 2 files changed, 6 insertions(+), 2 deletions(-)

commit 5a4ae9a9cb4b2a7d895e04d57af92fc20776c79a
Author: henning <henning@openbsd.org>
Date:   Mon Nov 13 11:30:11 2017 +0000

    add a generic packet rate matching filter. allows things like
    pass in proto icmp max-pkt-rate 100/10
    all packets matching the rule in the direction the state was created are
    taken into consideration (typically: requests, but not replies).
    Just like with the other max-*, the rule stops matching if the maximum is
    reached, so in typical scenarios the default block rule would kick in then.
    with input from Holger Mikolon
    ok mikeb

 sys/net/pf.c       | 18 +++++++++++++++---
 sys/net/pf_ioctl.c |  5 ++++-
 sys/net/pfvar.h    | 22 ++++++++++++----------
 3 files changed, 31 insertions(+), 14 deletions(-)

commit 362ce9b238c400e2dcfd212d7874f1f0cd799cc1
Author: dlg <dlg@openbsd.org>
Date:   Mon Nov 13 01:24:09 2017 +0000

    remove the ability for pf_ouraddr to say that a packet is forwarded.
    
    having pf_ouraddr say a packet is forwarded let's in_ouraddr avoid
    doing a route lookup for the packet. however, because it is forwarded
    we need to do a route lookup in ip_output anyway to know where it
    goes.
    
    in_ouraddr does a bunch of extra checks on the result of the route
    lookup that ip_output does not do though, including special handling
    of ip_directedbroadcast and M_BCAST. if you have directed broadcast
    enabled and do not do these checks, the ethernet layer will loop a
    copy of broadcast packets back into the stack recursively which
    can blow the thread stack in the kernel.
    
    discussed with jmatthew@, sashan@, and henning@
    ok mpi@
    
    diagnosing this led to the enabling of a guard page on amd64 kernel
    stacks, which was necessary for correctly identifying this problem.

 sys/net/pf.c | 6 +-----
 1 file changed, 1 insertion(+), 5 deletions(-)

commit 93865884b36eca9fa138a35d5f936254a8f76e4d
Author: sashan <sashan@openbsd.org>
Date:   Tue Oct 31 22:05:12 2017 +0000

    - add one more softnet taskq
      NOTE: code still runs with single softnet task.  change definition of
      SOFTNET_TASKS in net/if.c, if you want to have more than one softnet task
    
    OK mpi@, OK phessler@

 sys/net/pf.c       | 4 ++--
 sys/net/pf_ioctl.c | 4 ++--
 2 files changed, 4 insertions(+), 4 deletions(-)

commit c81856dec86003339f105db67e595d2fc1d928a4
Author: sashan <sashan@openbsd.org>
Date:   Mon Oct 30 22:35:50 2017 +0000

    - fine tuning PF_LOCK in pfioctl()
      (extra thanks to Hrvoje for testing)
    
    OK mpi@

 sys/net/pf_ioctl.c | 179 ++++++++++++++++++++++++++++++++++++++++++++++++++++-
 1 file changed, 176 insertions(+), 3 deletions(-)

commit 0d5abfc5bafadeccf4fc806ba626577d278a9002
Author: sashan <sashan@openbsd.org>
Date:   Tue Sep 5 22:15:32 2017 +0000

    - split pf_find_or_create_ruleset() to smaller chunks.
      tested by Hrvoje
    
    OK mpi@, OK bluhm@

 sys/net/pf_ruleset.c | 191 +++++++++++++++++++++++++++++++++------------------
 sys/net/pfvar.h      |   5 +-
 2 files changed, 127 insertions(+), 69 deletions(-)

commit 2a9429a8977f4a7ae8b6ffd7c1dcb6dcfe60812f
Author: mikeb <mikeb@openbsd.org>
Date:   Wed Aug 16 14:19:57 2017 +0000

    Validate pfra_type after copyin before using it to index an array
    
    Don't trust the value of pfra_type blindly since it's coming from
    userland and sanitize it in pfr_validate_addr that is called after
    every copyin and also perform the check in pfr_create_kentry before
    we attempt to use the value not after.
    
    Coverity CID 1452909, 1453097, 1453384; Severity: Minor
    It can be triggered only by root by default or anyone with write
    access to /dev/pf if such access is provided.
    
    ok visa, bcook, sashan, jsg

 sys/net/pf_table.c | 10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

commit 395a6f5edcdb2fe54066fa49acf6cee727ca84fd
Author: henning <henning@openbsd.org>
Date:   Mon Aug 14 15:58:16 2017 +0000

    move pf_get_wscale + pf_get_mss prototypes to pfvar.h (diff shrinkage)

 sys/net/pf.c    | 4 +---
 sys/net/pfvar.h | 4 +++-
 2 files changed, 4 insertions(+), 4 deletions(-)

commit 21fedf5a4d8d57ce6cb62c4f929ffca32c19b76f
Author: henning <henning@openbsd.org>
Date:   Mon Aug 14 15:48:29 2017 +0000

    add half-open tcp states accounting, road paved by sashan
    increment in pf_create_state(), decrement in pf_set_protostate().
    input & ok bluhm

 sys/net/pf.c    | 16 +++++++++++++---
 sys/net/pfvar.h |  3 ++-
 2 files changed, 15 insertions(+), 4 deletions(-)

commit c351feb56f5e225d65b7d7f3c0d363cedc06442c
Author: henning <henning@openbsd.org>
Date:   Sun Aug 13 16:57:20 2017 +0000

    to change a state's state (that term is overloaded in pf, protocol state
    like ESTABLISHED for tcp here), don't do it directly, but go through a newly
    introduced pf_set_protostate()
    ok bluhm benno

 sys/net/pf.c    | 152 +++++++++++++++++++++++++++++++++++---------------------
 sys/net/pfvar.h |   3 +-
 2 files changed, 97 insertions(+), 58 deletions(-)

commit aa28b9a6d024fc39940a8bf6e59c28dbaafc6950
Author: mpi <mpi@openbsd.org>
Date:   Fri Aug 11 21:24:19 2017 +0000

    Remove NET_LOCK()'s argument.
    
    Tested by Hrvoje Popovski, ok bluhm@

 sys/net/if_pflog.c  | 15 +++++++--------
 sys/net/if_pfsync.c | 25 +++++++++----------------
 sys/net/pf.c        |  7 +++----
 sys/net/pf_ioctl.c  |  7 +++----
 4 files changed, 22 insertions(+), 32 deletions(-)

commit d7a877ac7c7c8dcfeb28419f3be41eca23b0dfe9
Author: mpi <mpi@openbsd.org>
Date:   Sun Aug 6 13:16:11 2017 +0000

    Reduce contention on the NET_LOCK() by moving the logic of the pfpurge
    thread to a task running on the `softnettq`.
    
    Tested and inputs from Hrvoje Popovski.
    
    ok visa@, sashan@

 sys/net/pf.c       | 59 ++++++++++++++++++++++++++++++++----------------------
 sys/net/pf_ioctl.c | 15 +++-----------
 sys/net/pfvar.h    |  3 +--
 3 files changed, 39 insertions(+), 38 deletions(-)

commit 6b8c64d21d3883285b9541f25c1bc0adbce6f86a
Author: claudio <claudio@openbsd.org>
Date:   Thu Jul 27 12:09:51 2017 +0000

    For pf the anchor is a C string so ensure that the value passed in via ioctl
    is correctly NUL terminated.
    Reported by Ilja Van Sprundel
    With and OK bluhm@

 sys/net/pf_ioctl.c | 30 +++++++++++++++++++++++++++++-
 1 file changed, 29 insertions(+), 1 deletion(-)

commit b28abc6437903ba6bd4637f4ad2b9c044f61015a
Author: mikeb <mikeb@openbsd.org>
Date:   Wed Jul 19 12:51:30 2017 +0000

    Rework HFSC vs FQ-CoDel checks
    
    The selection mechanism introduced in pf_ioctl.c -r1.316 suffers
    from being too ambiguous and lacks robustness. Instead of relying
    on composition of multiple flags in the queue specification, it's
    easier to identify the root class (if it exists) and derive all
    further checks from it.

 sys/net/pf_ioctl.c | 13 +++++++------
 sys/net/pfvar.h    |  3 ++-
 2 files changed, 9 insertions(+), 7 deletions(-)

commit 425f1cf27b3247d066477dc1da3914abe13420c0
Author: bluhm <bluhm@openbsd.org>
Date:   Wed Jul 12 14:07:55 2017 +0000

    Use a 32 bit variable to detect integer overflow when searching for
    an unused nat port.  Prevents a possible endless loop if high port
    is 65535 or low port is 0.
    report and analysis Jingmin Zhou; OK sashan@ visa@

 sys/net/pf_lb.c | 9 +++++----
 1 file changed, 5 insertions(+), 4 deletions(-)

> 7f3ad01804c439cedb33d3da7539060c2dd1bb97

commit 86fe1d66a50e2baa40972cae1abf0b1cfcd7a0da
Author: bluhm <bluhm@openbsd.org>
Date:   Wed Jul 5 11:40:17 2017 +0000

    Convert pf tagname malloc(9) into pool_get(9) to make it MP safe.
    While there use TAILQ_FOREACH macro for traversing tags.
    OK mpi@

 sys/net/pf_ioctl.c | 22 +++++++++++++---------
 1 file changed, 13 insertions(+), 9 deletions(-)

commit 9a02b2b7f0ee6155d097fc931fd692eb19934ca9
Author: mpi <mpi@openbsd.org>
Date:   Tue Jul 4 14:10:15 2017 +0000

    Revert previous, it exposed two edge cases still requiring the
    KERNEL_LOCK().
    
    - radix_node_head are still allocated with malloc(9) and pf_table can
      free(9) some.
    
    - pfsync(4) might send some traffic which can exercise IPsec code
    
    Found by bluhm@ and Hrvoje Popovski

 sys/net/pf.c | 11 +++++------
 1 file changed, 5 insertions(+), 6 deletions(-)

commit 6221d6df1b55bc08b5f314830697714ffa84deef
Author: mpi <mpi@openbsd.org>
Date:   Mon Jul 3 08:11:21 2017 +0000

    Drop the KERNEL_LOCK() in pf_purge_thread().
    
    The NET_LOCK() is currently what guarantees that accesses to PF data
    structures are serialized.
    
    While here use rwsleep(9) instead of calling NET_LOCK()/NET_UNLOCK()
    for every iteration.
    
    Tested by Hrvoje Popovski, ok sashan@, visa@

 sys/net/pf.c | 11 ++++++-----
 1 file changed, 6 insertions(+), 5 deletions(-)

commit b6b33aa1566126627e768bfe28e1351ad0a796fa
Author: mikeb <mikeb@openbsd.org>
Date:   Wed Jun 28 19:30:24 2017 +0000

    Introduce a simple mechanism to select the appropriate queue manager
    
    Discussed with and OK henning@ at d2k17 as a part of a larger diff.

 sys/net/pf_ioctl.c | 10 +++++++++-
 sys/net/pfvar.h    |  5 ++++-
 2 files changed, 13 insertions(+), 2 deletions(-)

commit 8bb290f6ae41fb0256f9fe96749ca7827bd49df8
Author: mikeb <mikeb@openbsd.org>
Date:   Wed Jun 28 19:27:42 2017 +0000

    Tighten up FQ-CoDel vs HFSC checks
    
    PFQS_FLOWQUEUE is about to become a flag that HFSC classes may specify
    as well; thus a better way of telling FQ-CoDel and HFSC apart needs to
    be found.  At the moment its derived from the queue specification.
    
    Discussed with and OK henning@ at d2k17 as a part of a larger diff.

 sys/net/pf_ioctl.c | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

commit 5f5cd2c2e1ea4bcc17d15c41f9d091ff721137b0
Author: mikeb <mikeb@openbsd.org>
Date:   Wed Jun 28 18:31:03 2017 +0000

    Extend pf queueing ops to include queue manager hooks
    
    Discussed with and OK henning@ at d2k17 as a part of a larger diff.

 sys/net/pfvar.h | 17 ++++++++++++-----
 1 file changed, 12 insertions(+), 5 deletions(-)

commit 4b71a68eb366e784639bc6e304a4a273b7f4b0eb
Author: bluhm <bluhm@openbsd.org>
Date:   Mon Jun 26 18:33:24 2017 +0000

    Fragments for a single connection (a combination of proto,src,dst,af)
    may easily reuse the fragment id as it is only 16 bit for IPv4.  To
    avoid that pf reassembles them into the wrong packet, throw away
    stale fragments.  With the default timeout this happens after 12,000
    newer fragements have been seen.
    from markus@; OK sashan@

 sys/net/pf_norm.c | 25 ++++++++++++++++++++++++-
 sys/net/pfvar.h   | 10 +++++++++-
 2 files changed, 33 insertions(+), 2 deletions(-)

commit 09228e5ff0c3b344278a537147513ebbf85656dd
Author: bluhm <bluhm@openbsd.org>
Date:   Sat Jun 24 20:32:39 2017 +0000

    To avoid packet loss due to reuse of the 16 bit IPv4 fragment id,
    we need suitable data structures.  Organize the pf fragments with
    two red-black trees.  One is holding the address and protocol
    information and the other has only the fragment id.  This will allow
    to drop fragemts for specific connections more aggressively.  `
    from markus@; OK sashan@

 sys/net/pf_norm.c | 176 +++++++++++++++++++++++++++++++++++-------------------
 1 file changed, 113 insertions(+), 63 deletions(-)

commit b8d05a73c6b9ef70fc673b6c2648670f4c833ed8
Author: bluhm <bluhm@openbsd.org>
Date:   Wed Jun 21 15:29:23 2017 +0000

    Fix kernel diagnostic assertion "(sk->inp == NULL) || (sk->inp->inp_pf_sk
    == NULL)".  The problem was that setting the inp pointer in the
    statekey to NULL was delayed until the statekey refcounter reached
    0.  So the inp could get linked to another statekey while an mbuf
    in the socket buffer was keeping the refcounter at 1.  Set the
    statekey inp pointer to NULL in pf_state_key_detach() immediately,
    then the kassert can be even stricter.
    OK sashan@

 sys/net/pf.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 36c0109eae52b8c24faab57b6f949fb2dd622cb5
Author: bluhm <bluhm@openbsd.org>
Date:   Mon Jun 19 17:58:49 2017 +0000

    When dealing with mbuf pointers passed down as function parameters,
    bugs could easily result in use-after-free or double free.  Introduce
    m_freemp() which automatically resets the pointer before freeing
    it.  So we have less dangling pointers in the kernel.
    OK krw@ mpi@ claudio@

 sys/net/pf_norm.c | 5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)

commit b7823b909956fee473e1e6ff08e8b31a5be1c040
Author: sashan <sashan@openbsd.org>
Date:   Fri Jun 9 17:43:06 2017 +0000

    - pfsync_input() must grab PF_LOCK
      reported and patch tested by Hrvoje Popovski
    
    O.K. bluhm@

 sys/net/if_pfsync.c | 10 +++++++---
 1 file changed, 7 insertions(+), 3 deletions(-)

commit 956659a2c9191e0927b4f56584d8209ea85115f5
Author: sashan <sashan@openbsd.org>
Date:   Mon Jun 5 22:18:28 2017 +0000

    - let's add PF_LOCK()
      to enable PF_LOCK(), you must add 'option WITH_PF_LOCK' to your kernel
      configuration. The code does not do much currently it's just the very
      small step towards MP.
    
    O.K. henning@, mikeb@, mpi@

 sys/net/pf.c       | 47 ++++++++++++++++++++++++++++++++++-------------
 sys/net/pf_ioctl.c |  8 +++++++-
 sys/net/pf_norm.c  | 45 +++++++++++++++++++++++++++++++++++++++------
 3 files changed, 80 insertions(+), 20 deletions(-)

commit 63b24bda997b0879d685c1d16ba2d37acb62bdf2
Author: patrick <patrick@openbsd.org>
Date:   Thu Jun 1 14:38:28 2017 +0000

    Return time_uptime as value for when pf was enabled instead of
    time_second.  Since time_second changes depending on the wall-
    clock time, time_second is not a reliable source for the status.
    We can even end up with a negative time delta.  Thus, use the
    monotonically growing time_uptime and export it to userland.
    
    ok bluhm@ mikeb@

 sys/net/pf_ioctl.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

commit c50c83ac27b9e1d07521f7703030803d53c7c0ad
Author: bluhm <bluhm@openbsd.org>
Date:   Wed May 31 09:19:10 2017 +0000

    Block IPv6 packets in pf(4) that have hop-by-hop options header or
    destination options header.  Such packets can be passed by adding
    "allow-opts" to the rule.  So IPv6 options are handled like their
    counterpart in IPv4 now.
    tested by benno@; OK henning@

 sys/net/pf.c | 11 ++++++++---
 1 file changed, 8 insertions(+), 3 deletions(-)

commit 6338263f170833991beffa6938e0b46e72a77ea2
Author: deraadt <deraadt@openbsd.org>
Date:   Tue May 30 20:00:48 2017 +0000

    sizes for free()
    ok henning

 sys/net/pf_if.c      |  6 +++---
 sys/net/pf_ruleset.c | 34 +++++++++++++++++-----------------
 2 files changed, 20 insertions(+), 20 deletions(-)

commit a44a24888a2834b3e8a6951c511390b93dc43d4c
Author: henning <henning@openbsd.org>
Date:   Tue May 30 19:40:54 2017 +0000

    remove XXX from the comments marking "holes" in the ioctls. I see very
    very little value in these comments at all, but the XXX is just wrong and
    in the way when looking for real XXXs. phessler agrees

 sys/net/pfvar.h | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

commit 55ba875ac1efabfebf826b8bf2871ada64ae550e
Author: henning <henning@openbsd.org>
Date:   Tue May 30 19:37:54 2017 +0000

    g/c DIOCCLRRULECTRS
    kinda deprecated for a decade now, nothing in base uses it, nothing in
    ports uses it (thanks sthen)
    ok phessler sashan

 sys/net/pf_ioctl.c | 17 +----------------
 sys/net/pfvar.h    |  4 ++--
 2 files changed, 3 insertions(+), 18 deletions(-)

commit 01c3818b6b668c0adfaeb655ee0a7ab2a7b9f890
Author: henning <henning@openbsd.org>
Date:   Tue May 30 08:10:01 2017 +0000

    teach pf_build_tcp() about SACK, ok & with sashan

 sys/net/pf.c    | 18 +++++++++++++-----
 sys/net/pfvar.h |  4 ++--
 2 files changed, 15 insertions(+), 7 deletions(-)

commit a46fa70d74df3109114a9e9a6f280254a59fdf29
Author: mpi <mpi@openbsd.org>
Date:   Mon May 29 14:18:32 2017 +0000

    export_pflow() is no longer grabbing the NET_LOCK(), so no need to
    release it beforehand.
    
    ok henning@, benno@

 sys/net/pf.c | 8 ++------
 1 file changed, 2 insertions(+), 6 deletions(-)

commit 2e5bc81177c13bd263e1fd9c62cdf5a5a1bcad28
Author: bluhm <bluhm@openbsd.org>
Date:   Sun May 28 16:55:54 2017 +0000

    Limit the nested header chain for IPv6 extensions headers and for
    authentication headers in the IPv4 case.  This prevents spending
    excessive cpu time on crafted packets.
    OK henning@

 sys/net/pf.c | 22 ++++++++++++++++------
 1 file changed, 16 insertions(+), 6 deletions(-)

commit 225070094e73ba7c12ac82bc060f22590fc3eb5f
Author: bluhm <bluhm@openbsd.org>
Date:   Sun May 28 16:43:45 2017 +0000

    Fix bad white spaces, wrap long lines, kill some empty lines.

 sys/net/pf.c    | 12 +++++++-----
 sys/net/pfvar.h | 17 +++++++----------
 2 files changed, 14 insertions(+), 15 deletions(-)

commit 22ef11432ce714beb8dc98ab417eddcf82e3e05b
Author: bluhm <bluhm@openbsd.org>
Date:   Sun May 28 14:54:00 2017 +0000

    Pf was handling IPv4 and IPv6 differently regarding AH extension
    headers.  pf_walk_header6() steps over it and detects the real
    protocol.  So to implement a minimal header walking function
    pf_walk_header() for IPv4.  It does the header checks and jumps
    over AH.  Then pf does not understand AH as a protocol, it is just
    an extension that authenticates the packet.  Move some header and
    option checks to pf_walk_header() for consistency with IPv6.  This
    also improves the header check for IPv4 packets in ICMP payload.
    OK henning@

 sys/net/pf.c | 70 ++++++++++++++++++++++++++++++++++++++++++++----------------
 1 file changed, 52 insertions(+), 18 deletions(-)

commit c2e1c3c2e0f3c978cbb33b759f7737e15134666b
Author: mpi <mpi@openbsd.org>
Date:   Sat May 27 18:33:21 2017 +0000

    Remove useless splnet()/splx() dances.
    
    pfsyncioctl() is executed with the NET_LOCK() held which is enough.
    
    ok sashan@

 sys/net/if_pfsync.c | 26 ++++----------------------
 1 file changed, 4 insertions(+), 22 deletions(-)

commit 9f98372a33ac4806945fde9e1586a792b4f47489
Author: bluhm <bluhm@openbsd.org>
Date:   Tue May 23 09:09:03 2017 +0000

    Move the common length check in pf_pull_hdr() after the address
    family switch.  This makes the specific calculation more obvious.
    OK claudio@

 sys/net/pf.c | 24 ++++++++++--------------
 1 file changed, 10 insertions(+), 14 deletions(-)

commit 5e4ad307dc9088ceb83ec3620cfc620fea8bf99f
Author: sashan <sashan@openbsd.org>
Date:   Sat May 20 22:56:43 2017 +0000

    - fixes regression found by pf_forward test
    
    O.K. bluhm@

 sys/net/pf.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit 5c526dbdb0f2228cddfebd65cba6cd7b26cde31a
Author: rzalamena <rzalamena@openbsd.org>
Date:   Fri May 19 10:43:05 2017 +0000

    Change PF behavior to allow MLD Listener Report packets to be sent
    without needing a previously created state by MLD Listener Query. It
    wasn't working because: (1) you might not have a previous MLD Listener
    Query and (2) the addresses of the Query and Report don't match.
    
    ok mikeb@, sashan@

 sys/net/pf.c | 12 +++++++++---
 1 file changed, 9 insertions(+), 3 deletions(-)

commit e236f0fa7b23e94c7258b2055ec8e7c9804957c7
Author: sashan <sashan@openbsd.org>
Date:   Tue May 16 22:16:30 2017 +0000

    - percpu anchor stacks
      we actually don't need to pre-allocate per_anchor_stack[], if we use
      a 'natural' recursion, when doing anchor tree traversal.
    
    O.K. mikeb@, mpi@

 sys/net/pf.c | 520 +++++++++++++++++++++++++++++++----------------------------
 1 file changed, 270 insertions(+), 250 deletions(-)

commit 66736630cee42b00f38c44e0b154c35b7ac24eca
Author: mpi <mpi@openbsd.org>
Date:   Tue May 16 12:24:01 2017 +0000

    Replace remaining splsoftassert(IPL_SOFTNET) by NET_ASSERT_LOCKED().
    
    ok visa@

 sys/net/if_pfsync.c | 18 +++++++++---------
 sys/net/pf.c        |  6 +++---
 sys/net/pf_if.c     |  4 ++--
 3 files changed, 14 insertions(+), 14 deletions(-)

commit 00cdbf6fca0a3f6329a313265896e18084aaa264
Author: mpi <mpi@openbsd.org>
Date:   Tue May 16 11:36:16 2017 +0000

    Remove list member now that the global list is gone.

 sys/net/if_pflog.h | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

commit 7d19dde52a214f97ff1c572c2edce657962bed69
Author: mpi <mpi@openbsd.org>
Date:   Tue May 16 11:35:36 2017 +0000

    Kill unused global list and protect global array by the NET_LOCK().
    
    ok bluhm@

 sys/net/if_pflog.c | 19 ++++++++-----------
 1 file changed, 8 insertions(+), 11 deletions(-)

commit 15ece216a76a558919b695fc79df35c449815136
Author: mpi <mpi@openbsd.org>
Date:   Mon May 15 12:26:00 2017 +0000

    Enable the NET_LOCK(), take 3.
    
    Recursions are still marked as XXXSMP.
    
    ok deraadt@, bluhm@

 sys/net/pf.c       | 51 +++++++++++++++------------------------------------
 sys/net/pf_ioctl.c | 16 +++-------------
 sys/net/pf_norm.c  |  4 +++-
 sys/net/pfvar.h    |  7 +++----
 4 files changed, 24 insertions(+), 54 deletions(-)

commit 70b55ec85002e5d4bdbb84557d71027606646a81
Author: mikeb <mikeb@openbsd.org>
Date:   Mon May 15 11:23:25 2017 +0000

    Hook up FQ-CoDel to the tree and enable configuration in the pfctl(8)
    
    OK sthen, visa

 sys/net/pf_ioctl.c | 19 +++++++++++++++----
 sys/net/pfvar.h    | 13 ++++++++++++-
 2 files changed, 27 insertions(+), 5 deletions(-)

commit 99a6f9295a71b869d30d77145c4332a35fbed94c
Author: patrick <patrick@openbsd.org>
Date:   Mon May 8 20:24:03 2017 +0000

    Replace the global variables pfr_{sin,sin6} with stack local variables
    so that we can run these parts of pf in parallel.  Also replace a
    single usage of pfr_mask with a stack local variable.
    
    ok mpi@

 sys/net/pf_table.c | 76 ++++++++++++++++++++++++++++++++++--------------------
 1 file changed, 48 insertions(+), 28 deletions(-)

commit 7a6f620d5765e09bf4cf4021fcf74ab181060be9
Author: mikeb <mikeb@openbsd.org>
Date:   Fri May 5 16:30:39 2017 +0000

    Put back the call to pf_remove_src_node lost in the netlock backout
    
    Reported by Remi Barbier, thanks!  OK mpi@

 sys/net/pf.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit 9c681c750c71b1888ae24096ace29acee5c25b57
Author: bluhm <bluhm@openbsd.org>
Date:   Thu May 4 15:00:24 2017 +0000

    Introduce sstosa() for converting sockaddr_storage with a type safe
    inline function instead of casting it to sockaddr.  While there,
    use inline instead of __inline for all these conversions.  Some
    struct sockaddr casts can be avoided completely.
    OK dhill@ mpi@

 sys/net/pf.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 74d689df2728259864170bce9049ead9e5ae7c17
Author: mikeb <mikeb@openbsd.org>
Date:   Tue May 2 12:27:37 2017 +0000

    Provide pluggable queueing interface for pf
    
    By hiding H-FSC behind pfq_ops structure similar to the ifq_ops,
    we provide a possibility to plug alternative queueing interfaces
    for use in pf.  This reduces amount of H-FSC specific code in the
    pf ioctl handler
    
    While here, change the the order of elements in hfsc_class_stats
    to provide some compatibility between queue stat structures of
    different traffic conditioners.
    
    No objections from henning@, ok sthen@

 sys/net/pf_ioctl.c | 83 +++++++++++++++++++++++++++++-------------------------
 sys/net/pfvar.h    |  9 +++++-
 2 files changed, 52 insertions(+), 40 deletions(-)

commit c50ff513ead7a870f854b743e69a6750ba8572f7
Author: sthen <sthen@openbsd.org>
Date:   Sun Apr 23 11:37:11 2017 +0000

    Some of the LOG_NOTICE messages from PF were seen in normal operations
    with certain rulesets and excessively noisy; move them to LOG_INFO (which was
    previously unused).  ok benno@

 sys/net/pf_lb.c   | 18 +++++++++---------
 sys/net/pf_norm.c | 10 +++++-----
 2 files changed, 14 insertions(+), 14 deletions(-)

commit 86469161dcb4a47bc014297d0c4fd23cc1d2a04b
Author: yasuoka <yasuoka@openbsd.org>
Date:   Fri Apr 21 23:21:02 2017 +0000

    Speed up DIOCKILLSTATES by using the RB tree index if all fields used
    by the tree of given state key are filled.
    
    ok sasha

 sys/net/pf_ioctl.c | 60 +++++++++++++++++++++++++++++++++++++++++++++++++++---
 1 file changed, 57 insertions(+), 3 deletions(-)

commit 459fa0feb1e08ab4109b4bff330f1f74c94429d3
Author: bluhm <bluhm@openbsd.org>
Date:   Fri Apr 14 20:46:31 2017 +0000

    Pass down the address family through the pr_input calls.  This
    allows to simplify code used for both IPv4 and IPv6.
    OK mikeb@ deraadt@

 sys/net/if_pfsync.c | 4 ++--
 sys/net/if_pfsync.h | 4 ++--
 2 files changed, 4 insertions(+), 4 deletions(-)

commit 265a1ec57e702d97bc8bccd7cabf77bdfdd08787
Author: dhill <dhill@openbsd.org>
Date:   Tue Apr 11 14:43:49 2017 +0000

    Partially revert previous mallocarray conversions that contain
    constants.
    
    The consensus is that if both operands are constant, we don't need
    mallocarray.  Reminded by tedu@
    
    ok deraadt@

 sys/net/if_pfsync.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 02bfc1718cea16a438927b7c32f251cf3f6912b6
Author: dhill <dhill@openbsd.org>
Date:   Sun Apr 9 17:57:58 2017 +0000

    Use mallocarray to allocate multicast group memberships.
    
    ok deraadt@

 sys/net/if_pfsync.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit c8915b1edf5f30c94370b39ef5a776c42cbfbf9a
Author: deraadt <deraadt@openbsd.org>
Date:   Wed Apr 5 13:35:18 2017 +0000

    When building counter memory in preparation to copy to userland, always
    zero the buffers first.  All the current objects appear to be safe,
    however future changes might introduce structure pads.
    Discussed with guenther, ok bluhm

 sys/net/if_pfsync.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit b554ebfc5ef68dbcbabda317521525d69f01b5e5
Author: mpi <mpi@openbsd.org>
Date:   Fri Mar 17 17:19:16 2017 +0000

    Revert the NET_LOCK() and bring back pf's contention lock for release.
    
    For the moment the NET_LOCK() is always taken by threads running under
    KERNEL_LOCK().  That means it doesn't buy us anything except a possible
    deadlock that we did not spot.  So make sure this doesn't happen, we'll
    have plenty of time in the next release cycle to stress test it.
    
    ok visa@

 sys/net/pf.c       | 52 ++++++++++++++++++++++++++++++++++++----------------
 sys/net/pf_ioctl.c | 16 +++++++++++++---
 sys/net/pf_norm.c  |  4 +---
 sys/net/pfvar.h    |  7 ++++---
 4 files changed, 54 insertions(+), 25 deletions(-)

commit ea0f2f073ac233143ae8c52de68c9282b576f12d
Author: stsp <stsp@openbsd.org>
Date:   Sat Mar 11 13:21:16 2017 +0000

    Add a detachhook to pfsync(4) which deals with the syncdev going away.
    Fixes a panic observed by douple-p (aka pb@) when destroying the syncdev.
    tweak & ok mpi@

 sys/net/if_pfsync.c | 31 +++++++++++++++++++++++++++----
 1 file changed, 27 insertions(+), 4 deletions(-)

commit 54941f8c23af5f3054ab65b0af68b4bda4e509e4
Author: claudio <claudio@openbsd.org>
Date:   Thu Mar 9 05:47:28 2017 +0000

    Prevent integer overflow in PF when calculating the adaptive timeout.
    Mainly states of established TCP connections whould be affected resulting
    in immediate state removal once the numer of states is bigger than
    adaptive.start.  Disabling adative timeouts is a workaround to avoid this bug.
    Issue found and initial diff by Mathieu Blanc (mathieu.blanc at cea dot fr)
    OK mikeb@

 sys/net/pf.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

> 5b551954ab0c94bd17a4405183a5a3dfd4370751

commit 74313de8d2a52ac56876326221d64472de587b53
Author: mikeb <mikeb@openbsd.org>
Date:   Tue Mar 7 16:28:37 2017 +0000

    Don't overwrite the flow ID once it's set
    
    Output processing may split, encapsulate or obfuscate a single
    stream which makes the changed flow ID less useful for purposes
    of flow control, for instance fair sharing of bandwidth.
    
    OK dlg

 sys/net/pf.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 78e743e620113a41115d3045c09b9bb44f5e2073
Author: mpi <mpi@openbsd.org>
Date:   Tue Mar 7 09:29:40 2017 +0000

    Enforce that tcbtable and udbtable must be accessed with the NET_LOCK().
    
    Get rid of the old splnet()/splx() dances.  What's protecting them right
    now is the KERNEL_LOCK().  but since pf(4) look at these tables we want
    to protect them in another way, hence the NET_LOCK(), at least as hint.
    
    ok bluhm@

 sys/net/pf.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit fe5c5fe8bd66b3b814b216a23f25c511e1a2375e
Author: mpi <mpi@openbsd.org>
Date:   Wed Feb 22 16:12:12 2017 +0000

    Amend a misleading comment mentioning ``ipintrq''.

 sys/net/pfvar.h | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 4a633b67b840b60178d84acc1e3d6d1ba7906cd7
Author: jca <jca@openbsd.org>
Date:   Mon Feb 20 06:30:39 2017 +0000

    pfsync(4) percpu counters
    
    ok florian@

 sys/net/if_pfsync.c | 70 ++++++++++++++++++++++++++++++-----------------------
 sys/net/if_pfsync.h | 32 +++++++++++++++++++++++-
 2 files changed, 71 insertions(+), 31 deletions(-)

commit 9b1ed563285ff6714aac11bdd1309d0fca487c3e
Author: mpi <mpi@openbsd.org>
Date:   Tue Feb 14 10:31:15 2017 +0000

    Convert most of the manual checks for CPU hogging to sched_pause().
    
    The distinction between preempt() and yield() stays as it is usueful
    to know if a thread decided to yield by itself or if the kernel told
    him to go away.
    
    ok tedu@, guenther@

 sys/net/pf_table.c | 5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)

commit 79a86c4bedc01e606f297f4905b1852338505966
Author: jca <jca@openbsd.org>
Date:   Thu Feb 9 15:19:32 2017 +0000

    percpu counters for TCP stats
    
    ok mpi@ bluhm@

 sys/net/pf.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit d49b12123802b5ed957d7b8b7481076eb60c1cd6
Author: mpi <mpi@openbsd.org>
Date:   Thu Feb 9 10:29:37 2017 +0000

    Replace a custom loop calling yield() by the idiom to check if the
    current process is hogging a CPU.
    
    ok mikeb@, visa@, tedu@

 sys/net/pf_table.c | 10 ++++------
 1 file changed, 4 insertions(+), 6 deletions(-)

commit 56a5bba3162942e8294b1e4c73d67883f033a922
Author: jsg <jsg@openbsd.org>
Date:   Wed Feb 8 01:20:40 2017 +0000

    Remove an uneeded NULL test which was after a deref.
    ok mpi@ henning@ sashan@

 sys/net/pf_lb.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 31e14cac17d86aa6fed441f5227c454a3ee59fc1
Author: jca <jca@openbsd.org>
Date:   Sun Feb 5 16:04:14 2017 +0000

    Use percpu counters for ip6stat
    
    Try to follow the existing examples.  Some notes:
    - don't implement counters_dec() yet, which could be used in two
      similar chunks of code.  Let's see if there are more users first.
    - stop incrementing IPv6-specific mbuf stats, IPv4 has no equivalent.
    
    Input from mpi@, ok bluhm@ mpi@

 sys/net/pf.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit e54cc6e3b439394bebad41c1673c5c7db1d53726
Author: benno <benno@openbsd.org>
Date:   Mon Jan 30 17:52:24 2017 +0000

    whitespace, from bluhm@

 sys/net/pf.c | 5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)

commit 3a1c295ed4e6b77c7216d126b9ceefff0504ff4c
Author: benno <benno@openbsd.org>
Date:   Mon Jan 30 17:41:33 2017 +0000

    removes the pf_consistency_lock and protects the users with
    NET_LOCK().  pfioctl() will need the NET_LOCK() anyway. So better keep
    things simple until we're going to redesign PF for a MP world.
    fixes the crash reported by Kaya Saman.
    ok mpi@, bluhm@

 sys/net/pf.c       | 49 +++++++++++++------------------------------------
 sys/net/pf_ioctl.c | 16 +++-------------
 sys/net/pf_norm.c  |  4 +++-
 sys/net/pfvar.h    |  7 +++----
 4 files changed, 22 insertions(+), 54 deletions(-)

commit 96be3d963b5604cc32eea23d6dcaee46d64ef1dc
Author: bluhm <bluhm@openbsd.org>
Date:   Sun Jan 29 19:58:47 2017 +0000

    Change the IPv4 pr_input function to the way IPv6 is implemented,
    to get rid of struct ip6protosw and some wrapper functions.  It is
    more consistent to have less different structures.  The divert_input
    functions cannot be called anyway, so remove them.
    OK visa@ mpi@

 sys/net/if_pfsync.c | 28 ++++++++++++++--------------
 sys/net/if_pfsync.h |  4 ++--
 2 files changed, 16 insertions(+), 16 deletions(-)

commit 8f50be26efbcb88c43579636cc560843a6399860
Author: bluhm <bluhm@openbsd.org>
Date:   Wed Jan 25 17:34:31 2017 +0000

    Since raw_input() and route_input() are gone from pr_input, we can
    make the variable parameters of the protocol input functions fixed.
    Also add the proto to make it similar to IPv6.
    OK mpi@ guenther@ millert@

 sys/net/if_pfsync.c | 4 ++--
 sys/net/if_pfsync.h | 4 ++--
 2 files changed, 4 insertions(+), 4 deletions(-)

commit dfbeea3123262cd0b43aa302dd27fb952efab121
Author: mpi <mpi@openbsd.org>
Date:   Wed Jan 25 06:15:50 2017 +0000

    Enable the NET_LOCK(), take 2.
    
    Recursions are currently known and marked a XXXSMP.
    
    Please report any assert to bugs@

 sys/net/pf.c | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

commit f419757acbbd506fa5d4b7d766f6eec097b931f9
Author: krw <krw@openbsd.org>
Date:   Tue Jan 24 10:08:30 2017 +0000

    A space here, a space there. Soon we're talking real whitespace
    rectification.

 sys/net/if_pflog.c | 10 +++++-----
 sys/net/pf_if.c    |  4 ++--
 sys/net/pf_ioctl.c | 10 +++++-----
 sys/net/pf_table.c | 12 ++++++------
 sys/net/pfvar.h    |  4 ++--
 5 files changed, 20 insertions(+), 20 deletions(-)

commit 99bf4b5f302a5fedb8d3e4f30e0812a8af18dd3c
Author: mpi <mpi@openbsd.org>
Date:   Mon Jan 23 11:37:29 2017 +0000

    Flag pseudo-interfaces as such in order to call add_net_randomness()
    only once per packet.
    
    Fix a regression introduced when if_input() started to be called by
    every pseudo-driver.
    
    ok claudio@, dlg@

 sys/net/if_pflog.c  | 3 ++-
 sys/net/if_pfsync.c | 3 ++-
 2 files changed, 4 insertions(+), 2 deletions(-)

commit 0f94a2cf0e6bb31373f6f24c41eb8b78620b414b
Author: mpi <mpi@openbsd.org>
Date:   Mon Jan 23 09:08:24 2017 +0000

    Kill unecessary splsoftnet()/splx() dances, what's protecting radix
    globals is the KERNEL_LOCK().
    
    ok claudio@

 sys/net/pf_table.c | 32 ++++----------------------------
 1 file changed, 4 insertions(+), 28 deletions(-)

commit 24d7e14392d2cd8e6f03ffe24a18bb0d9c4f7b7a
Author: claudio <claudio@openbsd.org>
Date:   Fri Jan 20 05:03:48 2017 +0000

    Stop using pfsockaddr_union outside of pf so that we can remove its usage
    inside pf later on. pfsync can use the one from ip_ipsp.h and bridge can
    have its own version for now.
    OK mpi@ phessler@

 sys/net/if_pfsync.h | 5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)

commit d24e0a4e7bf196e233aecd3188df0cbcc178ee00
Author: mpi <mpi@openbsd.org>
Date:   Fri Jan 20 03:56:46 2017 +0000

    pfsync_update_net_tdb() is only called at IPL_SOFTNET, no need for a
    splsofnet()/splx() dance.
    
    Tested by Hrvoje Popovski, ok visa@

 sys/net/if_pfsync.c | 8 +++-----
 1 file changed, 3 insertions(+), 5 deletions(-)

commit 4bee61c4e342335fbe8ae94fd204d3440ebdc39b
Author: mpi <mpi@openbsd.org>
Date:   Fri Jan 20 00:51:56 2017 +0000

    No need to handle SIOCAIFADDR in drivers, it's never passed down to
    them.
    
    ok claudio@

 sys/net/if_pfsync.c | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

commit 50a11db7cfd72297ee10e4fbc8fb32c3cbd32a33
Author: mpi <mpi@openbsd.org>
Date:   Mon Jan 9 14:47:13 2017 +0000

    pf_purge_thread() needs the NET_LOCK().
    
    ok sashan@, visa@

 sys/net/pf.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit a324973b48aca9dbadc8984bb6396f32a2717b0e
Author: bluhm <bluhm@openbsd.org>
Date:   Thu Dec 29 13:01:48 2016 +0000

    In pf_refragment6() use the valid route from pf_route6() instead
    of calling rtalloc() again.
    OK mpi@

 sys/net/pf.c      |  6 +++---
 sys/net/pf_norm.c | 15 ++-------------
 sys/net/pfvar.h   |  4 ++--
 3 files changed, 7 insertions(+), 18 deletions(-)

commit bca7f9b13385e3940d8705b91ae9969a86a39b96
Author: bluhm <bluhm@openbsd.org>
Date:   Thu Dec 29 00:26:48 2016 +0000

    Use __func__ instead of explicit function name in panic messages.

 sys/net/pf_norm.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

commit 4b41ce63a33f3cc542c301d069bfa926d1dd5095
Author: bluhm <bluhm@openbsd.org>
Date:   Wed Dec 28 23:58:20 2016 +0000

    Fix white spaces.  No binary change.

 sys/net/pf_norm.c | 20 ++++++++++----------
 1 file changed, 10 insertions(+), 10 deletions(-)

commit 4f7fcb0b3ce4e811dd2d9eab082ccfc2a9ff43e3
Author: bluhm <bluhm@openbsd.org>
Date:   Wed Dec 28 15:36:15 2016 +0000

    In pf_find_state() pkt_sk was set to NULL if pkt_sk->reverse was
    not valid.  This did not work as the value of pkt_sk must be used
    later to establish the link.  So discard the packet statekey only
    if it is invalid itself and use it to establish the reverse link.
    From Christiano Haesbaert; OK sashan@

 sys/net/pf.c | 11 ++++++-----
 1 file changed, 6 insertions(+), 5 deletions(-)

commit 878ec36ea78007a72311c2bd0fc5fcfbf67437d3
Author: bluhm <bluhm@openbsd.org>
Date:   Wed Dec 28 15:19:02 2016 +0000

    Better check for a valid route than for an existing route in pf
    route-to by calling rtisvalid().  Make pf_route() and pf_route6()
    similar and move the rtalloc() call to the same place.
    OK mpi@

 sys/net/pf.c | 27 ++++++++++++++-------------
 1 file changed, 14 insertions(+), 13 deletions(-)

commit 68d5ab441716baa4263db9a5d2c0656fd4d11e3d
Author: bluhm <bluhm@openbsd.org>
Date:   Fri Dec 23 20:49:41 2016 +0000

    Replace function names with __func__ in debug prints to make grep
    happy.

 sys/net/pf.c | 22 +++++++++++-----------
 1 file changed, 11 insertions(+), 11 deletions(-)

commit 70f5f3e3dd99bf0dc9419a9c9089f42821a3d8e9
Author: bluhm <bluhm@openbsd.org>
Date:   Fri Dec 23 19:46:13 2016 +0000

    Fix white spaces.  No binary change.

 sys/net/pf.c | 30 +++++++++++++++---------------
 1 file changed, 15 insertions(+), 15 deletions(-)

commit 20779004d2a1028c067788e8a783ccb96985d586
Author: mpi <mpi@openbsd.org>
Date:   Mon Dec 19 15:46:28 2016 +0000

    Timer sending packets need to grab the NET_LOCK().
    
    ok bluhm@

 sys/net/if_pfsync.c | 21 +++++++++------------
 1 file changed, 9 insertions(+), 12 deletions(-)

commit 662d13b114be0983558f0b4791b3732d4012623a
Author: mpi <mpi@openbsd.org>
Date:   Mon Dec 12 13:30:05 2016 +0000

    Kill recursive splsoftnet().
    
    ok bluhm@

 sys/net/pf_if.c | 26 +++-----------------------
 1 file changed, 3 insertions(+), 23 deletions(-)

commit 4596232973659e0b5175ef0e3fe0ffad3f5165ba
Author: jsg <jsg@openbsd.org>
Date:   Tue Dec 6 00:01:55 2016 +0000

    Use the sizeof udphdr not the sizeof a pointer to it in the af-to
    specific part of pf_test_state_icmp().  This worked by accident on LP64
    archs as the struct is eight bytes long.
    
    ok mikeb@ bluhm@ krw@ jca@

 sys/net/pf.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 96e63e898493073f16e0e0bc2afcb4b5ec444326
Author: bluhm <bluhm@openbsd.org>
Date:   Mon Nov 28 23:15:30 2016 +0000

    Path MTU discovery and traceroute did not always work with pf af-to.
    If an incoming packet is directly put into the output path, sending
    the icmp error packet is never done.  As this is basically forwarding,
    calling ip_forward() for such packets does everything that is needed.
    OK mikeb@

 sys/net/pf.c | 12 +++++++++---
 1 file changed, 9 insertions(+), 3 deletions(-)

commit 1bcfad03f2ad7d9f6cadeb048244c88c37b9dcfe
Author: bluhm <bluhm@openbsd.org>
Date:   Wed Nov 23 12:13:23 2016 +0000

    Explicitly forbid to combine af-to with route-to in pfctl.  The
    parser cannot handle that correctly and is is unclear wether the
    kernel code would work.  Remove the feature until someone needs it
    and properly implements and tests it.
    OK mike@ sashan@ mpi@

 sys/net/pf.c | 32 ++++++++++----------------------
 1 file changed, 10 insertions(+), 22 deletions(-)

commit 266d31c57a1e75618232a2218ec70f69312f408e
Author: procter <procter@openbsd.org>
Date:   Tue Nov 22 19:29:54 2016 +0000

    Fold union pf_headers buffer into struct pf_pdesc (enabled by pfvar_priv.h).
    Prevent pf_socket_lookup() reading uninitialised header buffers on fragments.
    OK blum@ sashan@

 sys/net/if_pflog.c  |   7 +-
 sys/net/if_pfsync.c |   5 +-
 sys/net/pf.c        | 270 +++++++++++++++++++++++++---------------------------
 sys/net/pf_norm.c   |  10 +-
 sys/net/pfvar.h     |   8 +-
 5 files changed, 142 insertions(+), 158 deletions(-)

commit f0f63321f28f76a02dac8db178f3e8915d33fe2c
Author: bluhm <bluhm@openbsd.org>
Date:   Mon Nov 21 17:52:20 2016 +0000

    Follow RFC 5722 more strictly when handling overlapping fragments
    in pf.  Drop the whole fragment state if IPv6 fragments appear which
    have invalid length or fragment-offset or more-fragment-bit.  In
    IPv4 they are considered invalid and just dropped like before.
    Found by Antonios Atlasis; OK sashan@ sthen@

 sys/net/pf_norm.c | 11 +++++++----
 1 file changed, 7 insertions(+), 4 deletions(-)

commit 06cea14857c40596fca0cb1ce1e4074b5bb06525
Author: bluhm <bluhm@openbsd.org>
Date:   Mon Nov 21 15:23:18 2016 +0000

    In pf_route() and pf_route6() the !r->rt case was only used by
    af-to.  pf_route6() called ip6_output() to do the work while
    pf_route() had some custom implementation for that.  It is simpler
    to call ip_output() or ip6_output() from pf_test() directly.
    OK procter@ sashan@

 sys/net/pf.c | 92 ++++++++++++++++++++++++++++--------------------------------
 1 file changed, 43 insertions(+), 49 deletions(-)

commit 17ea4b2bcd1479f13a6112a0f37b4a8dab504c7b
Author: bluhm <bluhm@openbsd.org>
Date:   Thu Nov 17 13:17:32 2016 +0000

    The pf fragment reassembly code accepted IPv6 hop-by-hop headers
    after fragment headers.  Add an extra check that the hop-by-hop
    header is always the first extension header after the IPv6 header.
    Found by Antonios Atlasis; OK sthen@ mpi@

 sys/net/pf.c | 14 +++++++++++---
 1 file changed, 11 insertions(+), 3 deletions(-)

commit a7d48ceceecd4eaf16e108cc08ee5e8e090bcc90
Author: mpi <mpi@openbsd.org>
Date:   Wed Nov 16 08:46:05 2016 +0000

    Kill recursive splsoftnet()s.
    
    ok bluhm@

 sys/net/pf_if.c    | 31 ++++---------------------------
 sys/net/pf_ioctl.c |  6 ++----
 2 files changed, 6 insertions(+), 31 deletions(-)

commit 3dfcac0201d35a9620b3202ed84c41844fadf17f
Author: bluhm <bluhm@openbsd.org>
Date:   Mon Nov 14 13:25:00 2016 +0000

    Instead of passing an extra mbuf pointer to pf_route(), it should
    just use pd->m.  Then pf_test() can also operate on pd.m and set
    the *m0 value in the caller just before it returns.
    OK sashan@

 sys/net/if_pfsync.c |  7 +++--
 sys/net/pf.c        | 81 ++++++++++++++++++++++++-----------------------------
 sys/net/pfvar.h     |  8 ++----
 3 files changed, 44 insertions(+), 52 deletions(-)

commit 48afdb401166a8e48e70271469bade7c655a3a0a
Author: dlg <dlg@openbsd.org>
Date:   Mon Nov 14 03:51:53 2016 +0000

    turn ipstat into a set of percpu counters.
    
    each counter is identified by an enum value which correspond to the
    original members of the ipstat struct.
    
    ipstat_inc(ips_foo) replaces ipstat.ips_foo++ for the actual updates.
    ipstat_inc is a thin wrapper around counters_inc.
    
    counters are still returned to userland via the ipstat struct for now.
    
    ok mpi@ mikeb@

 sys/net/pf.c | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

commit 7c6e64c4fb093cd15f832bfd7386305073fbc135
Author: sashan <sashan@openbsd.org>
Date:   Fri Oct 28 07:54:19 2016 +0000

    - once rule should not attempt to remove its parent rule.
      (problem pointed out by Petr, fix proposed by Dilli) _at_ oracle

 sys/net/pf.c       | 8 +-------
 sys/net/pf_ioctl.c | 3 ++-
 2 files changed, 3 insertions(+), 8 deletions(-)

commit f74a4c70c2730ebe0138f562824a378c9d164d59
Author: bluhm <bluhm@openbsd.org>
Date:   Thu Oct 27 21:41:20 2016 +0000

    Pass a struct pf_pdesc to pf_route() like it is done in the other
    pf functions.  That means less parameters, more consistency and
    later we can call functions that need a pd from pf_route().
    OK sashan@

 sys/net/if_pfsync.c | 41 ++++++++++++++++++++++++-----------------
 sys/net/pf.c        | 28 +++++++++++++---------------
 sys/net/pfvar.h     | 10 +++++-----
 3 files changed, 42 insertions(+), 37 deletions(-)

commit ab417b3aceab3374446d64a762fe7a3053ef6401
Author: bluhm <bluhm@openbsd.org>
Date:   Wed Oct 26 21:07:22 2016 +0000

    Put union pf_headers and struct pf_pdesc into separate header file
    pfvar_priv.h.  The pf_headers had to be defined in multiple .c files
    before.  In pfvar.h it would have unknown storage size, this file
    is included in too many places.  The idea is to have a private pf
    header that is only included in the pf part of the kernel.  For now
    it contains pf_pdesc and pf_headers, it may be extended later.
    discussion, input and OK henning@ procter@ sashan@

 sys/net/if_pflog.c | 16 ++++----------
 sys/net/pf.c       | 44 ++++++++++++--------------------------
 sys/net/pf_ioctl.c | 19 ++++++++++------
 sys/net/pf_lb.c    | 21 +++++++++---------
 sys/net/pf_norm.c  | 17 ++++++++-------
 sys/net/pf_table.c | 14 +++++++++++-
 sys/net/pfvar.h    | 63 +++++-------------------------------------------------
 7 files changed, 68 insertions(+), 126 deletions(-)

commit 6679bb158121cd38281c05e4beabee59eeb5da94
Author: sashan <sashan@openbsd.org>
Date:   Thu Oct 20 23:18:43 2016 +0000

    - PF should send a challenge ACK as response to SYN, which matches existing
      state. Extra thanks goes to bluhm@ for careful testing and fixing patch I've
      sent to tech@
    
    O.K. henning@ bluhm@

 sys/net/pf.c | 64 ++++++++++++++++++++++++++++++++++++++++++++++--------------
 1 file changed, 49 insertions(+), 15 deletions(-)

commit 65bdcabe95becca7cd229a55fb06f54ad151d4c2
Author: henning <henning@openbsd.org>
Date:   Tue Oct 18 13:28:01 2016 +0000

    split pf_send_tcp() into the part that builds the mbuf and the actual
    sending, needed soon. ok sashan mikeb lteo

 sys/net/pf.c    | 29 ++++++++++++++++++++---------
 sys/net/pfvar.h | 13 ++++++++++++-
 2 files changed, 32 insertions(+), 10 deletions(-)

commit f1b0ae9324e527b0bbf479fd0e53e13f090ac9d2
Author: bluhm <bluhm@openbsd.org>
Date:   Tue Oct 18 11:29:27 2016 +0000

    The variable dlen is always positive and d may be negative.  So
    declare both with the correct sign in pf_change_icmp_af().
    OK henning@

 sys/net/pf.c | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

commit 50188ace62ebd193848f0b5e4f480aa74db65a41
Author: bluhm <bluhm@openbsd.org>
Date:   Tue Oct 18 11:20:42 2016 +0000

    The checksum of a ICMP "need to frag" packet for TCP was wrong when
    created from a ICMP6 "too big" packet.  The function pf_change_icmp_af()
    has code to adjust the pseudo-header checksum in the ICMP6 case,
    but pf_test_state_icmp() changed the proto before the case was
    entered.
    So call pf_change_icmp_af() before the pd->proto is converted in
    the TCP and UDP payload case like it was already done for ICMP and
    ICMP6 payload.
    Found by sys/net/pf_forward regress test; OK henning@

 sys/net/pf.c | 20 +++++++++-----------
 1 file changed, 9 insertions(+), 11 deletions(-)

commit 2df47eecb0ded0c3d1196ace7454035eab87d603
Author: henning <henning@openbsd.org>
Date:   Sun Oct 9 18:01:57 2016 +0000

    formatting nit (a tab got lost somewhen)

 sys/net/pf.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 1bf96e4c5a3205d8c238b1b17c9f5f96e325fb31
Author: bluhm <bluhm@openbsd.org>
Date:   Thu Oct 6 19:09:08 2016 +0000

    Remove redundant comments that say a function must be called at
    splsoftnet() if the function does a splsoftassert(IPL_SOFTNET)
    anyway.

 sys/net/pf.c | 6 ++----
 1 file changed, 2 insertions(+), 4 deletions(-)

commit 7887537f925f0c8b87f94c1aa492e660f9a78951
Author: mpi <mpi@openbsd.org>
Date:   Tue Oct 4 13:54:32 2016 +0000

    Convert timeouts that need a process context to timeout_set_proc(9).
    
    The current reason is that rtalloc_mpath(9) inside ip_output() might
    end up inserting a RTF_CLONED route and that require a write lock.
    
    ok kettenis@, bluhm@

 sys/net/if_pfsync.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

commit 342c264f9a011112eb739d7981c147354ad1b283
Author: dlg <dlg@openbsd.org>
Date:   Tue Sep 27 04:57:17 2016 +0000

    roll back turning RB into RBT until i get better at this process.

 sys/net/if_pfsync.c  |  6 +++---
 sys/net/pf.c         | 61 ++++++++++++++++++++++++++--------------------------
 sys/net/pf_if.c      | 32 +++++++++++++--------------
 sys/net/pf_ioctl.c   | 35 +++++++++++++++---------------
 sys/net/pf_lb.c      |  6 +++---
 sys/net/pf_norm.c    | 24 ++++++++++-----------
 sys/net/pf_ruleset.c | 31 +++++++++++++-------------
 sys/net/pf_table.c   | 44 ++++++++++++++++++-------------------
 sys/net/pfvar.h      | 54 +++++++++++++++++++++++-----------------------
 9 files changed, 146 insertions(+), 147 deletions(-)

commit 367432d6cd24d48ffc94204fe1b88b4eb6d07c3c
Author: dlg <dlg@openbsd.org>
Date:   Tue Sep 27 02:51:12 2016 +0000

    move pf from the RB macros to the RBT functions.

 sys/net/if_pfsync.c  |  6 +++---
 sys/net/pf.c         | 61 ++++++++++++++++++++++++++--------------------------
 sys/net/pf_if.c      | 32 +++++++++++++--------------
 sys/net/pf_ioctl.c   | 35 +++++++++++++++---------------
 sys/net/pf_lb.c      |  6 +++---
 sys/net/pf_norm.c    | 24 ++++++++++-----------
 sys/net/pf_ruleset.c | 31 +++++++++++++-------------
 sys/net/pf_table.c   | 44 ++++++++++++++++++-------------------
 sys/net/pfvar.h      | 54 +++++++++++++++++++++++-----------------------
 9 files changed, 147 insertions(+), 146 deletions(-)

commit b9b94518b5f68dbc2b9c3c71c568a350f6b9bf44
Author: jsg <jsg@openbsd.org>
Date:   Thu Sep 22 10:50:19 2016 +0000

    Fix indentation.  No binary change.

 sys/net/pf.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit e402c1de3463894a6e97fbc8a57d6ade6959c8ae
Author: mpi <mpi@openbsd.org>
Date:   Wed Sep 21 07:41:49 2016 +0000

    Remove recursive splsoftnet() calls, from David Hill.

 sys/net/if_pfsync.c | 5 +----
 1 file changed, 1 insertion(+), 4 deletions(-)

commit 1378bae268607a02c6648b2f5af62a452cd7f812
Author: dlg <dlg@openbsd.org>
Date:   Thu Sep 15 02:00:16 2016 +0000

    all pools have their ipl set via pool_setipl, so fold it into pool_init.
    
    the ioff argument to pool_init() is unused and has been for many
    years, so this replaces it with an ipl argument. because the ipl
    will be set on init we no longer need pool_setipl.
    
    most of these changes have been done with coccinelle using the spatch
    below. cocci sucks at formatting code though, so i fixed that by hand.
    
    the manpage and subr_pool.c bits i did myself.
    
    ok tedu@ jmatthew@
    
    @ipl@
    expression pp;
    expression ipl;
    expression s, a, o, f, m, p;
    @@
    -pool_init(pp, s, a, o, f, m, p);
    -pool_setipl(pp, ipl);
    +pool_init(pp, s, a, ipl, f, m, p);

 sys/net/if_pfsync.c |  6 +++---
 sys/net/pf_if.c     |  5 ++---
 sys/net/pf_ioctl.c  | 42 +++++++++++++++++-------------------------
 sys/net/pf_norm.c   | 17 +++++++----------
 sys/net/pf_table.c  | 20 +++++++-------------
 5 files changed, 36 insertions(+), 54 deletions(-)

commit 5ea6c205ea11b94cd3e0cfc7315fd7a94cce89fe
Author: mpi <mpi@openbsd.org>
Date:   Wed Sep 7 09:36:49 2016 +0000

    Rename rtable_mpath_next() into rtable_iterate() and make it do a proper
    reference count.
    
    rtable_iterate() frees the passed ``rt'' and returns the next one on the
    multipath list or NULL if there's none.
    
    ok dlg@

 sys/net/pf.c | 17 ++++++-----------
 1 file changed, 6 insertions(+), 11 deletions(-)

commit 8cf23eed7fe41b57c6ce2264de5e7fd5d7bd227b
Author: sashan <sashan@openbsd.org>
Date:   Sat Sep 3 17:11:40 2016 +0000

    Let purge thread to remove once rules, not packets.
    Thanks mikeb@ for idea to add expire time.
    
    OK mpi@, OK mikeb@

 sys/net/pf.c       | 46 +++++++++++++++++++++++++++++++++++++++++++---
 sys/net/pf_ioctl.c | 25 +++++++++++--------------
 sys/net/pfvar.h    | 12 ++++++++----
 3 files changed, 62 insertions(+), 21 deletions(-)

commit 77572ba36ebbf7c689f4af129c777e18c610220a
Author: bluhm <bluhm@openbsd.org>
Date:   Sat Sep 3 14:34:13 2016 +0000

    Reduce the factor of the limits derived form NMBCLUSTERS.  We want
    the additional clusters in the socket buffer and not elsewhere.
    OK claudio@

 sys/net/pfvar.h | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 8dc66624baa62cf9d50db09fba450d77b9147597
Author: dlg <dlg@openbsd.org>
Date:   Fri Sep 2 10:19:49 2016 +0000

    pool_setipl for pf bits
    
    ok phessler@ henning@

 sys/net/pf_if.c    |  3 ++-
 sys/net/pf_ioctl.c | 10 +++++++++-
 sys/net/pf_norm.c  |  5 ++++-
 sys/net/pf_table.c |  7 ++++++-
 4 files changed, 21 insertions(+), 4 deletions(-)

commit d1e0275e95ab6b081991513fd59659c8f8054770
Author: mpi <mpi@openbsd.org>
Date:   Wed Aug 24 09:41:12 2016 +0000

    Kill ip6_forward_rt reducing differences between v4 and v6.
    
    A single forwarding cache is not the answer.  The answer is 42... err PF!
    
    ok bluhm@

 sys/net/pf_norm.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 3e289497410cfe309951b399d4ee8dcbcc810b93
Author: dlg <dlg@openbsd.org>
Date:   Tue Aug 23 12:37:44 2016 +0000

    pool_setipl

 sys/net/if_pfsync.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit 7f3e6f164ebcff9c09678029baee66ef3cf7b718
Author: procter <procter@openbsd.org>
Date:   Sat Aug 20 08:34:30 2016 +0000

    Push 'field changed' guards into 'change field' functions;
    optimise pf_patch_32(); simplify pf_match_addr()
    OK mikeb@

 sys/net/pf.c    | 298 +++++++++++++++++++++-----------------------------------
 sys/net/pfvar.h |  12 +--
 2 files changed, 118 insertions(+), 192 deletions(-)

commit 468d4954402446b68ac3805e490894b3252f87d2
Author: procter <procter@openbsd.org>
Date:   Sat Aug 20 08:31:36 2016 +0000

    Retire pf_translate_ap()
    OK mpi@ mikeb@

 sys/net/pf.c | 109 ++++++++++++++++++++++++++++++-----------------------------
 1 file changed, 55 insertions(+), 54 deletions(-)

commit cb6cf9adf0507a7ec17ecd229fedfe15171c1c9f
Author: procter <procter@openbsd.org>
Date:   Wed Aug 17 03:24:11 2016 +0000

    Reintroduce 5.3-style checksum modification to preserve end-to-end checksums
    when fiddling with packets but without the mess that motivated Henning to
    remove it. Affects only this one aspect of Henning's checksum work. Also tweak
    the basic algorithm and supply a correctness argument.
    
    OK dlg@ deraadt@ sthen@; no objection henning@

 sys/net/pf.c      | 805 ++++++++++++++++++++++++++++++++++--------------------
 sys/net/pf_norm.c |  71 ++---
 sys/net/pfvar.h   |  19 +-
 3 files changed, 559 insertions(+), 336 deletions(-)

commit bd2877f05a828bb9f12c0f6af0d721a03d473ef7
Author: henning <henning@openbsd.org>
Date:   Tue Jul 19 13:34:12 2016 +0000

    style: no spaces after # for define/include, ok phessler benno

 sys/net/pf_ruleset.c | 26 +++++++++++++-------------
 1 file changed, 13 insertions(+), 13 deletions(-)

commit df28259f2f8e1261ed2aeff31bbf09cb8a9dbf4d
Author: henning <henning@openbsd.org>
Date:   Tue Jul 19 13:30:51 2016 +0000

    don't hide globals between function prototypes; ok phessler benno

 sys/net/pfvar.h | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

commit 4f8cfed0f121c2e341c59b1c781d76c8159a2734
Author: henning <henning@openbsd.org>
Date:   Tue Jul 19 12:51:19 2016 +0000

    remove wrong and misleading comment, ok phessler

 sys/net/pf_lb.c | 7 +------
 1 file changed, 1 insertion(+), 6 deletions(-)

commit d3c439a21bf0af94274d2c7abc350418b2248861
Author: henning <henning@openbsd.org>
Date:   Mon Jul 18 19:11:18 2016 +0000

    no more cbq_opts - CBQ is gone, ok mpi phessler benno

 sys/net/pfvar.h | 14 +-------------
 1 file changed, 1 insertion(+), 13 deletions(-)

commit 8a992bf26318e96b5b54f13ca2581f998cfb5cc0
Author: bluhm <bluhm@openbsd.org>
Date:   Mon Jul 18 13:17:44 2016 +0000

    Hide pf internals by moving code from in_ouraddr() to pf_ouraddr().
    OK mpi@ sashan@

 sys/net/pf.c    | 23 ++++++++++++++++++++++-
 sys/net/pfvar.h |  3 ++-
 2 files changed, 24 insertions(+), 2 deletions(-)

commit 4af3c109dbc5ac062f35413421ffda1f8c61514e
Author: bluhm <bluhm@openbsd.org>
Date:   Fri Jun 24 13:55:57 2016 +0000

    The function pf_get_sport() did work for out rules only.  Make it
    aware of the direction of the packet.  Now nat-to can be used by
    in rules and together with divert-to.  Collisions with existing
    states are found and produce a "NAT proxy port allocation failed"
    message.
    OK henning@ mikeb@

 sys/net/pf_lb.c | 31 +++++++++++++++++--------------
 1 file changed, 17 insertions(+), 14 deletions(-)

commit 3cd642e673c33411fe84751cf6ecf0bb3c2fd191
Author: bluhm <bluhm@openbsd.org>
Date:   Tue Jun 21 16:45:37 2016 +0000

    To assist debugging TCP connection reuse with NAT, expand the
    existing log in pf_state_key_attach() from the failed to the reuse
    case.
    OK mikeb@

 sys/net/pf.c | 44 ++++++++++++++++++++++----------------------
 1 file changed, 22 insertions(+), 22 deletions(-)

commit 53b39a0bd651ffdca2dbcead288e2da8e7f604ff
Author: mpi <mpi@openbsd.org>
Date:   Wed Jun 15 11:49:34 2016 +0000

    Kill nd6_output(), it doesn't do anything since the resolution logic
    has been moved to nd6_resolve().
    
    ok visa@, millert@, florian@, sthen@

 sys/net/pf.c      | 4 ++--
 sys/net/pf_norm.c | 4 ++--
 2 files changed, 4 insertions(+), 4 deletions(-)

commit 367b0410d3271136951f6c323ac43106e15f266c
Author: mikeb <mikeb@openbsd.org>
Date:   Wed Jun 15 11:36:06 2016 +0000

    There's no need to convert values returned by arc4random to the network
    byte order.  Spotted by Gleb Smirnoff (glebius@FreeBSD.org), thanks!
    
    ok tedu

 sys/net/pf.c      |  6 +++---
 sys/net/pf_lb.c   | 16 ++++++----------
 sys/net/pf_norm.c |  5 ++---
 3 files changed, 11 insertions(+), 16 deletions(-)

commit 42fa02929cbb1828ad841d12a6edbf9d8fdd83bb
Author: tedu <tedu@openbsd.org>
Date:   Tue Jun 7 01:31:54 2016 +0000

    per trending style, add continue to empty loops.
    ok mglocker

 sys/net/pf.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 734e8fb538f835bee8bd22294584d85d492b5e2d
Author: mpi <mpi@openbsd.org>
Date:   Tue May 31 07:35:36 2016 +0000

    Do not call nd6_output() without route entry argument.
    
    ok sthen@, bluhm@

 sys/net/pf.c      | 13 +++++++++++--
 sys/net/pf_norm.c | 16 ++++++++++++++--
 2 files changed, 25 insertions(+), 4 deletions(-)

commit 25e90a7f6b9280f8bd8a9eaf8ce6cd986313c59f
Author: sthen <sthen@openbsd.org>
Date:   Sat May 28 12:04:33 2016 +0000

    Backout pf.c r1.972, pf_norm.c r1.184, ok claudio
    
    pf_test calls pf_refragment6 with dst=NULL, which is passed down to
    rtable_match which attempts to dereference it.

 sys/net/pf.c      | 13 ++-----------
 sys/net/pf_norm.c | 16 ++--------------
 2 files changed, 4 insertions(+), 25 deletions(-)

commit 3c5b941fc7316e8cae3f551d79d0f615dcbce654
Author: mpi <mpi@openbsd.org>
Date:   Tue May 24 05:02:34 2016 +0000

    Do not call nd6_output() without route entry argument.
    
    ok bluhm@

 sys/net/pf.c      | 13 +++++++++++--
 sys/net/pf_norm.c | 16 ++++++++++++++--
 2 files changed, 25 insertions(+), 4 deletions(-)

commit 0dfee4b4d688271b0deffed3b4dc6fca2861b8a8
Author: mpi <mpi@openbsd.org>
Date:   Mon May 23 12:26:28 2016 +0000

    Pass a route entry to if_output() instead of relying on arpresolve() magic.
    
    This refactoring aims to reduce the number of places where a route entry is
    inserted in the routing table.
    
    ok bluhm@

 sys/net/pf.c | 12 +++++++++---
 1 file changed, 9 insertions(+), 3 deletions(-)

commit c85e1969266962e443b201d829a2996842cfcaf0
Author: mpi <mpi@openbsd.org>
Date:   Tue May 3 12:13:38 2016 +0000

    Put back a panic() if an incoming packet already has a statekey.
    
    Apparently nobody can hit this condition anymore or people do not
    report bugs if their kernel do not panic.
    
    ok dlg@, sashan@

 sys/net/pf.c | 7 ++-----
 1 file changed, 2 insertions(+), 5 deletions(-)

commit 603687392a57bda5a6d71342b905a5fe137a5a3d
Author: krw <krw@openbsd.org>
Date:   Fri Apr 29 08:55:03 2016 +0000

    Make if_output() return EAFNOSUPPORT instead of just dropping packets
    and pretending the output succeeded. Packets are still dropped!
    
    Idea from jsg@ following same change to bridge(4). ok mpi@

 sys/net/if_pflog.c  | 6 +++---
 sys/net/if_pfsync.c | 6 +++---
 2 files changed, 6 insertions(+), 6 deletions(-)

commit 1f1e8b81f96a68ab2c92a4a1fb449817f40e5e03
Author: dlg <dlg@openbsd.org>
Date:   Fri Apr 15 02:54:17 2016 +0000

    replace m_copym2 with m_dup_pkt for the dup-to handling.
    
    note that this uses max_linkhdr as the adjustment arg. this follows
    what the ip stack does when generating packets as it provides space
    for link headers (like ethernet headers) to be prepended on the new
    packet.
    
    ok henning@

 sys/net/pf.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 85878d4d88111cd898180f2830ff284a4b5ee121
Author: mpi <mpi@openbsd.org>
Date:   Thu Apr 7 14:28:16 2016 +0000

    Instead of panicking if an mbuf(9) already has a statekey dump its
    content and unlink the statekey.
    
    This should allow us to find the reminding corner cases of packets
    looped back in the stack.
    
    ok dlg@

 sys/net/pf.c | 22 +++++++++++++++++-----
 1 file changed, 17 insertions(+), 5 deletions(-)

commit 2726e66d8d12853f18f7be3e8185ab42b703959f
Author: sashan <sashan@openbsd.org>
Date:   Tue Mar 29 10:34:42 2016 +0000

    - packet must keep reference to statekey
      this is the second attempt to get it in, the first
      attempt got backed out on Jan 31 2016
    
      the change also contains fixes contributed by Stefan Kempf
      in earlier iteration.
    
    OK srhen@

 sys/net/if_pfsync.c |   4 +-
 sys/net/pf.c        | 203 +++++++++++++++++++++++++++++++++++++++++-----------
 sys/net/pfvar.h     |  19 ++++-
 3 files changed, 180 insertions(+), 46 deletions(-)

commit 723b774913848ee5dc43ec8aee19a71cd7232227
Author: sashan <sashan@openbsd.org>
Date:   Fri Mar 4 22:38:23 2016 +0000

    - putting back KASSERT(), which I've backed out on Jan 31
      We don't expect inbound packets to come to PF with statekey attached.
    
    - I've also found missing call to pf_pkt_addr_changed() at various
      places, which needs to get fixed to prevent KASSERT() from firing.
    
    OK mpi@, sthen@

 sys/net/pf.c | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

commit cf620172e55a6053cd03faca9908649988b5e345
Author: sashan <sashan@openbsd.org>
Date:   Sun Jan 31 00:18:07 2016 +0000

    - m_pkthdr.pf.statekey changes are not ready for 5.9, I must back them out
    
    OK sthen@

 sys/net/if_pfsync.c |   4 +-
 sys/net/pf.c        | 212 +++++++++++-----------------------------------------
 sys/net/pfvar.h     |  19 +----
 3 files changed, 47 insertions(+), 188 deletions(-)

commit 735cba32ddaba2d58b1b222ea741f367a29fd437
Author: dlg <dlg@openbsd.org>
Date:   Wed Jan 27 04:35:56 2016 +0000

    white space tweaks. no functional change.

 sys/net/if_pfsync.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

commit 4fcae7ea3c04eb782d3cda556846cf5c717d23a7
Author: sashan <sashan@openbsd.org>
Date:   Tue Jan 26 22:23:15 2016 +0000

    - state keys imported by if_pfsync trip refcnt != ~0 Assert
    
    OK mpi@

 sys/net/if_pfsync.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit 57466c1f5132461b16a83747567cbe620f32ea72
Author: sashan <sashan@openbsd.org>
Date:   Mon Jan 25 18:49:57 2016 +0000

    - plugging massive pf_state_key leak
    
    OK mpi@ dlg@ sthen@

 sys/net/pf.c | 28 ++++++++++++++++++----------
 1 file changed, 18 insertions(+), 10 deletions(-)

commit eacdf23bc6e7ee4d21f5358d59a15e810d0d8030
Author: mmcc <mmcc@openbsd.org>
Date:   Fri Jan 15 02:37:12 2016 +0000

    rs_malloc() does not need to be cast

 sys/net/pf_ruleset.c | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

commit f14bc9359330bf1dcbf8395b06bc6eb8f81c6d17
Author: sashan <sashan@openbsd.org>
Date:   Thu Jan 7 22:23:13 2016 +0000

    - retrying to commit earlier change, which got backed out
    
        - yet another tiny step towards MP PF. This time we need to make sure
          statekey attached to packet stays around, while accepted packet is
          routed through IP stack.
    
      this time I'm also bringing fix contributed by Stefan Kempf. Stefan's fix
      makes sure we grab reference in m_dup_pkthdr()
    
    OK bluhm@

 sys/net/pf.c    | 208 ++++++++++++++++++++++++++++++++++++++++++++------------
 sys/net/pfvar.h |  19 +++++-
 2 files changed, 181 insertions(+), 46 deletions(-)

commit b590e1a82ee2a5c39de559fab97e4a2d534f92bf
Author: jasper <jasper@openbsd.org>
Date:   Wed Dec 23 21:04:55 2015 +0000

    revert previous:
    ----------------------------------------------------------------------
    revision 1.961
    date: 2015/12/22 13:33:26;  author: sashan;  state: Exp;  lines: +153 -44;
    commitid: oBRhtWcDV0ThviVT;
    - yet another tiny step towards MP PF. This time we need to make sure
      statekey attached to packet stays around, while accepted packet is
      routed through IP stack.
    
    OK mpi@, henning@
    ----------------------------------------------------------------------
    
    there have been multiple reports of KASSERT(!pf_state_key_isvalid(sk)) being
    triggered without much effort, so back this out for now.

 sys/net/pf.c    | 197 +++++++++++++-------------------------------------------
 sys/net/pfvar.h |  18 +-----
 2 files changed, 46 insertions(+), 169 deletions(-)

commit 1f8ba0af80776627e10b90a47cb13fefa178f58c
Author: sashan <sashan@openbsd.org>
Date:   Tue Dec 22 13:33:26 2015 +0000

    - yet another tiny step towards MP PF. This time we need to make sure
      statekey attached to packet stays around, while accepted packet is
      routed through IP stack.
    
    OK mpi@, henning@

 sys/net/pf.c    | 197 +++++++++++++++++++++++++++++++++++++++++++-------------
 sys/net/pfvar.h |  18 +++++-
 2 files changed, 169 insertions(+), 46 deletions(-)

commit 2aac11ee73ff72c0624256c168229f2c5f96457e
Author: henning <henning@openbsd.org>
Date:   Sun Dec 6 10:03:23 2015 +0000

    g/c pf_change_a6(). it's exactly the same thing as pf_change_ap() with p =
    NULL. inspired by Richard Procter <richard.n.procter@gmail.com>'s mail on
    tech from Aug 17, but redone. ok sashan vgross

 sys/net/pf.c | 31 +++++++++----------------------
 1 file changed, 9 insertions(+), 22 deletions(-)

commit 78ad05cbd1eb348cf6622cf9c3eb92a64af3e116
Author: henning <henning@openbsd.org>
Date:   Sat Dec 5 21:23:51 2015 +0000

    g/c unneeded af (address family) params to pf_change_ap and _icmp
    both af and naf (af-to case) are in the pf_pdesc
    some code shuffling to actually set these before calling pf_change_ap/_icmp
    inspired by Richard Procter <richard.n.procter@gmail.com>'s mail on tech
    from Aug 17, but redone
    ok bluhm vgross

 sys/net/pf.c | 127 ++++++++++++++++++++++++++++-------------------------------
 1 file changed, 60 insertions(+), 67 deletions(-)

commit f25274e4c5c7c143d23f64906e62fd8ad909df04
Author: henning <henning@openbsd.org>
Date:   Sat Dec 5 14:58:06 2015 +0000

    pass a pointer to pf_test()'s reason to pf_test_rule instead of using a
    local one. While we always intended to keep the logging in pf_test_rule
    and pf_test so seperate that we don't end up with a wrong reason, this
    is just too fragile and I can't even convince myself that it still is
    right. pointed out by markus, ok bluhm benno

 sys/net/pf.c | 42 ++++++++++++++++++++++--------------------
 1 file changed, 22 insertions(+), 20 deletions(-)

commit acbf7ea14cfa1f6803b4cf408ad49ee66ae3b7cb
Author: tedu <tedu@openbsd.org>
Date:   Sat Dec 5 10:07:55 2015 +0000

    remove old lint annotations

 sys/net/if_pflog.c  | 3 +--
 sys/net/if_pfsync.c | 3 +--
 2 files changed, 2 insertions(+), 4 deletions(-)

commit 528ff3946710c3940efc90589f62c714f31fb812
Author: sashan <sashan@openbsd.org>
Date:   Thu Dec 3 21:11:53 2015 +0000

    ip_send()/ip6_send() allow PF to send response packet in ipsoftnet task.
    this avoids current recursion to pf_test() function. the change also
    switches icmp_error()/icmp6_error() to use ip_send()/ip6_send() so
    they are safe for PF.
    
    The idea comes from Markus Friedl. bluhm, mikeb and mpi helped me
    a lot to get it into shape.
    
    OK bluhm@, mpi@

 sys/net/pf.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 38b876c502fa315fec5f5d459f37a04a4db8522a
Author: bluhm <bluhm@openbsd.org>
Date:   Thu Dec 3 14:05:28 2015 +0000

    To avoid that the stack manipules the pf statekeys directly, introduce
    pf_inp_...() lookup, link and unlink functions as an interface.
    Locking can be added to them later.  Remove the first linking at
    the beginning of tcp_input() and udp_input() as it is not necessary.
    It will be done later anyway.  That code was a relict, from the
    time before I had added the second linking.
    Input from mikeb@ and sashan@;  OK sashan@

 sys/net/pf.c    | 36 +++++++++++++++++++++++++++++++++++-
 sys/net/pfvar.h |  5 ++++-
 2 files changed, 39 insertions(+), 2 deletions(-)

commit a6a9c43d05f8b3ba1cd648435b60699410875b65
Author: claudio <claudio@openbsd.org>
Date:   Thu Dec 3 13:30:18 2015 +0000

    Add sizes to most free calls. OK sashan@ tedu@

 sys/net/pf_ioctl.c | 84 +++++++++++++++++++++++++++---------------------------
 1 file changed, 42 insertions(+), 42 deletions(-)

commit b343a044707d1083077ace244cdccf333e366a8f
Author: blambert <blambert@openbsd.org>
Date:   Thu Dec 3 10:34:11 2015 +0000

    allocate PF tags as M_RTABLE vice M_TEMP
    
    ok henning@ claudio@

 sys/net/pf_ioctl.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit acb93c8a642749bdaa6e950f2b8f271130117716
Author: bluhm <bluhm@openbsd.org>
Date:   Thu Dec 3 09:49:15 2015 +0000

    Rename pf_unlink_state() to pf_remove_state() so the name does not
    collide with the statekey to inp unlinking.
    OK sashan@ mpi@

 sys/net/if_pfsync.c |  8 ++++----
 sys/net/pf.c        | 20 ++++++++++----------
 sys/net/pf_ioctl.c  |  8 ++++----
 sys/net/pfvar.h     |  6 +++---
 4 files changed, 21 insertions(+), 21 deletions(-)

commit 28d2ed059b2ff55e7f3dbbc0700d02defa571d70
Author: sashan <sashan@openbsd.org>
Date:   Wed Dec 2 16:00:42 2015 +0000

    - hide PF internals to pf_unlink_divert_state() from in_pcb.c
    
    OK mpi@, bluhm@

 sys/net/pf.c    | 16 +++++++++++++++-
 sys/net/pfvar.h |  3 ++-
 2 files changed, 17 insertions(+), 2 deletions(-)

commit 12d3c25ce67843c3bd1fecdb30de4e5fb2cc0b91
Author: claudio <claudio@openbsd.org>
Date:   Wed Dec 2 13:29:25 2015 +0000

    Kill the RT_REPORT flag to rtalloc() and stop sending RTM_MISS messages
    for failed route lookups. This is something that was maybe useful in the
    90is but in this modern times it is just annoying and nothing expect it
    anyway. OK mpi@, sthen@

 sys/net/pf.c | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

commit c8d41900430392fa0adaa08c071cbe303832752f
Author: mpi <mpi@openbsd.org>
Date:   Tue Nov 24 13:37:16 2015 +0000

    No need for <net/if_types.h>
    
    As a bonus this removes a "#if NCARP > 0", say yeah!

 sys/net/pf_ioctl.c | 3 +--
 sys/net/pf_lb.c    | 3 +--
 sys/net/pf_norm.c  | 3 +--
 3 files changed, 3 insertions(+), 6 deletions(-)

commit cfc485809b1d98c66f339206c44dbcb2f1c0b21f
Author: mpi <mpi@openbsd.org>
Date:   Mon Nov 23 15:53:35 2015 +0000

    There's no longer a need to include <net/hfsc.h> in <net/if_var.h>

 sys/net/pf_ioctl.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit c19777f2becef7e402f854ecd0a4695ad13392a5
Author: mpi <mpi@openbsd.org>
Date:   Sat Nov 21 11:29:40 2015 +0000

    Add a comment after every #endif
    
    requested by sashan@

 sys/net/pf.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

commit 98b6ed1a3994c5fe95746c8808c6a0084b37d127
Author: mpi <mpi@openbsd.org>
Date:   Fri Nov 20 10:42:51 2015 +0000

    Make use if_get() and get rid of rt_ifp.
    
    While here keep carp(4) bits under NCARP.
    
    Tested by and ok sthen@, ok visa@

 sys/net/pf.c | 31 ++++++++++++++++++++++---------
 1 file changed, 22 insertions(+), 9 deletions(-)

commit b5d83b91ac52e76af4743c3edf8805c5da03448b
Author: dlg <dlg@openbsd.org>
Date:   Fri Nov 20 03:35:22 2015 +0000

    shuffle struct ifqueue so in flight mbufs are protected by a mutex.
    
    the code is refactored so the IFQ macros call newly implemented ifq
    functions. the ifq code is split so each discipline (priq and hfsc
    in our case) is an opaque set of operations that the common ifq
    code can call. the common code does the locking, accounting (ifq_len
    manipulation), and freeing of the mbuf if the disciplines enqueue
    function rejects it. theyre kind of like bufqs in the block layer
    with their fifo and nscan disciplines.
    
    the new api also supports atomic switching of disciplines at runtime.
    the hfsc setup in pf_ioctl.c has been tweaked to build a complete
    hfsc_if structure which it attaches to the send queue in a single
    operation, rather than attaching to the interface up front and
    building up a list of queues.
    
    the send queue is now mutexed, which raises the expectation that
    packets can be enqueued or purged on one cpu while another cpu is
    dequeueing them in a driver for transmission. a lot of drivers use
    IFQ_POLL to peek at an mbuf and attempt to fit it on the ring before
    committing to it with a later IFQ_DEQUEUE operation. if the mbuf
    gets freed in between the POLL and DEQUEUE operations, fireworks
    will ensue.
    
    to avoid this, the ifq api introduces ifq_deq_begin, ifq_deq_rollback,
    and ifq_deq_commit. ifq_deq_begin allows a driver to take the ifq
    mutex and get a reference to the mbuf they wish to try and tx. if
    there's space, they can ifq_deq_commit it to remove the mbuf and
    release the mutex. if there's no space, ifq_deq_rollback simply
    releases the mutex. this api was developed to make updating the
    drivers using IFQ_POLL easy, instead of having to do significant
    semantic changes to avoid POLL that we cannot test on all the
    hardware.
    
    the common code has been tested pretty hard, and all the driver
    modifications are straightforward except for de(4). if that breaks
    it can be dealt with later.
    
    ok mpi@ jmatthew@

 sys/net/pf_if.c    |   7 +--
 sys/net/pf_ioctl.c | 167 +++++++++++++++++++++++++++++++++++++++--------------
 sys/net/pfvar.h    |   5 +-
 3 files changed, 127 insertions(+), 52 deletions(-)

commit 620d3ea6799e9710ae31243b31af20084d5eeb03
Author: mpi <mpi@openbsd.org>
Date:   Thu Nov 12 10:07:14 2015 +0000

    Prefix flowid with ph_ and print it in m_print().
    
    ok dlg@

 sys/net/pf.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit ad0b9439b04202724d14834dec7e59be6c87d462
Author: dlg <dlg@openbsd.org>
Date:   Tue Nov 10 06:36:14 2015 +0000

    flush the send queue in start routines with IFQ_PURGE.
    
    ok mpi@ uebayasi@

 sys/net/if_pflog.c  | 16 ++--------------
 sys/net/if_pfsync.c | 24 ++----------------------
 2 files changed, 4 insertions(+), 36 deletions(-)

commit 15765f575b183b8cad390832e9456828cbb4b72e
Author: mpi <mpi@openbsd.org>
Date:   Fri Nov 6 17:55:55 2015 +0000

    Rename rt_mpath_next() into rtable_mpath_next() and provide an
    implementation for ART based on the singly-linked list of route
    entries.

 sys/net/pf.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit d07f096bf8ae2d94151ed7f021c3c4e9863ab029
Author: sashan <sashan@openbsd.org>
Date:   Tue Nov 3 22:10:33 2015 +0000

    - fixes potential use-after-free in pfr_set_addrs()
    
    OK mikeb@, OK bluhm@

 sys/net/pf_table.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

commit f4af82b94a25794251d1e2bdba21a271e2a59441
Author: mikeb <mikeb@openbsd.org>
Date:   Fri Oct 30 11:33:55 2015 +0000

    Clean up handling of 'clear states' pfsync packets.
    
    If interface was specified in the packet only if-bound states
    attached to this interface must be purged.
    
    ok mpi, looked at by sasha@

 sys/net/if_pfsync.c | 43 +++++++++++++------------------------------
 sys/net/pf_if.c     | 15 +++++++++++----
 sys/net/pfvar.h     |  3 ++-
 3 files changed, 26 insertions(+), 35 deletions(-)

commit f5e0f62b31a9ad900fac3ebf4c555d63351c2c0d
Author: mpi <mpi@openbsd.org>
Date:   Tue Oct 27 10:52:17 2015 +0000

    Use rt_ifidx rather than rt_ifp.
    
    ok bluhm@

 sys/net/pf.c | 10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

commit 6d03c693179f548b641b41023985c3dac2c0ce80
Author: bluhm <bluhm@openbsd.org>
Date:   Thu Oct 15 19:48:44 2015 +0000

    When using a pf rule with both nat-to and rdr-to, it could happen
    that the nated source port was reused as destination port.  Do not
    initialize nport at the beginning of the function, but where it is
    needed.
    OK sashan@

 sys/net/pf_lb.c | 9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

commit 614a62ad7ddb5b7e95bfb87244c323bef6740a59
Author: sashan <sashan@openbsd.org>
Date:   Tue Oct 13 19:32:31 2015 +0000

    - pf_insert_src_node(): global argument (arg6) is useless, function
      always gets pointer to rule.
    
    - pf_remove_src_node(): function should always remove matching src node,
      regardless the sn->rule.ptr being NULL or valid rule
    
    - sn->rule.ptr is never NULL, spotted by mpi and Richard Procter _von_ gmail.com
    
    OK mpi@, OK mikeb@

 sys/net/pf.c       | 37 ++++++++++++++-----------------------
 sys/net/pf_ioctl.c |  5 ++---
 sys/net/pf_lb.c    |  5 ++---
 sys/net/pfvar.h    |  4 ++--
 4 files changed, 20 insertions(+), 31 deletions(-)

commit 407687c9707535765ebcd13a5d0c65c76fddfeb5
Author: dlg <dlg@openbsd.org>
Date:   Thu Oct 8 11:36:51 2015 +0000

    use the state id to set a flowid on an mbuf.
    
    ok mpi@ mikeb@ sthen@

 sys/net/pf.c | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

commit f214ddc3ccda3459e1ce08f6b4ec426f7d23cd03
Author: mpi <mpi@openbsd.org>
Date:   Wed Oct 7 11:57:44 2015 +0000

    rn_inithead() offset argument is now specified in byte, missed in previous.

 sys/net/pf_table.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit aa085df96f91ef73eaa5197c4b58f40465a30941
Author: mpi <mpi@openbsd.org>
Date:   Wed Sep 23 08:49:46 2015 +0000

    Always increment rt_use inside rtalloc(9) instead of doing it in some
    specific places.
    
    ok claudio@, benno@

 sys/net/pf.c | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

commit d9dc9856f23549daa53dca72a51d8be08e3759b3
Author: mpi <mpi@openbsd.org>
Date:   Sun Sep 13 17:53:44 2015 +0000

    There's no point in abstracting ifp->if_output() as long as pf_test()
    needs to see lo0 in the output path.
    
    ok claudio@

 sys/net/pf.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 72064afc60daf787368454614b699be3bc7183fd
Author: mpi <mpi@openbsd.org>
Date:   Sat Sep 12 20:26:06 2015 +0000

    Stop overwriting the rt_ifp pointer of RTF_LOCAL routes with lo0ifp.
    
    Use instead the RTF_LOCAL flag to loop local traffic back to the
    corresponding protocol queue.
    
    With this change rt_ifp is now always the same as rt_ifa->ifa_ifp.
    
    ok claudio@

 sys/net/pf.c | 7 +++----
 1 file changed, 3 insertions(+), 4 deletions(-)

commit f4e2f43669dd2bab5e1e7e8f07d51de19e285e1b
Author: bluhm <bluhm@openbsd.org>
Date:   Sat Sep 12 16:32:27 2015 +0000

    If M_PREPEND() fails, it frees the mbuf.  In this case pf_translate_af()
    must reset pd->m to avoid a use after free.
    OK sashan@ mikeb@

 sys/net/pf.c | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

commit 184d60c47849a4f08a2d1f5ad001b0ee63655cc6
Author: mpi <mpi@openbsd.org>
Date:   Fri Sep 11 15:21:31 2015 +0000

    rtfree(9) accepts NULL now.

 sys/net/pf.c | 8 +++-----
 1 file changed, 3 insertions(+), 5 deletions(-)

commit 09d936d6f345151d16059ae6ce2d007bb9e70246
Author: claudio <claudio@openbsd.org>
Date:   Fri Sep 11 08:17:06 2015 +0000

    Kill yet another argument to functions in IPv6. This time ip6_output's
    ifpp - XXX: just for statistics
    ifpp is always NULL in all callers so that statistic confirms ifpp is
    dying
    OK mpi@

 sys/net/if_pfsync.c | 4 ++--
 sys/net/pf.c        | 6 +++---
 2 files changed, 5 insertions(+), 5 deletions(-)

commit cd08cf4a2f8e7f62387ff90bdfd60b857416197a
Author: mpi <mpi@openbsd.org>
Date:   Thu Sep 10 08:28:31 2015 +0000

    Kill two simple in6_ifstat_inc().

 sys/net/pf.c      | 3 +--
 sys/net/pf_norm.c | 3 +--
 2 files changed, 2 insertions(+), 4 deletions(-)

commit f681c86c5ee176fbba601a33e6898708ddf2df74
Author: dlg <dlg@openbsd.org>
Date:   Wed Sep 9 20:03:56 2015 +0000

    add if_put after the if_get.
    
    ok claudio@

 sys/net/pf.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit 8a718aeb5fc8148da899bf4379479044d51f03f3
Author: kettenis <kettenis@openbsd.org>
Date:   Fri Sep 4 21:40:25 2015 +0000

    The pf_osfp_pl and pf_osfp_entry_pl never get used in interrupt context.
    Drop the explicit pool backend allocator here and add PR_WAITOK to the
    flags passed to pool_init(9).
    
    The pfi_addr_pl and pf_rule_pl can get used in interrupt context though.
    So simply drop the explicit pool backend allocator without adding PR_WAITOK
    to the flags passed to pool_init(9).
    
    ok mikeb@

 sys/net/pf_if.c    | 4 ++--
 sys/net/pf_ioctl.c | 4 ++--
 2 files changed, 4 insertions(+), 4 deletions(-)

commit 98afcbd27d8a7538288074151d5830fc811e2a3e
Author: mpi <mpi@openbsd.org>
Date:   Fri Sep 4 08:43:39 2015 +0000

    Make every subsystem using a radix tree call rn_init() and pass the
    length of the key as argument.
    
    This way every consumer of the radix tree has a chance to explicitly
    initialize the shared data structures and no longer rely on another
    subsystem to do the initialization.
    
    As a bonus ``dom_maxrtkey'' is no longer used an die.
    
    ART kernels should now be fully usable because pf(4) and IPSEC properly
    initialized the radix tree.
    
    ok chris@, reyk@

 sys/net/pf_table.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit 1ae008c822be27e641cf10b0085fe3db1f38cf04
Author: sashan <sashan@openbsd.org>
Date:   Tue Sep 1 19:12:25 2015 +0000

    - route-to, dup-to, reply-to should not override the block action
    
      Spotted by Dilli Paudel <dilli ! paudel at oracle ! com>
    
    ok jung@, ok mikeb@

 sys/net/pf.c | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

commit 3b33bc44f250ce82f98001992a7852c079628474
Author: jsg <jsg@openbsd.org>
Date:   Tue Aug 25 12:06:47 2015 +0000

    #if INET && INET6 -> #ifdef INET6, the kernel no longer defines INET
    since July.  The code involved deals with af-to handling.

 sys/net/if_pflog.c | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

commit ae08e5b41d60c6b8a17e2094beac8c6814a791f4
Author: sashan <sashan@openbsd.org>
Date:   Wed Aug 19 21:22:41 2015 +0000

    PF must keep IPv6 fragment size as chosen by sender also for packets,
    which are routed on behalf route-to action.
    
    OK bluhm@

 sys/net/pf.c      | 23 ++++++++++++-----------
 sys/net/pf_norm.c | 23 ++++++++++++++++++-----
 sys/net/pfvar.h   |  5 +++--
 3 files changed, 33 insertions(+), 18 deletions(-)

commit 8972f59e243057842a74e039f3c21082d09b62b6
Author: jsg <jsg@openbsd.org>
Date:   Mon Aug 3 13:33:12 2015 +0000

    A recently added sanity check panic in pf_postprocess_addr() was
    triggered for a reply-to rule.  It turns out this case has been using
    uninitialised memory as if it were a valid pf pool.
    
    As the rest of the function assumes a valid pool for now just return.
    
    Problem reported by RD Thrush.
    
    ok jung@ mikeb@

 sys/net/pf_lb.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit a17121a67f28e581be5aaf9eff0fa50bee1a2469
Author: sashan <sashan@openbsd.org>
Date:   Tue Jul 21 02:32:04 2015 +0000

    - added /* FALLTHROUGH */ comments, typecasts (u_int32_t)-1, ...
    
    
    ok mpi@

 sys/net/pf.c       | 16 ++++++++++++++--
 sys/net/pf_if.c    | 14 +++++++-------
 sys/net/pf_ioctl.c |  8 ++++----
 3 files changed, 25 insertions(+), 13 deletions(-)

commit 443353dace62aea35da06674313ee5bd04fe0fe3
Author: jsg <jsg@openbsd.org>
Date:   Mon Jul 20 18:42:08 2015 +0000

    Add some panics to default paths where code later assumes a non default
    path was taken.  This both prevents warnings from clang and acts as a
    sanity check.
    
    ok mcbride@ henning@

 sys/net/pf.c       | 4 +++-
 sys/net/pf_lb.c    | 4 +++-
 sys/net/pf_table.c | 4 +++-
 3 files changed, 9 insertions(+), 3 deletions(-)

commit 88a02e3254a5fc933c2d4b2d9ac064f49c6560d2
Author: mcbride <mcbride@openbsd.org>
Date:   Mon Jul 20 01:18:33 2015 +0000

    INET6 is here to stay, so stop hauling around never-compiled code
    to optimize for an INET-only kernel, as well as the fantasy unicorn
    INET6-only kernel. (INET-only kernel still works)
    
    prompted by deraadt
    ok bluhm sashan

 sys/net/pf.c    | 18 +++++++----
 sys/net/pfvar.h | 93 +--------------------------------------------------------
 2 files changed, 14 insertions(+), 97 deletions(-)

commit 99192ae214a5327993b55ee05314be886572df7e
Author: sashan <sashan@openbsd.org>
Date:   Sun Jul 19 23:13:58 2015 +0000

    rule_item might leak, when pf_create_state() fails
    
    OK @mcbride

 sys/net/pf.c | 14 +++++++++-----
 1 file changed, 9 insertions(+), 5 deletions(-)

commit 899b02c7308eff3e895130a55b132bdb510c8bae
Author: sashan <sashan@openbsd.org>
Date:   Sun Jul 19 05:54:54 2015 +0000

    potential memory leak in SIOCADDRULE
    
    ok mcbride@

 sys/net/pf_ioctl.c | 8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)

commit 454162ba1ce7d347c01681e1a6aecc8433d5cb80
Author: sashan <sashan@openbsd.org>
Date:   Sun Jul 19 05:48:11 2015 +0000

    unsinged variables should not be compared to be leq than 0 (unsigned a <= 0)
    
    ok mcbride@

 sys/net/pf.c       | 6 +++---
 sys/net/pf_ioctl.c | 4 ++--
 2 files changed, 5 insertions(+), 5 deletions(-)

commit eaed871b13474e917ddf55f35c0f8af7bd6382a3
Author: sashan <sashan@openbsd.org>
Date:   Sun Jul 19 01:58:19 2015 +0000

    unused arguments at pf_normalize_tcp_init() and pf_refragment6()
    
    OK deraadt.

 sys/net/pf.c      | 8 ++++----
 sys/net/pf_norm.c | 7 +++----
 sys/net/pfvar.h   | 7 +++----
 3 files changed, 10 insertions(+), 12 deletions(-)

commit 8cfbc0933da2eda7faab14b708dd08ff863f1dbb
Author: sashan <sashan@openbsd.org>
Date:   Sat Jul 18 23:11:35 2015 +0000

    pf_send_tcp() should also use unhandled_af()
    
    ok jsg@, ok mpi@

 sys/net/pf.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit ecaa3a528400f5ce78a9679056e482d4d14c592a
Author: sashan <sashan@openbsd.org>
Date:   Sat Jul 18 19:19:00 2015 +0000

    msg.mpi

 sys/net/pf.c         | 62 ++++++++++++++++++++++++++++++++++++++++++----------
 sys/net/pf_ioctl.c   | 10 ++++-----
 sys/net/pf_lb.c      |  8 ++++++-
 sys/net/pf_ruleset.c |  6 ++---
 4 files changed, 66 insertions(+), 20 deletions(-)

commit 3f22add75d9f6213154ff5ed09f95b8a81958680
Author: sashan <sashan@openbsd.org>
Date:   Sat Jul 18 19:06:37 2015 +0000

    follow up changes on unknown AF handling
    
    - PF should always use unhandled_af()
    - 0 is lame, AF_UNSPEC is profi
    
    
    ok bluhm@

 sys/net/pf_table.c | 19 ++++++++++---------
 1 file changed, 10 insertions(+), 9 deletions(-)

commit dbd66a7b1910ba65112b50c66ad0e46f5009224a
Author: mpi <mpi@openbsd.org>
Date:   Sat Jul 18 15:47:01 2015 +0000

    Even if pf(4) is not compiled with SMALL_KERNEL add a define around
    rt_mpath_next() to document the difference in behavior between the
    multipath and non-multipath routing code.
    
    No that the same pattern is present in if_group_egress_build().
    
    ok claudio@

 sys/net/pf.c | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

commit 9b00340fee72237a4a5234e3a386124456a91538
Author: sashan <sashan@openbsd.org>
Date:   Sat Jul 18 15:19:44 2015 +0000

    INET/INET6 address family check should be unified in PF
    
    it also adds af_unhandled(), where it is currently missing.
    
    ok mcbride@

 sys/net/pf.c       |  38 +++++++++----------
 sys/net/pf_lb.c    |  10 ++++-
 sys/net/pf_norm.c  |  12 ++++--
 sys/net/pf_table.c | 109 +++++++++++++++++++++++++++++++++++++++++++++--------
 4 files changed, 128 insertions(+), 41 deletions(-)

commit 912f27dca3c5b30d62e8bdb1e55773657eab57f8
Author: tedu <tedu@openbsd.org>
Date:   Fri Jul 17 22:52:28 2015 +0000

    remove obsolete INET kernel option

 sys/net/pf.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 6682acfe6ae37552e6ca33dcd966e33f1f7d3e20
Author: sashan <sashan@openbsd.org>
Date:   Fri Jul 17 19:46:05 2015 +0000

    sa_family_t should not be confused with u_int8_t
    
    ok deraadt@, ok floarian@

 sys/net/pfvar.h | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 89355f59baf36f9c5d8ef2b80849adc2e73598f6
Author: jsg <jsg@openbsd.org>
Date:   Fri Jul 17 18:39:55 2015 +0000

    fix the indentation of a block of code, no binary change
    ok mikeb@ some time ago

 sys/net/pf_lb.c | 32 ++++++++++++++++----------------
 1 file changed, 16 insertions(+), 16 deletions(-)

commit 1f52aa9f8c42c356774913c6b5758f047e17186e
Author: mpi <mpi@openbsd.org>
Date:   Thu Jul 16 21:14:21 2015 +0000

    Kill IP_ROUTETOETHER.
    
    This pseudo-option is a hack to support return-rst on bridge(4).  It
    passes Ethernet information via a "struct route" through ip_output().
    
    "struct route" is slowly dying...
    
    ok claudio@, benno@

 sys/net/pf.c    | 56 ++++++++++++++++----------------------------------------
 sys/net/pfvar.h |  7 ++-----
 2 files changed, 18 insertions(+), 45 deletions(-)

commit 525a84992d85e66f8324950096c9d286f87608a7
Author: claudio <claudio@openbsd.org>
Date:   Thu Jul 16 18:17:27 2015 +0000

    Fix rn_match and there for the expoerted lookup functions in radix.c
    to never return the internal RNF_ROOT nodes. This removes the checks
    in the callee to verify that not an RNF_ROOT node was returned.
    OK mpi@

 sys/net/pf_table.c | 17 +----------------
 1 file changed, 1 insertion(+), 16 deletions(-)

commit faf7e06f4ddc0c796995d3c37a980e052affb2e4
Author: mpi <mpi@openbsd.org>
Date:   Thu Jul 16 16:12:15 2015 +0000

    Expand ancient NTOHL/NTOHS/HTONS/HTONL macros.
    
    ok guenther@, henning@

 sys/net/pf.c    | 19 +++++++------------
 sys/net/pf_lb.c | 18 +++++++++---------
 2 files changed, 16 insertions(+), 21 deletions(-)

commit 092840262305d0d382c16690ac9bb021317306e1
Author: deraadt <deraadt@openbsd.org>
Date:   Wed Jul 15 22:16:41 2015 +0000

    m_freem() can handle NULL, do not check for this condition beforehands.
    ok stsp mpi

 sys/net/if_pflog.c | 5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)

commit d0aa91b1f3b7a5d9f849ded357cf23b696b3ed28
Author: bluhm <bluhm@openbsd.org>
Date:   Wed Jul 8 13:03:26 2015 +0000

    Linking the local socket to pf states went wrong when IPsec was
    involved.  For outgoing packets the IPsec layer did not clear the
    sending socket from the mbuf when the address changed.  This resulted
    in strange state match and create behavior in pf.  So clear the pf
    statekey and inp in the packet header for both directions when the
    address changes.
    Mark Patruck reported the bug, identified my problematic commit and
    tested the fix.
    OK mikeb@

 sys/net/pf.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit 8990c937a609129c385a209e32d8f7097c194f7a
Author: mpi <mpi@openbsd.org>
Date:   Tue Jun 30 15:30:17 2015 +0000

    Get rid of the undocumented & temporary* m_copy() macro added for
    compatibility with 4.3BSD in September 1989.
    
    *Pick your own definition for "temporary".
    
    ok bluhm@, claudio@, dlg@

 sys/net/pf.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit e44d8797e7de30edf4cb50e675974c6f0866aa46
Author: mikeb <mikeb@openbsd.org>
Date:   Mon Jun 22 15:58:23 2015 +0000

    Increment rule counters only after successful state insertion
    
    Do rule counter increments after state has been successfully
    installed.  This has an additional benefit of making error
    handling a bit simpler.
    
    OK mpi, bluhm

 sys/net/pf.c | 21 ++++-----------------
 1 file changed, 4 insertions(+), 17 deletions(-)

commit fb492c3701798fad8024e2bd164905788c83671b
Author: mpi <mpi@openbsd.org>
Date:   Tue Jun 16 11:09:39 2015 +0000

    Store a unique ID, an interface index, rather than a pointer to the
    receiving interface in the packet header of every mbuf.
    
    The interface pointer should now be retrieved when necessary with
    if_get().  If a NULL pointer is returned by if_get(), the interface
    has probably been destroy/removed and the mbuf should be freed.
    
    Such mechanism will simplify garbage collection of mbufs and limit
    problems with dangling ifp pointers.
    
    Tested by jmatthew@ and krw@, discussed with many.
    
    ok mikeb@, bluhm@, dlg@

 sys/net/if_pfsync.c | 4 ++--
 sys/net/pf.c        | 7 ++++---
 2 files changed, 6 insertions(+), 5 deletions(-)

commit ba4138390b9fd1585b0009db6ac54b8875efca33
Author: jsg <jsg@openbsd.org>
Date:   Sun Jun 7 12:02:28 2015 +0000

    Introduce unhandled_af() for cases where code conditionally does
    something based on an address family and later assumes one of the paths
    was taken.  This was initially just calls to panic until guenther
    suggested a function to reduce the amount of strings needed.
    
    This reduces the amount of noise with static analysers and acts
    as a sanity check.
    
    ok guenther@ bluhm@

 sys/net/pf.c       | 10 +++++++++-
 sys/net/pf_table.c | 31 ++++++++++++++++++++++++-------
 2 files changed, 33 insertions(+), 8 deletions(-)

commit 38a4091055dfd9bc6c116880ee56dcf17cff10bd
Author: mikeb <mikeb@openbsd.org>
Date:   Fri Jun 5 13:22:34 2015 +0000

    Improve error handling and recovery during state insertion
    
    Reshuffle the code around a bit and greatly improve error handling
    fixing a few bugs along the way.
    
    Problem reported by and fix was written with Alexandr Nedvedicky.
    OK henning

 sys/net/pf.c    | 72 ++++++++++++++++++++++++++++++++-------------------------
 sys/net/pfvar.h |  6 +++--
 2 files changed, 45 insertions(+), 33 deletions(-)

commit c30ec822b882e49d3380a269de33893ba06790b5
Author: yasuoka <yasuoka@openbsd.org>
Date:   Wed Jun 3 11:57:37 2015 +0000

    Fix pf_map_addr() not to cause dividing by 0.  This fixes problem when
    using table or dynamic interface addresses for source-hash.  Also
    avoid calling arc4random_uniform() with upper_bound == 0.
    
    ok mikeb

 sys/net/pf_lb.c | 22 +++++++++++++++++-----
 1 file changed, 17 insertions(+), 5 deletions(-)

commit e93f5c0a6e204e891614db09fc070bce2b47bf8c
Author: mikeb <mikeb@openbsd.org>
Date:   Tue May 26 16:17:51 2015 +0000

    Don't create ICMP states on reply packets unless tracking states sloppy
    
    Since we've strengthened the ICMP state matching procedure during lookup
    to only match packets against states set up in a particular direction, we
    need to make sure we don't create states on packets that would otherwise
    be flowing in the direction opposite to the direction of the state and
    prevent further packets from matching the created state due to strict
    rules imposed by the ICMP direction check.
    
    Problem reported by Alexandr Nedvedicky, alexandr.nedvedicky-at-oracle.com.
    Discussed with reyk@;  OK henning

 sys/net/pf.c | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

commit 12e5d1443dd58ce744c5eb5c8dead51ec43309e2
Author: mikeb <mikeb@openbsd.org>
Date:   Fri May 22 14:18:55 2015 +0000

    Cut down on if statements around pf_icmp_state_lookup
    
    Checked with blambert@, OK millert, henning

 sys/net/pf.c | 38 +++++++++++++++-----------------------
 1 file changed, 15 insertions(+), 23 deletions(-)

commit ecdc46e92272efc47130f6eecc3e30dc6f4fb9b9
Author: mikeb <mikeb@openbsd.org>
Date:   Fri May 22 14:16:09 2015 +0000

    Cleanup leftover PF_ICMP_MULTI_* code that is not needed anymore.
    
    ok henning

 sys/net/pf.c | 40 +++++++++++++++++-----------------------
 1 file changed, 17 insertions(+), 23 deletions(-)

commit 22d720b9d06d3bf2089ec42ea22d1ab437bb914a
Author: henning <henning@openbsd.org>
Date:   Mon May 11 12:22:14 2015 +0000

    fix a potential use-after-free in pf_state_rm_src_node
    found by jsg; ok jsg mikeb

 sys/net/pf.c | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

commit ebe64b684c114cd88cc6a9b8b02a49c410fcefb5
Author: chris <chris@openbsd.org>
Date:   Tue May 5 23:27:47 2015 +0000

    Eliminate rabid semicolon

 sys/net/pf_norm.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit fcf0d611538ab5e58eaf36ba003573cafbe6b12a
Author: bluhm <bluhm@openbsd.org>
Date:   Wed Apr 29 18:05:56 2015 +0000

    In most cases, IP fragments do not have an Ethernet padding.  So
    add a condition to save a useless call to m_adj() and have a paranoid
    length check in the other cases.
    OK henning@

 sys/net/pf_norm.c | 8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)

commit e3048d164877abde6609a6132d3ea32fb6bac555
Author: bluhm <bluhm@openbsd.org>
Date:   Fri Apr 17 16:42:50 2015 +0000

    On Ethernet packets have a minimal length, so very short packets
    get padding appended to them.  This padding is not stripped off in
    ip6_input() (due to support for IPv6 Jumbograms, RFC2675).  That
    means PF needs to be careful when reassembling fragmented packets
    to not include the padding in the reassembled packet.
    from FreeBSD; via Kristof Provost; OK henning@

 sys/net/pf_norm.c | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

commit 0245ebf419b769c384222b9c4ff5c3a54eeda630
Author: mikeb <mikeb@openbsd.org>
Date:   Fri Apr 17 11:04:01 2015 +0000

    Stubs and support code for NIC-enabled IPsec bite the dust.
    No objection from reyk@, OK markus, hshoexer

 sys/net/pf.c | 18 +-----------------
 1 file changed, 1 insertion(+), 17 deletions(-)

commit baa74c00fe3190b0a83b19b0981d420ad8df80ea
Author: dlg <dlg@openbsd.org>
Date:   Sat Apr 11 13:00:12 2015 +0000

    the hfsc pools are only used in hfsc.c, so move the init of them
    there instead of pf_ioctl.c.
    
    ok henning@

 sys/net/pf.c       | 3 +--
 sys/net/pf_ioctl.c | 9 ++-------
 sys/net/pfvar.h    | 4 +---
 3 files changed, 4 insertions(+), 12 deletions(-)

commit 1faf2f7865ed890ac37927d695b0045b8562d38a
Author: mikeb <mikeb@openbsd.org>
Date:   Thu Apr 9 12:04:14 2015 +0000

    Plug a memory leak in pfr_destroy_kentry
    
    pfi_kif objects allocated for table entries created by route-to or
    by specifying weight weren't garbage collected when the table entry
    was destroyed.
    
    Spotted by Alexandr Nedvedicky <alexandr ! nedvedicky at oracle ! com>,
    thanks!  Ok henning, florian

 sys/net/pf_table.c | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

commit f7f76181352bd8ba2a06b53ab5cabd311afc0664
Author: mikeb <mikeb@openbsd.org>
Date:   Wed Apr 8 14:19:28 2015 +0000

    Table flags are not looked at when a table entry is created.
    
    Spotted by Alexandr Nedvedicky <alexandr ! nedvedicky at oracle ! com>,
    thanks!

 sys/net/pf_table.c | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

commit cd116c3accc6e13de74b44418abeadee8f665365
Author: mikeb <mikeb@openbsd.org>
Date:   Wed Apr 8 12:50:21 2015 +0000

    Destination table needs it's own negation flag passed to the pfr_update_stats.
    
    Spotted by Alexandr Nedvedicky <alexandr ! nedvedicky at oracle ! com>,
    thanks a lot!  Ok florian

 sys/net/pf.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit ff2a9cfc0b77a8eda60235d5e6a000d63761bebf
Author: dlg <dlg@openbsd.org>
Date:   Wed Mar 18 12:23:15 2015 +0000

    remove the congestion handling from struct ifqueue.
    
    its only used for the ip and ip6 network stack input queues, so it
    seems unfair that every instance of ifqueue has to carry a pointer
    around for this specific use case.
    
    this moves the congestion marker to a kernel global. if we detect
    that we're congested, we assume the whole system is busy and punish
    all input queues.
    
    marking a system as congested is done by setting the global to the
    current value of ticks. as the system moves away from that value,
    it moves away from being congested until the comparison fails.
    
    written at s2k15
    ok henning@ beck@ bluhm@ claudio@

 sys/net/pf.c | 20 ++------------------
 1 file changed, 2 insertions(+), 18 deletions(-)

commit 94364cc542a27e3c74f82be44e6af1e58afd90cb
Author: yasuoka <yasuoka@openbsd.org>
Date:   Mon Mar 16 02:40:55 2015 +0000

    When state creations happen in short term by outgoing packets of one
    SO_BINDANY socket, the new state didn't have a link of the socket's
    pcb.  So the incoming packets allowed by the state were mistakenly
    forwarded and the pcb could not get them.  Fix pf not to lost the link
    of the pcb when the state is recreated.
    
    ok bluhm mikeb

 sys/net/pf.c | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

commit 21dab745d772244ad59a415114e48be2888cfbc8
Author: jsg <jsg@openbsd.org>
Date:   Sat Mar 14 03:38:46 2015 +0000

    Remove some includes include-what-you-use claims don't
    have any direct symbols used.  Tested for indirect use by compiling
    amd64/i386/sparc64 kernels.
    
    ok tedu@ deraadt@

 sys/net/if_pfsync.c | 3 +--
 sys/net/pf.c        | 3 +--
 sys/net/pf_if.c     | 3 +--
 sys/net/pf_ioctl.c  | 6 +-----
 sys/net/pf_lb.c     | 3 +--
 sys/net/pf_norm.c   | 3 +--
 sys/net/pf_table.c  | 3 +--
 7 files changed, 7 insertions(+), 17 deletions(-)

commit c24131e09bcd0be87a474ff5ce89687b503a7ddc
Author: tedu <tedu@openbsd.org>
Date:   Fri Feb 20 11:08:31 2015 +0000

    fix a memory leak in the error case found by Maxime Villard's Brainy
    code scanner. Changing return to break also fixes a failure to unlock.
    Also fix a NULL check for that variable noticed by bluhm.
    ok bluhm henning millert

 sys/net/pf_ioctl.c | 12 ++++++++----
 1 file changed, 8 insertions(+), 4 deletions(-)

commit 1e5363b9b1a2ad61db90db92157b6479737e4334
Author: sthen <sthen@openbsd.org>
Date:   Sun Feb 15 10:40:53 2015 +0000

    Rather than using 0xff as a placeholder for "don't check prio", use 0xff to
    mean "prio is 0". This avoids the need for code changes in programs which add
    pf rules (as was done in pfctl but not other programs) to handle the new
    "check prio" functionality. Specifically this unbreaks ftp-proxy.
    
    Use of #define rather than magic 0xff suggested by benno.
    ok benno "if henning doesnt like it he can change it when he recovers from jet-lag"
    
    (this file missed from previous commit, noticed by daniel@)

 sys/net/pfvar.h | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit 7407027e3924282e7de1fc2dc9449fa6bc91b611
Author: sthen <sthen@openbsd.org>
Date:   Sat Feb 14 23:32:41 2015 +0000

    Rather than using 0xff as a placeholder for "don't check prio", use 0xff to
    mean "prio is 0". This avoids the need for code changes in programs which add
    pf rules (as was done in pfctl but not other programs) to handle the new
    "check prio" functionality. Specifically this unbreaks ftp-proxy.
    
    Use of #define rather than magic 0xff suggested by benno.
    ok benno "if henning doesnt like it he can change it when he recovers from jet-lag"

 sys/net/pf.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit da6640c128cbff275f9b5193e03ec66a8252f6ae
Author: millert <millert@openbsd.org>
Date:   Fri Feb 13 13:35:03 2015 +0000

    Include sys/stdint.h for SIZE_MAX instead of relying on the misplaced
    define in sys/limits.h.  OK guenther@

 sys/net/if_pflog.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit f61b1efccea797fa6960a16e5c6490f40a6ff5a0
Author: henning <henning@openbsd.org>
Date:   Thu Feb 12 01:24:10 2015 +0000

    change log(matches) semantics slightly to make it more useful. since it
    is a debug tool change of semantics not considered problematic.
    up until now, log(matches) forced logging on subsequent matching rules,
    the actual logging used the log settings from that matched rule.
    now, log(matches) causes subsequent matches to be logged with the log settings
    from the log(matches) rule. in particular (this was the driving point),
    log(matches, to pflog23) allows you to have the trace log going to a seperate
    pflog interface, not clobbering your regular pflogs, actually not affecting
    them at all.
    long conversation with bluhm about it, which didn't lead to a single bit
    changed in the diff but was very very helpful. ok bluhm as well.

 sys/net/if_pflog.c | 12 +++++++-----
 sys/net/if_pflog.h |  6 +++---
 sys/net/pf.c       | 42 +++++++++++++++++++++++++++++++-----------
 sys/net/pfvar.h    |  4 ++--
 4 files changed, 43 insertions(+), 21 deletions(-)

commit 024bfa900014e908f8b21c579bed6145917392dd
Author: henning <henning@openbsd.org>
Date:   Tue Feb 10 09:28:40 2015 +0000

    include the "set prio" values.
    no real compat issue since we're using spare bytes.
    old -> new ends up with set prio (0, 0) equivalent
    new -> old is entirely harmless, old ignores the prios.
    requested by Alexey Suslikov <alexey.suslikov at gmail>
    ok phessler pelikan dlg

 sys/net/if_pfsync.c | 4 +++-
 sys/net/pf.c        | 4 +++-
 sys/net/pfvar.h     | 4 ++--
 3 files changed, 8 insertions(+), 4 deletions(-)

commit 66309ba0d75ef0b7f81aba8b8924c656d8612e4b
Author: henning <henning@openbsd.org>
Date:   Tue Feb 10 06:45:55 2015 +0000

    since we inherit prio (as in, the queuing priority) from outside sources,
    i. e. on vlan interfaces, it is useful to be able to match on it -
    effectively matching on classification done elsewhere.
    i thought i had long implemented that, but chrisz@ asking for it made
    me notice that wasn't the case.
    tests by chrisz, ok phessler pelikan

 sys/net/pf.c       | 5 ++++-
 sys/net/pf_ioctl.c | 3 ++-
 sys/net/pfvar.h    | 5 +++--
 3 files changed, 9 insertions(+), 4 deletions(-)

commit 5e1fd096cedea4d116066d29e2ba492c6b706857
Author: markus <markus@openbsd.org>
Date:   Mon Feb 9 19:14:48 2015 +0000

    correctly reset max_win if the SYN-ACK lacks a wscale option. pf
    was setting max_win to 0 and discarded retransmitted SYN-ACK segments
    without wscale if the original SYN contained a wscale option.
    with gerhard@, ok henning@

 sys/net/pf.c | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

commit 760ea03c451d28cdef75282e7b7fcc40149dedb9
Author: henning <henning@openbsd.org>
Date:   Sun Feb 8 01:29:19 2015 +0000

    pf normalization code was in dire need of style normalization.
    ok mpi pelikan

 sys/net/pf_norm.c | 105 ++++++++++++++++++++----------------------------------
 1 file changed, 38 insertions(+), 67 deletions(-)

commit ed1f804e710f10818c0088829c00eec657b0973e
Author: henning <henning@openbsd.org>
Date:   Sat Feb 7 09:15:25 2015 +0000

    pf synproxy will do the 3WHS on behalf of the target machine, and once
    the 3WHS is completed, establish the backend connection. The trigger
    for "3WHS completed" is the reception of the first ACK. However, we
    should not proceed if that ACK also has RST or FIN set.
    ACK+RST part pointed out by Kojedzinszky Richard <krichy at tvnetwork hu>
    ok mikeb dlg phessler claudio

 sys/net/pf.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit e5031ebe15139cbc0b7d53a422e46ae8ce6b3e4d
Author: pelikan <pelikan@openbsd.org>
Date:   Sat Feb 7 06:27:46 2015 +0000

    make RB_PROTOTYPE usage ISO C compliant by removing useless semicolons
    
    fixes some compiler warnings, tested by amd64 base build
    
    ok beck

 sys/net/pfvar.h | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

commit cd5ec7edf014224dba1df0e2c8d6e5157a33e636
Author: mpi <mpi@openbsd.org>
Date:   Thu Feb 5 01:10:57 2015 +0000

    Make sure pf(4) does not see embedded scopes.
    
    Packets destinated to link-local addresses are looped back with embedded
    scopes because we cannot restore them using the receiving interface (lo0).
    Embedded scopes are needed by the routing table to match RTF_LOCAL routes,
    but pf(4) never saw them and existing rules are likely to break without
    teaching the rule engine about them, found by dlg@ the hard way.
    
    So save and restore embedded scopes around pf_test() for packets going
    through loopback.
    
    ok dlg@, mikeb@

 sys/net/pf.c | 7 +------
 1 file changed, 1 insertion(+), 6 deletions(-)

commit 377da2e088c5f8650c7d834461164f98ce9de4b0
Author: deraadt <deraadt@openbsd.org>
Date:   Sat Jan 24 00:29:06 2015 +0000

    Userland (base & ports) was adapted to always include <netinet/in.h>
    before <net/pfvar.h> or <net/if_pflog.h>.  The kernel files can be
    cleaned up next.  Some sockaddr_union steps make it into here as well.
    ok naddy

 sys/net/if_pfsync.c | 11 +++++++++--
 sys/net/if_pfsync.h |  4 ++--
 sys/net/pf.c        |  3 ++-
 sys/net/pf_ioctl.c  | 11 ++++++-----
 sys/net/pf_norm.c   | 15 ++++++++-------
 sys/net/pfvar.h     | 17 +++++++++++++----
 6 files changed, 40 insertions(+), 21 deletions(-)

commit 21c53b85da3dcb5e4f1111559c5d392339542ce7
Author: mikeb <mikeb@openbsd.org>
Date:   Tue Jan 20 17:25:35 2015 +0000

    Prevent tables referenced by rules in anchors from getting disabled.
    Analysis and patch by Richard Kojedzinszky, thanks!  ok henning

 sys/net/pf_table.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit 2864e9c25c70bf3e7ac0200b5e26a4b2bcbc8a15
Author: deraadt <deraadt@openbsd.org>
Date:   Thu Jan 15 23:56:58 2015 +0000

    Stop including <sys/param.h> and other stuff.  Assume this will be included
    with sys limits in scope, so use PATH_MAX instead.
    ok millert guenther

 sys/net/pfvar.h | 17 ++++++++---------
 1 file changed, 8 insertions(+), 9 deletions(-)

commit d9e07e8a393448a43706b9714245e4908b2d2fb5
Author: jsg <jsg@openbsd.org>
Date:   Tue Jan 6 01:49:45 2015 +0000

    init a potentially uninitialised var in pf_postprocess_addr
    ok mikeb@ henning@

 sys/net/pf_lb.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 930efa9e74effddd5a059515ae619fb0b1bc2960
Author: tedu <tedu@openbsd.org>
Date:   Tue Dec 23 03:24:08 2014 +0000

    unifdef some more INET. v4 4life.

 sys/net/pfvar.h | 9 +--------
 1 file changed, 1 insertion(+), 8 deletions(-)

commit ad7d1a35772c9644798c16552534a957cfb9959d
Author: tedu <tedu@openbsd.org>
Date:   Fri Dec 19 17:14:39 2014 +0000

    unifdef INET in net code as a precursor to removing the pretend option.
    long live the one true internet.
    ok henning mikeb

 sys/net/if_pflog.c  |  7 +----
 sys/net/if_pfsync.c |  8 +-----
 sys/net/pf.c        | 82 +----------------------------------------------------
 sys/net/pf_if.c     |  4 +--
 sys/net/pf_ioctl.c  |  6 +---
 sys/net/pf_lb.c     |  8 +-----
 sys/net/pf_norm.c   |  6 +---
 sys/net/pf_table.c  | 12 +-------
 8 files changed, 8 insertions(+), 125 deletions(-)

commit 252a05523f8b93e11ba02b8ef3b3a195bb685de2
Author: reyk <reyk@openbsd.org>
Date:   Fri Dec 19 13:04:07 2014 +0000

    Support source-hash and random with tables and dynifs; not just pools.
    This finally allows to use source-hash for dynamic loadbalancing, eg.
    "rdr-to <hosts> source-hash", instead of just round-robin and least-states.
    
    An older pre-siphash version of this diff was tested by many people.
    
    OK tedu@ benno@

 sys/net/pf_lb.c | 67 +++++++++++++++++++++++++++++++++++++++++----------------
 sys/net/pfvar.h |  8 ++++++-
 2 files changed, 56 insertions(+), 19 deletions(-)

commit 6263ddcd7cc92c604b57541704fe699273f13849
Author: mcbride <mcbride@openbsd.org>
Date:   Fri Dec 19 12:31:03 2014 +0000

    Comment is no longer true, remove it.

 sys/net/pf_lb.c | 5 +----
 1 file changed, 1 insertion(+), 4 deletions(-)

commit 69b437bc9469fefbee58a9fe3a5f9a3c41ad21cb
Author: tedu <tedu@openbsd.org>
Date:   Fri Dec 19 05:36:28 2014 +0000

    add messages to #error so we know what's what (and so unifdef doesn't poop)

 sys/net/pfvar.h | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit a558d13e2f527f4f5acddc94c19cda9c31568bb3
Author: tedu <tedu@openbsd.org>
Date:   Thu Dec 18 19:02:56 2014 +0000

    use siphash for pf_lb. for ipv6, we stretch it out a bit, but good enough.
    ok reyk

 sys/net/pf_lb.c | 58 ++++++++++++++++++++-------------------------------------
 1 file changed, 20 insertions(+), 38 deletions(-)

commit 3c687758563c3eb3a71def9e3188f5b981949a32
Author: mpi <mpi@openbsd.org>
Date:   Wed Dec 17 09:57:13 2014 +0000

    Remove the "multicast_" prefix from the fields a multicast-only struct.
    
    Prodded by claudio@ and mikeb@

 sys/net/if_pfsync.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit ec0be06b6d983c7080de92e271b00734845072fd
Author: mpi <mpi@openbsd.org>
Date:   Wed Dec 17 09:45:59 2014 +0000

    Use an interface index instead of a pointer for multicast options.
    
    Output interface (port) selection for multicast traffic is not done via
    route lookups.  Instead the output ifp is registred when setsockopt(2)
    is called with the IP{V6,}_MULTICAST_IF option.  But since there is no
    mechanism to invalidate such pointer stored in a pcb when an interface
    is destroyed/removed, it might lead your kernel to fault.
    
    Prevent a fault upon resume reported by frantisek holop, thanks!
    
    ok mikeb@, claudio@

 sys/net/if_pfsync.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

commit e9a2e8a1d65efb7cdbad010e3f2f37d3c263ffdf
Author: mpi <mpi@openbsd.org>
Date:   Thu Dec 11 08:45:44 2014 +0000

    Do not use "struct route" when it is not necessary.
    
    This structure is now only used to pass a cached route entry to
    ip{6,}_output() which will be converted shortly.
    
    With inputs from millert@, ok bluhm@

 sys/net/pf.c | 109 ++++++++++++++++++++++++-----------------------------------
 1 file changed, 44 insertions(+), 65 deletions(-)

commit 0f0d0f957e83845b9ea328181972c6df85dc75c5
Author: doug <doug@openbsd.org>
Date:   Tue Dec 9 07:05:06 2014 +0000

    More malloc() -> mallocarray() in the kernel.
    
    ok deraadt@ tedu@

 sys/net/pf_ioctl.c | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

commit 0deb6685920d1014aeed01c2cf385a7e86089f92
Author: mpi <mpi@openbsd.org>
Date:   Fri Dec 5 15:50:03 2014 +0000

    Explicitly include <net/if_var.h> instead of pulling it in <net/if.h>.
    
    ok mikeb@, krw@, bluhm@, tedu@

 sys/net/if_pflog.c | 3 ++-
 sys/net/pf_if.c    | 3 ++-
 sys/net/pf_ioctl.c | 3 ++-
 sys/net/pf_norm.c  | 3 ++-
 4 files changed, 8 insertions(+), 4 deletions(-)

commit 83bfce96d1555f12e57c838b807a1fb069839bb0
Author: tedu <tedu@openbsd.org>
Date:   Tue Dec 2 18:11:56 2014 +0000

    replace some malloc multiplies with mallocarry. ok deraadt henning

 sys/net/if_pflog.c | 4 ++--
 sys/net/pf_if.c    | 6 +++---
 2 files changed, 5 insertions(+), 5 deletions(-)

commit ac3ba07ea6f794ba21daad8dcdb532a319c8f3fd
Author: deraadt <deraadt@openbsd.org>
Date:   Sun Nov 23 07:39:02 2014 +0000

    length argument for some free() calls; ok doug

 sys/net/if_pfsync.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit bc3c78968cb5bd061e6e413f24293cc086d05c34
Author: mpi <mpi@openbsd.org>
Date:   Thu Nov 20 13:54:24 2014 +0000

    Rework the handling of interfaces and IPv6 addresses for local delivery.
    
    - Unicast packets sent to any local address will have their interface
    set to loobpack.
    
    - In order to differentiate traffic from interfaces having identical
    link-local addresses, provide the scoped addresses to pf(4).
    
    - Update the icmp6 state lookup logic to match scoped MLL addresses.
    
    - Remove a shortcut in ip6_input() that bypasses pf and always look
    for an RTF_LOCAL route.
    
    Packets sent to multicast addresses still retain their original
    interface due to the fact that local multicast packet delivering
    does not use if_output.
    
    This makes ping6 to link-local addresses work even with pf enabled
    and "set skip" on loopbacks, reported by Pieter Verberne.
    
    Debugged, analysed and tested with mikeb@.
    
    ok mikeb@, henning@, sthen@

 sys/net/pf.c | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

commit 3811cf15477e5083ff6e2c60e3187468dc508d8e
Author: tedu <tedu@openbsd.org>
Date:   Tue Nov 18 02:37:30 2014 +0000

    move arc4random prototype to systm.h. more appropriate for most code
    to include that than rdnvar.h. ok deraadt dlg

 sys/net/pf.c       | 3 +--
 sys/net/pf_ioctl.c | 3 +--
 sys/net/pf_lb.c    | 3 +--
 sys/net/pf_norm.c  | 3 +--
 4 files changed, 4 insertions(+), 8 deletions(-)

commit e04cbca0bb7dcb6bd0be44b126d48e08d14e12a1
Author: tedu <tedu@openbsd.org>
Date:   Sun Nov 16 17:40:17 2014 +0000

    remove now unnecessary casts from hash update calls.

 sys/net/pf.c | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

commit 842fba9566e8da3df64e169ae5b9fe620a1ee69e
Author: tedu <tedu@openbsd.org>
Date:   Sun Nov 16 17:37:42 2014 +0000

    convert to use sha512 for pf iss. ok deraadt dlg

 sys/net/pf.c | 35 +++++++++++++++++++----------------
 1 file changed, 19 insertions(+), 16 deletions(-)

commit 363b5eb1ae22736118bd3bf6829c2821f135ed5e
Author: dlg <dlg@openbsd.org>
Date:   Sun Nov 16 11:58:14 2014 +0000

    mix the rdomain (rtable?) into the hash for tcp iss generation.
    
    ok phessler@ tedu@

 sys/net/pf.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit 12f2d0e223118c1192cd95c04a8a13525129acfa
Author: mikeb <mikeb@openbsd.org>
Date:   Tue Nov 11 11:37:05 2014 +0000

    Ask networking stack to recalculate the ICMPv6 checksum in pf_route6
    since we might have tweaked the addresses.
    
    Problem reported and fix test by Bastien Durel <bastien at geekwu ! org>,
    thanks!  OK henning

 sys/net/pf.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit c5a642721cc8438bdbbeee39f34ce4d948a0f717
Author: bluhm <bluhm@openbsd.org>
Date:   Mon Nov 10 18:49:42 2014 +0000

    Split the logic for the ICMP and ICMP6 case in pf_get_sport().  The
    types ICMP_ECHO and ICMP6_ECHO_REQUEST have their special meaning
    only if the protocol matches.
    Put an #ifdef INET6 around ICMP6_ECHO_REQUEST to make the kernel
    without IPv6 compile.
    OK henning@

 sys/net/pf_lb.c | 19 ++++++++++++++-----
 1 file changed, 14 insertions(+), 5 deletions(-)

commit a390120dcd95ae08d5576ab0fc9cd824414da91f
Author: lteo <lteo@openbsd.org>
Date:   Thu Nov 6 05:29:35 2014 +0000

    Remove unneeded netinet6/ip6_divert.h include.
    
    ok bluhm@ dlg@ florian@ mpi@

 sys/net/if_pfsync.c | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

commit 5148b194d54f5faa4f711035566614669e61a9d8
Author: mpi <mpi@openbsd.org>
Date:   Sat Nov 1 21:40:38 2014 +0000

    Rename rtalloc1() into rtalloc(9) and convert its flags to only enable
    functionnality instead of a mix of enable/disable.
    
    ok bluhm@, jca@

 sys/net/pf.c | 20 ++++++++++----------
 1 file changed, 10 insertions(+), 10 deletions(-)

commit c4975495d3072b13f52e7c0fa60b33ec9998d62c
Author: dlg <dlg@openbsd.org>
Date:   Fri Oct 17 00:47:48 2014 +0000

    reset all the pfsync packet state before calling ip_output in
    pfsync_sendout. more specifically, move the reset of sc->sc_len to
    PFSYNC_MINPKT above ip_output.
    
    this prevents a situation where ipsec via ip_output calls
    pfsync_update_tdb for syncing the ipsec flow to a peer, which
    accounts for the tdb in the next pfsync packet, before unwinding
    back to pfsync_output which resets the accounting we just did.
    
    the next pfsync packet to be sent out will be allocated with a short
    length because sc_len is wrong, and the long lists of things (eg,
    the tdb) can overwrite memory after the mbuf. this manifests as
    incorrect poisoning or xsimpleq entry corruption in mbufs still in
    a pool, or random corruption of m->m_next on other mbufs in the
    system.
    
    bug found, fix tested, and ok stsp@

 sys/net/if_pfsync.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

commit 27ae666c98839b54ee31f46d4088ba4f1bccd084
Author: mpi <mpi@openbsd.org>
Date:   Tue Oct 14 09:52:25 2014 +0000

    Use rtfree() instead of RTFREE(), NULLify some free'd route pointers and
    kill the macro.
    
    ok mikeb@, henning@

 sys/net/pf.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

commit 8d40530c7af7ff97e428c2a48c229d352edd7081
Author: sthen <sthen@openbsd.org>
Date:   Fri Oct 10 16:20:03 2014 +0000

    s/lenght/length/ in comments

 sys/net/pf_norm.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 5ffe0a3847c570376c74cbf31c752daf1a558418
Author: mpi <mpi@openbsd.org>
Date:   Wed Oct 8 07:37:01 2014 +0000

    Use rtalloc1() instead of rtalloc_noclone().
    
    ok henning@, phessler@

 sys/net/pf.c | 14 +++++++++-----
 1 file changed, 9 insertions(+), 5 deletions(-)

commit 0d0932bcad01f527409fbdad6fb4759b1a73fd2b
Author: mpi <mpi@openbsd.org>
Date:   Sat Sep 27 12:26:16 2014 +0000

    Kill rtalloc() and update rtalloc1() and rtalloc_mpath() to no longer
    rely on "struct route" that should die.
    
    ok claudio@

 sys/net/pf.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 88e958dae4e6d918b5bea336d2024c89571bc178
Author: bluhm <bluhm@openbsd.org>
Date:   Mon Sep 8 18:10:01 2014 +0000

    When logging a packet to a listener on the pflog0 interface, the
    function pflog_bpfcopy() is setting up a packet description with
    pf_setup_pdesc().  When pf_setup_pdesc() is droppig a bad packet,
    it increments the the pf status counters.  This way bad packets
    could be accounted multiple times.  Now pflog_bpfcopy() passes a
    reason pointer NULL to indicate that no accounting should be done.
    From Florian Riehm; OK henning@

 sys/net/if_pflog.c | 10 ++++++----
 sys/net/pfvar.h    |  9 +++++----
 2 files changed, 11 insertions(+), 8 deletions(-)

commit a370214e4b602a35c37039b041cfd100d6dcb48a
Author: jsg <jsg@openbsd.org>
Date:   Mon Sep 8 06:24:13 2014 +0000

    remove uneeded route.h includes
    ok miod@ mpi@

 sys/net/if_pflog.c  | 3 +--
 sys/net/if_pfsync.c | 5 ++---
 sys/net/pf_lb.c     | 6 +-----
 sys/net/pf_norm.c   | 3 +--
 sys/net/pf_table.c  | 3 +--
 5 files changed, 6 insertions(+), 14 deletions(-)

commit df4df0681a244433aa7e06bee3fd39151afa518a
Author: blambert <blambert@openbsd.org>
Date:   Thu Aug 14 07:55:17 2014 +0000

    fix logging strings (correct function name via __func__ + a typo)
    
    ok florian@ henning@

 sys/net/pf_lb.c | 18 ++++++++----------
 1 file changed, 8 insertions(+), 10 deletions(-)

commit 7b8072cec770783f0772643a99481ce3d117023e
Author: mikeb <mikeb@openbsd.org>
Date:   Tue Aug 12 15:29:33 2014 +0000

    Finally implement what's stated in the man page regarding parent
    anchors for "once" rules: "In case this is the only rule in the
    anchor, the anchor will be destroyed automatically after the rule
    is matched."  Employ an additional pointer pair to keep track of
    the parent ruleset containing the anchor that we want to remove.
    
    OK henning

 sys/net/pf.c       | 18 ++++++++++++------
 sys/net/pf_ioctl.c | 18 ++++++++++++++----
 sys/net/pfvar.h    |  3 ++-
 3 files changed, 28 insertions(+), 11 deletions(-)

commit 247e78d2b99f5d6d6137f0983ade1b6d55189a8a
Author: mikeb <mikeb@openbsd.org>
Date:   Tue Aug 12 14:42:06 2014 +0000

    Make sure that pf_step_into_anchor always saves a pointer to the rule
    that owns the anchor on the pf anchor stack.  There's no reason why we
    should check for depth here.  As a side effect this makes sure that the
    correct nested anchor gets it's counter bumped instead of the top most.
    
    For the save/restore symmetry pf_step_out_of_anchor is made to always
    restore previous value of the anchor rule.  depth == 0 means what we a
    at the top (main ruleset).
    
    OK henning

 sys/net/pf.c | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

commit 9dd330a2b72cdce33cebff8422e672e3e8d99070
Author: mikeb <mikeb@openbsd.org>
Date:   Tue Aug 12 14:38:27 2014 +0000

    Apart from some minor code reshuffling the big change is that we
    start with a ruleset pointer assigned to pf_main_ruleset so that
    pf_purge_rule doesn't get called with a NULL.
    
    Prompted by the discussion with Alexandr Nedvedicky <alexandr !
    nedvedicky at oracle ! com>.
    
    OK henning

 sys/net/pf.c       |  3 ++-
 sys/net/pf_ioctl.c | 11 +++--------
 2 files changed, 5 insertions(+), 9 deletions(-)

commit 2ec318bfd9d2fdfebdb703c1db477637fd7ccd42
Author: mpi <mpi@openbsd.org>
Date:   Tue Jul 22 11:06:09 2014 +0000

    Fewer <netinet/in_systm.h> !

 sys/net/if_pflog.c   | 3 +--
 sys/net/if_pfsync.c  | 3 +--
 sys/net/pf.c         | 3 +--
 sys/net/pf_if.c      | 3 +--
 sys/net/pf_ioctl.c   | 3 +--
 sys/net/pf_lb.c      | 3 +--
 sys/net/pf_norm.c    | 3 +--
 sys/net/pf_ruleset.c | 3 +--
 8 files changed, 8 insertions(+), 16 deletions(-)

commit 249bc5f3a3c1084829b0c73fcd806a889884ba61
Author: bluhm <bluhm@openbsd.org>
Date:   Sun Jul 13 17:41:04 2014 +0000

    When reassembled IPv6 fragments are NATed or RDRed by pf, the
    checksum has to be recalculated before the packet is fragmented
    again.  Put a missing in6_proto_cksum_out() into pf_refragment6().
    This makes run-regress-frag6 and run-regress-frag6-ext pass again.
    From Matthias Pitzl; OK henning@

 sys/net/pf_norm.c | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

commit 229ef2df43a26b29e5f8944f41126a911b16c0b7
Author: bluhm <bluhm@openbsd.org>
Date:   Sun Jul 13 16:58:43 2014 +0000

    Put back a m_copyback() that got lost in rev 1.837 of pf.c.  This
    fixes the rewrite of an IPv6 header of an ICMP6 packet in the payload
    of an ICMP6 error packet.  Path MTU discovery with ping6 over pf
    nat or rdr works again.
    Found by src/regress/sys/net/pf_fragment make run-regress-fragping6
    OK henning@

 sys/net/pf.c | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

commit dd168dc2dbd0498445c205acd3a92d235cbcb6af
Author: tedu <tedu@openbsd.org>
Date:   Sat Jul 12 18:44:22 2014 +0000

    add a size argument to free. will be used soon, but for now default to 0.
    after discussions with beck deraadt kettenis.

 sys/net/if_pflog.c   |  6 ++--
 sys/net/if_pfsync.c  |  6 ++--
 sys/net/pf_if.c      |  6 ++--
 sys/net/pf_ioctl.c   | 88 ++++++++++++++++++++++++++--------------------------
 sys/net/pf_ruleset.c |  4 +--
 sys/net/pf_table.c   |  6 ++--
 6 files changed, 58 insertions(+), 58 deletions(-)

commit 89cfabdcbcffc16c13db46c5c4811e4471f532c6
Author: lteo <lteo@openbsd.org>
Date:   Thu Jul 10 03:17:59 2014 +0000

    Simplify the way divert(4) sends packets to userspace: Instead of
    unnecessarily allocating an mbuf tag to store the divert port, just pass
    the divert port directly to divert_packet() or divert6_packet() as an
    argument.
    
    includes a style fix pointed out by bluhm@
    ok bluhm@ henning@ reyk@

 sys/net/pf.c | 15 +++++----------
 1 file changed, 5 insertions(+), 10 deletions(-)

commit e0bcf97c3335dc16ea9ce156dc288b74e3db502a
Author: henning <henning@openbsd.org>
Date:   Wed Jul 9 11:03:04 2014 +0000

    tedu bpf_mtap_pflog().
    now that it is a trivial wrapper around the extended bpf_mtap_hdr, we can
    use bpf_mtap_hdr directly. added benefit: pflog_bpfcopy doesn't need to
    be exported any more and can stay private to if_pflog.c
    ok benno bluhm reyk

 sys/net/if_pflog.c | 6 ++++--
 sys/net/if_pflog.h | 4 +---
 2 files changed, 5 insertions(+), 5 deletions(-)

commit ff513d8e4e84e46a09d7393000bd2d5a6599339c
Author: mikeb <mikeb@openbsd.org>
Date:   Wed Jul 2 13:06:00 2014 +0000

    better indentation;  no functional change

 sys/net/pf_lb.c | 137 ++++++++++++++++++++++++++++----------------------------
 1 file changed, 69 insertions(+), 68 deletions(-)

commit e57df1080e79a759d7d66e9c9c09c9baa88ebdb8
Author: mikeb <mikeb@openbsd.org>
Date:   Wed Jul 2 13:04:50 2014 +0000

    u_int32_t's can't go negative

 sys/net/pf.c | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

commit d92e4703bd1a70632e71428071cc046a24bcb14b
Author: mikeb <mikeb@openbsd.org>
Date:   Wed Jul 2 13:02:08 2014 +0000

    better indentation

 sys/net/pfvar.h | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

commit 3c4ce7ed9af0c2769ca824472b3ecd17389ee91f
Author: mikeb <mikeb@openbsd.org>
Date:   Wed Jun 25 16:21:20 2014 +0000

    pf_translate doesn't use the mbuf argument anymore.
    
    From Alexandr Nedvedicky <alexandr ! nedvedicky at oracle ! com>.  Thanks!

 sys/net/if_pflog.c | 4 ++--
 sys/net/pf.c       | 6 +++---
 sys/net/pfvar.h    | 4 ++--
 3 files changed, 7 insertions(+), 7 deletions(-)

commit a056e3eb9dc6d5d865e414b612dbbe7e79c49418
Author: mpi <mpi@openbsd.org>
Date:   Tue May 20 11:03:13 2014 +0000

    Assign the queue ID to the correct packet header when sending ICMP messages.
    
    ok henning@

 sys/net/pf.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit fd42954318f50778482e8cf77410bcfb8f312aa7
Author: henning <henning@openbsd.org>
Date:   Thu Apr 24 11:55:12 2014 +0000

    ewps... repair qid assignment

 sys/net/pf.c | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

commit a9253da7673d2aab4c230dcf21cf02cefdbbf927
Author: mpi <mpi@openbsd.org>
Date:   Tue Apr 22 14:41:03 2014 +0000

    Remove some altq tentacles.
    
    ok pelikan@, henning@

 sys/net/pf.c       | 11 ++---------
 sys/net/pf_ioctl.c |  9 +--------
 sys/net/pfvar.h    | 55 ++----------------------------------------------------
 3 files changed, 5 insertions(+), 70 deletions(-)

commit 4dc494bb7fe7c9c28288c6cd20bb7ae39ee56120
Author: henning <henning@openbsd.org>
Date:   Mon Apr 21 12:22:25 2014 +0000

    ip_output() using varargs always struck me as bizarre, esp since it's only
    ever used to pass on uint32 (for ipsec). stop that madness and just pass
    the uint32, 0 in all cases but the two that pass the ipsec flowinfo.
    ok deraadt reyk guenther

 sys/net/if_pfsync.c | 8 ++++----
 sys/net/pf.c        | 6 +++---
 2 files changed, 7 insertions(+), 7 deletions(-)

commit e7ad246319a36380a83fe034447fad2abd18ff91
Author: henning <henning@openbsd.org>
Date:   Mon Apr 21 11:10:54 2014 +0000

    we'll do fine without casting NULL to struct foo * / void *
    ok gcc & md5 (alas, no binary change)

 sys/net/pf.c | 8 +++-----
 1 file changed, 3 insertions(+), 5 deletions(-)

commit 6720ff9e54d80a0b74de864deb5b7312a8f532e6
Author: henning <henning@openbsd.org>
Date:   Sat Apr 19 12:59:53 2014 +0000

    shrink pf by 445 lines.
    while there, get rid of the altq ioctls and assciated now obsolete code

 sys/net/pf.c       |  25 +---
 sys/net/pf_ioctl.c | 421 +----------------------------------------------------
 sys/net/pfvar.h    |  13 +-
 3 files changed, 7 insertions(+), 452 deletions(-)

commit 674c6722fd99bcab1a0b18f93e169f91bf0f521f
Author: henning <henning@openbsd.org>
Date:   Fri Apr 18 15:13:01 2014 +0000

    pf_send_tcp: ask the stack to do the cksum instead of doing it manually
    ok benno lteo naddy (back in january)

 sys/net/pf.c | 34 +++++++++++-----------------------
 1 file changed, 11 insertions(+), 23 deletions(-)

commit 5ee8afe39a770ad61ead39a141e8c19b968b0fdd
Author: mpi <mpi@openbsd.org>
Date:   Mon Apr 14 09:06:41 2014 +0000

    "struct pkthdr" holds a routing table ID, not a routing domain one.
    Avoid the confusion by using an appropriate name for the variable.
    
    Note that since routing domain IDs are a subset of the set of routing
    table IDs, the following idiom is correct:
    
            rtableid = rdomain
    
    But to get the routing domain ID corresponding to a given routing table
    ID, you must call rtable_l2(9).
    
    claudio@ likes it, ok mikeb@

 sys/net/if_pfsync.c |  4 ++--
 sys/net/pf.c        | 40 ++++++++++++++++++++++------------------
 2 files changed, 24 insertions(+), 20 deletions(-)

commit d559b8cb6cdd6f912edd28712213aec79fb0b7bc
Author: guenther <guenther@openbsd.org>
Date:   Sun Mar 30 21:54:48 2014 +0000

    Eliminates struct pcred by moving the real and saved ugids into
    struct ucred; struct process then directly links to the ucred
    
    Based on a discussion at c2k10 or so before noting that FreeBSD and
    NetBSD did this too.
    
    ok matthew@

 sys/net/pf_ioctl.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit d00192b6ce94736e549a16d2a103094e99d89079
Author: jca <jca@openbsd.org>
Date:   Thu Mar 27 12:07:48 2014 +0000

    When enforcing TOS (Traffic Class), preserve the ECN bits, just as we do
    with IPv4 packets. ok mikeb@

 sys/net/pf_norm.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit fd92f2bb4ff9c88cbe75816a4e0f1bfe95f72cfa
Author: jca <jca@openbsd.org>
Date:   Mon Mar 10 17:27:06 2014 +0000

    When translating packets from one address family to another, pass the
    TOS/Traffic Class field of the original packet.  Discussed with mikeb@

 sys/net/pf.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit 1964420d7dffdf5a20d63a8522c846ca45f98076
Author: jca <jca@openbsd.org>
Date:   Mon Mar 10 17:22:27 2014 +0000

    When setting up the packet description, also retrieve the Traffic Class
    field of IPv6 packets.  Issue reported by Christophe Heurtaux on frnog.
    ok mikeb@

 sys/net/pf.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit f8c66b824cef6024947a8fd784a8f741669f46b8
Author: tedu <tedu@openbsd.org>
Date:   Tue Feb 4 01:04:03 2014 +0000

    reduce the length of some pool names. ok deraadt guenther mpi

 sys/net/pf_ioctl.c | 20 ++++++++++----------
 1 file changed, 10 insertions(+), 10 deletions(-)

commit 3c23016fb724de59fe23daedf6c60a8731e2f145
Author: lteo <lteo@openbsd.org>
Date:   Sat Jan 25 03:39:00 2014 +0000

    Simplify and shorten the way ICMP checksums are verified in
    pf_check_proto_cksum() by letting it use the same in4_cksum() call that
    is used for TCP and UDP checksums.
    
    ok henning@ naddy@

 sys/net/pf.c | 22 +++++-----------------
 1 file changed, 5 insertions(+), 17 deletions(-)

commit c011a4aa8b1b26cfc395a2c390633d5eb6226bb8
Author: henning <henning@openbsd.org>
Date:   Fri Jan 24 12:07:50 2014 +0000

    in pf_check_proto_cksum, updtae the swcksum counters if we cksummed in
    software. ok naddy
    (this is pbly the ultimate commit'n'run)

 sys/net/pf.c | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

commit 095b4e20b18c4bfa90815c2d791ada6bca41e2c3
Author: henning <henning@openbsd.org>
Date:   Thu Jan 23 23:51:29 2014 +0000

    since the cksum rewrite the counters for hardware checksummed packets
    are are lie, since the software engine emulates hardware offloading
    and that is later indistinguishable. so kill the hw cksummed counters.
    introduce software checksummed packet counters instead.
    tcp/udp handles ip & ipvshit, ip cksum covered, 6 has no ip layer cksum.
    as before we still have a miscounting bug for inbound with pf on, to be
    fixed in the next step.
    found by, prodding & ok naddy

 sys/net/pf.c | 14 +++++---------
 1 file changed, 5 insertions(+), 9 deletions(-)

commit 8a4076df1e368c0c384c8af73a24826df3502927
Author: henning <henning@openbsd.org>
Date:   Wed Jan 22 04:34:25 2014 +0000

    one more absolutely obvious bcopy -> memcpy

 sys/net/pf_norm.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 47d085d4377f6e04e858cdba752676c86e068958
Author: henning <henning@openbsd.org>
Date:   Wed Jan 22 04:33:34 2014 +0000

    7x bcopy -> memcpy, impossibility of overlaps verified. ok benno dlg

 sys/net/pf.c    | 14 +++++++-------
 sys/net/pf_if.c |  4 ++--
 2 files changed, 9 insertions(+), 9 deletions(-)

commit 4be478ce5def8fd99f6b6615f5dedf91279e7c1c
Author: henning <henning@openbsd.org>
Date:   Tue Jan 21 01:50:07 2014 +0000

    introduce a way to match "any" interface, excluding loopback ones.
    pfi_kif_get annotates the kif with a flag indicating it is the "any" match
    pfi_kif_match obeys that flag
    ok benno

 sys/net/pf_if.c | 12 +++++++++++-
 sys/net/pfvar.h |  3 ++-
 2 files changed, 13 insertions(+), 2 deletions(-)

commit 08c03b768d75b4c8d570a24c32970c5a23564d66
Author: henning <henning@openbsd.org>
Date:   Mon Jan 20 02:57:49 2014 +0000

    support negated matches on the rcvif, ok dlg benno

 sys/net/pf.c       | 5 +++--
 sys/net/pf_ioctl.c | 4 +++-
 sys/net/pfvar.h    | 4 +++-
 3 files changed, 9 insertions(+), 4 deletions(-)

commit 3e0567a8fba7d22d104aca1a6b212461df0fc583
Author: bluhm <bluhm@openbsd.org>
Date:   Wed Jan 8 22:38:29 2014 +0000

    Name the local variables for struct ifaddr consistently "ifa".
    OK mikeb@

 sys/net/pf_if.c | 22 +++++++++++-----------
 1 file changed, 11 insertions(+), 11 deletions(-)

commit ccdbca57e06e839efdf8a2a0a9a2cbc0fbe3e060
Author: pelikan <pelikan@openbsd.org>
Date:   Fri Jan 3 12:48:58 2014 +0000

    Switch frequently allocated structs from malloc(M_DEVBUF) to separate pools.
    
    ok henning, "looks fine" mikeb, input from guenther.

 sys/net/pf.c       | 3 ++-
 sys/net/pf_ioctl.c | 8 +++++++-
 sys/net/pfvar.h    | 4 +++-
 3 files changed, 12 insertions(+), 3 deletions(-)

commit 72e080bcb18240fe20ac2dfe513a8c046f924bd1
Author: pelikan <pelikan@openbsd.org>
Date:   Fri Jan 3 12:43:09 2014 +0000

    Make queues disappear correctly on interfaces being destroyed.
    
    ok henning

 sys/net/pf_if.c    |  8 +++++++-
 sys/net/pf_ioctl.c | 56 ++++++++++++++++++++++++++++++------------------------
 sys/net/pfvar.h    |  5 ++++-
 3 files changed, 42 insertions(+), 27 deletions(-)

commit ff57f3f5fd3039a3c2f2efdd02b94de180524a40
Author: deraadt <deraadt@openbsd.org>
Date:   Sun Dec 22 16:49:29 2013 +0000

    change pf_osfp_entry strings to unsigned, to help userland
    ok florian

 sys/net/pfvar.h | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

commit 73f251d976a2b104d32d6b0753574e7dc9a1aa1f
Author: mikeb <mikeb@openbsd.org>
Date:   Tue Nov 19 17:30:08 2013 +0000

    provide forward declarations for structures ifnet and ifg_group;
    ok deraadt

 sys/net/pfvar.h | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

commit 6e7cabcc47137bbfa4c4fc47d21842544b69e794
Author: chl <chl@openbsd.org>
Date:   Mon Nov 18 21:16:55 2013 +0000

    Fix potential null dereference.
    
    Found by LLVM/Clang Static Analyzer.
    
    ok benno@ henning@

 sys/net/if_pfsync.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit ef08276dfe14d0ae365bf5666b6ed8ae15ce3977
Author: bluhm <bluhm@openbsd.org>
Date:   Mon Nov 18 20:30:04 2013 +0000

    The prio value of a pf match rule was overridden by a later pass
    rule even if the latter had no prio flag.  Fix match rules with
    prio to work as expected.
    Found by Roman Kravchuk; reported and tested by Alexey Suslikov;
    OK henning@

 sys/net/pf.c | 8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)

commit 3c6a2edfac7f00f76f11bb9cf7a94e62682e270f
Author: chl <chl@openbsd.org>
Date:   Sat Nov 16 00:36:01 2013 +0000

    Remove dead assignments and now unused variables.
    
    Found by LLVM/Clang Static Analyzer.
    
    ok henning@ mikeb@ bluhm@

 sys/net/if_pflog.c |  5 ++---
 sys/net/pf.c       | 10 ++--------
 sys/net/pf_norm.c  |  7 +------
 3 files changed, 5 insertions(+), 17 deletions(-)

commit 13c9281b025ecaefc2ffa4d593194409a8cda56c
Author: haesbaert <haesbaert@openbsd.org>
Date:   Fri Nov 15 21:34:51 2013 +0000

    Revert 1.858, as it causes panics of inp:
    
    kernel diagnostic assertion \"sotoinpcb(inp->inp_socket) == inp\"
    failed: file "../../../../netinet/tcp_input.c", line 646
    
    Will think of a better fix.

 sys/net/pf.c | 6 +-----
 1 file changed, 1 insertion(+), 5 deletions(-)

commit 642d98a2535c098183d89609f1b991eecc85c2a4
Author: bluhm <bluhm@openbsd.org>
Date:   Fri Nov 15 16:15:41 2013 +0000

    After discussion with deraadt@ and Fernando Gont, it seems that the
    stack should still scan for IPv6 type 0 routing headers.  There are
    OpenBSD routers running without pf and there are plenty of legacy
    implementations supporting RH0.
    
    Bring back the function ip6_check_rh0hdr() that I removed a month
    ago.  As an improvement to the prevoius solution, only scan the
    header chain in ip6_input() if the packet has not been inspected
    by pf.  Both implementations drop packets with RH0 anywhere in the
    extension header chain.
    
    OK mikeb@ henning@

 sys/net/pf.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit 0c54ab5ff2f7a54508ffe1feb10de27688fcc09e
Author: henning <henning@openbsd.org>
Date:   Fri Nov 15 12:18:02 2013 +0000

    inherit the rdomain sc to pkthdr
    from erik at halon dot se, ok benno phessler benno

 sys/net/if_pfsync.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit d285ff798bb2c1873169c8fb7dd9d9afbffa529f
Author: haesbaert <haesbaert@openbsd.org>
Date:   Fri Nov 15 10:18:26 2013 +0000

    Forget socket linking on pf_pkt_addr_changed(), this fixes among other
    things, setups with ipsec+ifbound.
    
    The sympthon was that local IPSec packets (tunnel->tunnel) would not
    match state after the latest pf_find_state() changes. The first packet
    would go through, but the subsequent ones would fail the match and
    collide later with the existing state.
    
    ok henning@ markus@

 sys/net/pf.c | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

commit 19bf58d7d51f96be135f866ccbbd67c9a5b8c054
Author: deraadt <deraadt@openbsd.org>
Date:   Wed Nov 13 18:25:57 2013 +0000

    DIOCGETSRCNODES was leaking a little bit more kernel information
    ok benno

 sys/net/pf_ioctl.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit e92976380d54c744694bfdf8c023e7335f2267c5
Author: deraadt <deraadt@openbsd.org>
Date:   Tue Nov 12 20:14:22 2013 +0000

    two ioctl's were disclosing kernel pointers and such.
    ok henning benno

 sys/net/pf_ioctl.c | 12 +++++++++++-
 1 file changed, 11 insertions(+), 1 deletion(-)

commit 63d9a9c95a54ad4e0fca375749fa26773afdd8d8
Author: mpi <mpi@openbsd.org>
Date:   Wed Oct 30 11:35:10 2013 +0000

    Allow to compile a kernel without INET6.
    
    ok henning@

 sys/net/pf.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit 7da8ba2684e7207eb81a13af55e46101a77d8810
Author: mikeb <mikeb@openbsd.org>
Date:   Wed Oct 30 11:21:26 2013 +0000

    translate icmpv6 echo id's the same way we do for icmpv4;  ok henning

 sys/net/pf.c    | 14 +++++++++++++-
 sys/net/pf_lb.c |  4 ++--
 2 files changed, 15 insertions(+), 3 deletions(-)

commit e34cb8335a022ff8d5afba1528e33eb61ccc888d
Author: mikeb <mikeb@openbsd.org>
Date:   Wed Oct 30 11:18:32 2013 +0000

    add a comment describing why do we call pf_map_addr again if port
    selection process fails;  ok henning

 sys/net/pf_lb.c | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

commit 5d4200d304754f602b7408eb9438bacf454c31a7
Author: mikeb <mikeb@openbsd.org>
Date:   Mon Oct 28 12:09:41 2013 +0000

    previous udp port number rewrite fix turned out to be a work around
    the incorrect pf_change_ap call;  while here make the tcp case use
    pf_change_ap since it shares the same properties.  ok henning

 sys/net/pf.c | 24 +++++++++++++-----------
 1 file changed, 13 insertions(+), 11 deletions(-)

commit 7b2d60742912a27e72b97f75e56b23cb0851c329
Author: mpi <mpi@openbsd.org>
Date:   Thu Oct 24 11:31:43 2013 +0000

    Remove the number of in6_var.h inclusions by moving some functions and
    global variables to in6.h.
    
    ok deraadt@

 sys/net/if_pflog.c | 4 +---
 sys/net/pf_lb.c    | 4 +---
 2 files changed, 2 insertions(+), 6 deletions(-)

commit a0e69eb01928ceb276ca90907e2577de5cf4026e
Author: deraadt <deraadt@openbsd.org>
Date:   Thu Oct 24 11:14:33 2013 +0000

    Move obvious kernel prototypes (and structure's with kernel pointers,
    obviously only used in the kernel) behind #ifdef _KERNEL

 sys/net/if_pfsync.h | 4 ++--
 sys/net/pf.c        | 6 +++---
 2 files changed, 5 insertions(+), 5 deletions(-)

commit 7a304f30d6ce51bd5f53c3c2066f67013d242a06
Author: mikeb <mikeb@openbsd.org>
Date:   Wed Oct 23 16:13:54 2013 +0000

    translate port numbers for inner udp packets when they're returned
    as a payload of icmp error messages;  makes traceroute6 operate
    across a nat64 gateway.
    
    prompted by sthen, ok henning

 sys/net/pf.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit 48a59fe3de1bf0741c6557eb9f5dcbf9d9c5b9a3
Author: mpi <mpi@openbsd.org>
Date:   Wed Oct 23 15:12:42 2013 +0000

    Remove the number of in_var.h inclusions by moving some functions and
    global variables to in.h.
    
    ok mikeb@, deraadt@

 sys/net/if_pflog.c | 3 +--
 sys/net/pf.c       | 3 +--
 sys/net/pf_lb.c    | 3 +--
 3 files changed, 3 insertions(+), 6 deletions(-)

commit 8c385beeb8fbd18d2d79852c73a7578f756c0a72
Author: mikeb <mikeb@openbsd.org>
Date:   Wed Oct 23 11:06:56 2013 +0000

    overwrite icmp packet type-specific nextptr field only when we're
    changing it.  fixes an icmp to icmpv6 translation regression found
    by todd and sthen.
    
    ok henning sthen

 sys/net/pf.c | 8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)

commit a1b9f9037ac5ecb0e4c4342fe411cccc99c2ff05
Author: lteo <lteo@openbsd.org>
Date:   Tue Oct 22 15:35:57 2013 +0000

    In pf_test_state_icmp(), actually copy pd->hdr.any back into the mbuf as
    intended after the ICMP/ICMPv6 checksum is zeroed in pf_cksum().  This
    resolves an issue found by sthen@ where ICMP traffic with nat-to failed
    due to incorrect checksums.
    
    Fix tested by sthen@ and myself
    OK henning@

 sys/net/pf.c | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

commit e044b7e28fa07c41449d0289f77a3e5b00e09471
Author: henning <henning@openbsd.org>
Date:   Mon Oct 21 09:39:23 2013 +0000

    pf_translate: missing conditonal pf_check_proto_cksum calls before
    mucking with the icmpid.
    impact of the bug is quite limited, only affect icmp echo requests & reply
    through nat when the natting does not actually change any address.
    ok bluhm, found while hunting something else sthen is seeing

 sys/net/pf.c | 20 +++++++++++++++++---
 1 file changed, 17 insertions(+), 3 deletions(-)

commit a70b21f23c7dfc19f2eeb8d7586bf1f4e2240b4f
Author: deraadt <deraadt@openbsd.org>
Date:   Sun Oct 20 16:35:31 2013 +0000

    Deep inside DIOCXCOMMIT, should return a real errno instead of -1
    ok henning pelikan

 sys/net/pf_ioctl.c | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

commit ba7730b15e29f04fa2f36d3cfb1b316e9816e45d
Author: henning <henning@openbsd.org>
Date:   Sun Oct 20 13:42:36 2013 +0000

    in pf_cksum, set the icmp/icmp6 cksums to 0, for comsistency with tcp/udp
    with & ok bluhm

 sys/net/pf.c | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

commit 689850e47edd7f532e7735e3180004d40641b1bd
Author: claudio <claudio@openbsd.org>
Date:   Sun Oct 20 13:21:56 2013 +0000

    rt_mpath_next() was always called with 0 in the last argument. So drop it.
    OK henning@

 sys/net/pf.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit dc01e491976fd30bd71a4912a9e6ec8a4e5ca36c
Author: phessler <phessler@openbsd.org>
Date:   Sun Oct 20 11:03:00 2013 +0000

    Put a large chunk of the IPv6 rdomain support in-tree.
    
    Still some important missing pieces, and this is not yet enabled.
    
    OK bluhm@

 sys/net/pf.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

commit 83617de96c37ad93653ecce1cb6b535e8f1efdc7
Author: henning <henning@openbsd.org>
Date:   Sat Oct 19 10:47:53 2013 +0000

    pf_cksum doesn't need to compute the pseudo hdr cksum any more.
    ok lteo florian

 sys/net/pf.c | 12 +-----------
 1 file changed, 1 insertion(+), 11 deletions(-)

commit dc5728648b28d91cc99d2d69701421acb75285aa
Author: bluhm <bluhm@openbsd.org>
Date:   Thu Oct 17 16:27:39 2013 +0000

    The header file netinet/in_var.h included netinet6/in6_var.h.  This
    created a bunch of useless dependencies.  Remove this implicit
    inclusion and do an explicit #include <netinet6/in6_var.h> when it
    is needed.
    OK mpi@ henning@

 sys/net/if_pflog.c  | 3 ++-
 sys/net/if_pfsync.c | 3 ++-
 sys/net/pf.c        | 3 ++-
 sys/net/pf_if.c     | 3 +--
 sys/net/pf_ioctl.c  | 3 +--
 sys/net/pf_lb.c     | 3 ++-
 sys/net/pf_norm.c   | 3 +--
 7 files changed, 11 insertions(+), 10 deletions(-)

commit 6568394152b0023134f4de3cd6ba28f486b45952
Author: henning <henning@openbsd.org>
Date:   Sat Oct 12 12:13:10 2013 +0000

    new bandwidth shaping subsystem, kernel side
    uses hfsc behind the scenes; altq stays in parallel for a migration phase.
    if.h even more messy for the transition, but eventuelly it should become
    readable...
    looked over & tested by many, ok phessler sthen

 sys/net/pf.c       |   9 +-
 sys/net/pf_ioctl.c | 252 +++++++++++++++++++++++++++++++++++++++++++++++++----
 sys/net/pfvar.h    |  58 ++++++++++--
 3 files changed, 296 insertions(+), 23 deletions(-)

commit 42a457a06e3acbeb8f903c4ab798065ea5568acc
Author: henning <henning@openbsd.org>
Date:   Sat Oct 12 11:55:45 2013 +0000

    give tagname2tag and its siblings an extra "create" parameter. if 1, it
    behaves like before and creates the mapping if needed. if 0, lookup only.
    looked over by many, ok phessler sthen

 sys/net/pf_ioctl.c | 19 +++++++++++--------
 sys/net/pfvar.h    |  4 ++--
 2 files changed, 13 insertions(+), 10 deletions(-)

commit 8a779c9fc0666f18c00f03589436adefee80d905
Author: gerhard <gerhard@openbsd.org>
Date:   Fri Oct 11 10:58:42 2013 +0000

    Prevent non-data packets from being dropped.
    
    ok bluhm@ mikeb@

 sys/net/pf.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 9339be08da19c7d50d35002d52f75e675025129b
Author: camield <camield@openbsd.org>
Date:   Wed Oct 9 09:32:01 2013 +0000

    Don't leak ruleitems from match rules when hitting a per-rule max state limit.
    
    ok henning

 sys/net/pf.c | 15 +++++++--------
 1 file changed, 7 insertions(+), 8 deletions(-)

commit aadfe2797771ab7186431b09cdb46c5edd6ea949
Author: sf <sf@openbsd.org>
Date:   Tue Oct 1 20:15:56 2013 +0000

    Format string fixes: Cast time_t to long long
    
    and mnt_stat.f_ctime is long long, too

 sys/net/pf_norm.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

commit fd6d9d29825cf24c2b68da1e27ec9177640def00
Author: bluhm <bluhm@openbsd.org>
Date:   Fri Sep 27 10:20:08 2013 +0000

    IPv6 atomic fragments must not go the reassembly queue, but be
    processed immediately.  Let pf step over an atomic fragment header
    and handle the packet like an unfragmented.
    OK mikeb@

 sys/net/pf.c | 14 +++++++++-----
 1 file changed, 9 insertions(+), 5 deletions(-)

commit b17e7ce0c235877198555993c1bf53a07424e81a
Author: haesbaert <haesbaert@openbsd.org>
Date:   Fri Aug 30 18:23:17 2013 +0000

    Missing splx on return path.
    
    ok bluhm@

 sys/net/pf_if.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit c5611d5b704bb6deba60968c35a4e0f91f105a53
Author: henning <henning@openbsd.org>
Date:   Mon Aug 19 09:16:25 2013 +0000

    in pf_test_rule, when dealing with a match rule, obey the match rule's quick
    flag to decide wether to abort ruleset eval instead of the last matching rule's
    one. makes "match quick" abort ruleset evaluation with the current block/pass
    state. from Maxim Khitrov <max at mxcrypt.com>, ok bluhm mikeb

 sys/net/pf.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit ddb7828bc6708358e6c08caaf09e3524e8cab7b4
Author: dlg <dlg@openbsd.org>
Date:   Wed Aug 7 05:39:05 2013 +0000

    states learnt via pfsync from a peer with the same ruleset checksum were
    not getting assigned to rules like they should cos pfsync_in_upd() wasnt
    passing the PFSYNC_SI_CKSUM flag along to pfsync_state_import.
    
    found and fixed by pedro

 sys/net/if_pfsync.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 4697a2062197126e131347eaaf675e64406a4dde
Author: bluhm <bluhm@openbsd.org>
Date:   Tue Jul 23 22:47:10 2013 +0000

    Do not reset the fragment timeout each time a fragment arrives.
    Start the expire counter when the queue is created by the first
    fragment and drop it if the packet could not be reassembled within
    60 seconds.
    Reported by Antonios Atlasis; OK henning@ deraadt@

 sys/net/pf_norm.c | 4 +---
 sys/net/pfvar.h   | 4 ++--
 2 files changed, 3 insertions(+), 5 deletions(-)

commit 401a01c8c3ecaf4887182520c609b18d7345ded4
Author: blambert <blambert@openbsd.org>
Date:   Fri Jul 5 13:07:57 2013 +0000

    Collect and display 'match' counters for pf tables.
    
    While here, fix pf table displays to fit within 80 chars.
    
    Manpage input jmc@
    
    ok henning@ reyk@

 sys/net/pf.c       | 18 +++++-------------
 sys/net/pf_table.c | 37 +++++++++++++++++++++++++++----------
 sys/net/pfvar.h    |  8 ++++----
 3 files changed, 36 insertions(+), 27 deletions(-)

commit 26ca2c157ec172752c43f5c4cdb16ef388b71d8f
Author: guenther <guenther@openbsd.org>
Date:   Thu Jul 4 00:18:59 2013 +0000

    Re-commit: use time_t for storing time_t values.  This is an ABI
    change for pf, but that's fine at this time.  You'll need to rebuild
    pf userland after updating your kernel.
    
    change to 'since' member ok henning@
    rest ok henning@ deraadt@

 sys/net/pf_table.c | 43 ++++++++++++++++++++++---------------------
 sys/net/pfvar.h    | 14 +++++++-------
 2 files changed, 29 insertions(+), 28 deletions(-)

commit 23397cc4ea8908e2cf9eeb9581041fb5b5327821
Author: guenther <guenther@openbsd.org>
Date:   Tue Jul 2 05:57:37 2013 +0000

    Revert previous: sizeof(time_t) != sizeof(long) on LP64, so there was
    an ABI change involved.

 sys/net/pf_table.c | 43 +++++++++++++++++++++----------------------
 sys/net/pfvar.h    | 12 ++++++------
 2 files changed, 27 insertions(+), 28 deletions(-)

commit 6c1b69a0fffb2b998dfb585c7f28da28bcea280a
Author: guenther <guenther@openbsd.org>
Date:   Tue Jul 2 01:42:01 2013 +0000

    Use time_t for storing time_t values.  No change to the underlying
    type**, so no ABI change.
    
    ok henning@ deraadt@
    
    ** ...yet

 sys/net/pf_table.c | 43 ++++++++++++++++++++++---------------------
 sys/net/pfvar.h    | 12 ++++++------
 2 files changed, 28 insertions(+), 27 deletions(-)

commit e3f16dca2ad10445fd00e35f49a0b79c20ccb984
Author: henning <henning@openbsd.org>
Date:   Wed Jun 26 09:12:39 2013 +0000

    put the cksum diff back, of course with the bug fixed where we could
    under some circumstances repair broken checksums on the way.
    ok ryan naddy mikeb
    .
    redo most of the protocol (tcp/udp/...) checksum handling
    -assume we have hardware checksum offloading. stop mucking with the
     checksum in most of the stack
    -stop checksum mucking in pf, just set a "needs checksumming" flag if needed
    -in all output pathes, very late, if we figure out the outbound interface
     doesn't have hw cksum offloading, do the cksum in software. this especially
     makes the bridge path behave like a regular output path
    -little special casing for bridge still required until the broadcast path
     loses its disgusting shortcut hacks, but at least it's in one place now
     and not all over the stack
    in6_proto_cksum_out mostly written by krw@
    started at k2k11 in iceland more than 1.5 years ago - yes it took that
    long, this stuff is everything but easy.
    this happens to fix the infamous pf rdr bug that made us turn off proto
    cksum offloading on almost all interface drivers.

 sys/net/if_pflog.c |   4 +-
 sys/net/pf.c       | 615 ++++++++++++++++++++---------------------------------
 sys/net/pf_norm.c  |  32 +--
 sys/net/pfvar.h    |  17 +-
 4 files changed, 262 insertions(+), 406 deletions(-)

commit 96fa270faa788bddfaea05d6f89600189c06a533
Author: blambert <blambert@openbsd.org>
Date:   Wed Jun 26 07:53:59 2013 +0000

    Rudimentary counter fix for tables used in match rules.
    
    Fixes an issue seen by reyk@
    
    ok henning@ reyk@

 sys/net/pf.c | 19 ++++++++++++++++++-
 1 file changed, 18 insertions(+), 1 deletion(-)

commit 5bdd122682cf5b5891e1fc27dd33226d19f10fa5
Author: mpi <mpi@openbsd.org>
Date:   Tue Jun 25 09:16:34 2013 +0000

    Protect various driver descriptors by _KERNEL to stop exposing to much
    stuff to userland, especially the "struct ifnet".
    
    ok sthen@, henning@, uebayasi@

 sys/net/if_pflog.h | 15 ++++++++-------
 1 file changed, 8 insertions(+), 7 deletions(-)

commit 919823cce955e91b8d3e0ad59d4273f5772f0acb
Author: mpi <mpi@openbsd.org>
Date:   Thu Jun 20 12:03:40 2013 +0000

    Revert previous and unbreak asr, the new include should be protected.
    
    Reported by naddy@

 sys/net/if_pfsync.c | 10 +++++-----
 sys/net/pf_if.c     |  6 +++---
 2 files changed, 8 insertions(+), 8 deletions(-)

commit ef3d57c97ecf058ee78ec78c4c1c29c2e9a33bc7
Author: mpi <mpi@openbsd.org>
Date:   Thu Jun 20 09:38:24 2013 +0000

    Allocate the various hook head descriptors as part of the ifnet
    structure rather than doing various M_WAITOK allocations during
    the *attach() functions, we always rely on them anyway.
    
    ok mikeb@, uebayasi@

 sys/net/if_pfsync.c | 10 +++++-----
 sys/net/pf_if.c     |  6 +++---
 2 files changed, 8 insertions(+), 8 deletions(-)

commit a9e7ebb0d570d112f81d76d2ee0d24eb7186d728
Author: bluhm <bluhm@openbsd.org>
Date:   Mon Jun 17 19:50:06 2013 +0000

    Before pulling the TCP options from the mbuf onto the stack, do an
    additional length check in pf_modulate_sack() and pf_normalize_mss().
    Overflow cannot happen due to the restricted values in the length
    calculation.  As this is not obvious, be better safe than sorry.
    OK henning@

 sys/net/pf.c      | 6 +++---
 sys/net/pf_norm.c | 6 +++---
 2 files changed, 6 insertions(+), 6 deletions(-)

commit 644c98137c6caf7eb4f685a08d61ae5d434b0616
Author: henning <henning@openbsd.org>
Date:   Wed Jun 5 00:56:35 2013 +0000

    after the pf_test_state folding, in pf_test in the proto switch, the
    udp and the default case are 100% identical, tcp does a little more, but
    that is easier to add w/ two "if tcp" blocks in the default case, so the
    udp and tcp cases die. ok bluhm

 sys/net/pf.c | 58 +++++++++++++++++-----------------------------------------
 1 file changed, 17 insertions(+), 41 deletions(-)

commit f6cfeb8e09e40b291d040f33ffb694cdb2f0063f
Author: henning <henning@openbsd.org>
Date:   Tue Jun 4 19:07:59 2013 +0000

    fold pf_test_state_{tcp,udp,other} into one pf_test_state.
    the _icmp variant stays because it is completely different.
    factor out the synproxy code into a new pf_synproxy() for readability.
    pf_setup_pdesc sets us up with access to ports, cksum etc in a protocol
    independent matter, so we don't need many protocol switches here.
    tcp and udp were almost identical, the _other case changes significantly -
    not too unlikely this fixes a subtle bug or two in that case.
    ok ryan benno bluhm mikeb

 sys/net/pf.c | 347 +++++++++++++++++------------------------------------------
 1 file changed, 101 insertions(+), 246 deletions(-)

commit 14255d4d8762c5a4d6ee3f1765f33cdcf55becdf
Author: henning <henning@openbsd.org>
Date:   Tue Jun 4 19:03:11 2013 +0000

    add a pointer to the protocol checksum header field to pf_pdesc and set
    it up in pf_setup_pdesc(). ok ryan benno mikeb bluhm

 sys/net/pf.c    | 5 ++++-
 sys/net/pfvar.h | 3 ++-
 2 files changed, 6 insertions(+), 2 deletions(-)

commit 17f48161654a0ffe95896c5752fa5d784d6a9720
Author: henning <henning@openbsd.org>
Date:   Tue Jun 4 18:58:28 2013 +0000

    make pf_change_ap() usable without a port. if the port pointer is NULL,
    just return after being done with the address. ok bluhm ryan mikeb

 sys/net/pf.c | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

commit 140ea8b678562bd0a05800bebaedf6617fbf381a
Author: bluhm <bluhm@openbsd.org>
Date:   Mon Jun 3 16:57:05 2013 +0000

    Link pf states and socket inpcbs together more tightly.  The linking
    was only done when a packet traveled up the stack from pf to
    tcp_input().  Now also link the state and inpcb when the packet is
    going down from tcp_output() to pf.  As a consequence, divert-reply
    states where the initial SYN does not get an answer, can be handled
    more correctly.
    
    This change is part of a larger diff that has been backed out in
    2011.  Bring the feature back in small steps to see when bad things
    start to happen.
    
    OK henning deraadt

 sys/net/pf.c | 18 ++++++++++++++++--
 1 file changed, 16 insertions(+), 2 deletions(-)

commit 76c963deae01c67e1d8da62d93b107a0e7bde65a
Author: bluhm <bluhm@openbsd.org>
Date:   Mon Jun 3 16:32:00 2013 +0000

    Update o[sd]port whenever n[sd]port is changed.  This fixes a
    regression introduced with pf.c 1.827 and allows us to create icmp
    states again.
    OK henning@

 sys/net/pf.c | 18 +++++++++---------
 1 file changed, 9 insertions(+), 9 deletions(-)

commit effb23002145ea77b0ba98f939b469392cae304c
Author: henning <henning@openbsd.org>
Date:   Mon Jun 3 15:00:00 2013 +0000

    put back the match member to the anchor stack struct - userland (pfctl)
    uses it. that is so incedibly wrong...
    sorry for the breakage, folks. found by tedu, SMSing me out of my breakfast
    bob

 sys/net/pfvar.h | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit 32a028bff729103294a84ce3b45b7537e40c5190
Author: henning <henning@openbsd.org>
Date:   Mon Jun 3 01:41:04 2013 +0000

    fix anchor quick with nested anchors. we lost the quick flag as soon as
    we stepped into a child anchor.
    simplify the logic, get rid of the match flag in the anchor stack, just
    use the match variable we already had (and used in a boolean style) to track
    the nest level we had a match at. when a child anchor had a match we also
    have a match in the current anchor, so update the match level accordingly,
    and thus correctly honour the quick flag.
    reported by, along with the right idea on how to fix this, by Sean Gallagher
    \sean at teletech.com.au/, who also helped testing the fix. ok ryan & benno

 sys/net/pf.c    | 27 +++++++++++----------------
 sys/net/pfvar.h |  3 +--
 2 files changed, 12 insertions(+), 18 deletions(-)

commit f82a6f97e0e4cb1183ef11f1870cf5724cea8d5e
Author: henning <henning@openbsd.org>
Date:   Sun Jun 2 23:06:36 2013 +0000

    set up osport and odport (original src/dst port) in pf_setup_pdesc instead
    of late in pf_test_rule - need that for upcoming changes. ok ryan

 sys/net/pf.c | 9 +++------
 1 file changed, 3 insertions(+), 6 deletions(-)

commit 1bafeeb25a44e47caab67e9d12aad425abdef6f4
Author: henning <henning@openbsd.org>
Date:   Sat Jun 1 21:18:02 2013 +0000

    pf_step_{into,out_of}_anchor() are only ever called from pf_test_rule()
    these days, so:
    -move the prototypes from pfvar.h to pf.c
    -remove the now useless null point checks for *match, it is always provided
    ok ryan

 sys/net/pf.c    | 15 +++++++++------
 sys/net/pfvar.h |  8 +-------
 2 files changed, 10 insertions(+), 13 deletions(-)

commit 10234500e8d0c2a193a7a8343ac7d87a5c576fba
Author: mikeb <mikeb@openbsd.org>
Date:   Tue May 14 23:59:26 2013 +0000

    Pass the correct pointer to pool_put if pf_state_key_attach fails.
    Thanks to Brian Poole <pooleb @ gmail ! com> for noticing this.

 sys/net/pf.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit c701baa71b20f9863390b44bdfd831e2992988b7
Author: mikeb <mikeb@openbsd.org>
Date:   Fri May 10 11:36:24 2013 +0000

    Since pf_state_key_attach can decide to free the provided state
    key we need to sync our state key pointers with whatever values
    the function will pick.  Not doing so will produce wrong results
    if address translation must be applied afterwards and we happen
    to have a state key collision.  Then pf_translate will follow an
    old pointer and punch in garbage addresses into the packet.
    
    Noticed, initial patch and tests by Vitaly Sinilin <vs @ kp4 ! ru>
    ok tedu, henning

 sys/net/if_pfsync.c |  4 ++--
 sys/net/pf.c        | 19 +++++++++++--------
 sys/net/pfvar.h     |  6 +++---
 3 files changed, 16 insertions(+), 13 deletions(-)

commit 6e55bf81ab148b46d4e3c3c61b2d8a200ba01117
Author: florian <florian@openbsd.org>
Date:   Fri May 3 15:33:47 2013 +0000

    Export ingress/egress interface index in pflow(4).
    Report that this is needed for some netflow collector and tests by
    Chris Ivancic & Colin Ligertwood.
    
    OK mikeb@, benno@

 sys/net/pf.c    | 8 +++++++-
 sys/net/pfvar.h | 4 +++-
 2 files changed, 10 insertions(+), 2 deletions(-)

commit 96c820636b53d5eb761dc8974342357acdf1b321
Author: mpi <mpi@openbsd.org>
Date:   Wed Apr 10 08:50:59 2013 +0000

    Remove various external variable declaration from sources files and
    move them to the corresponding header with an appropriate comment if
    necessary.
    
    ok guenther@

 sys/net/pf.c | 6 ++----
 1 file changed, 2 insertions(+), 4 deletions(-)

commit 78c67333894b87bcd2d91b06fc561f94bd46d980
Author: bluhm <bluhm@openbsd.org>
Date:   Fri Mar 29 13:16:14 2013 +0000

    Declare struct pf_state_key in the mbuf and in_pcb header files to
    avoid ugly casts.
    OK krw@ tedu@

 sys/net/pf.c | 9 ++++-----
 1 file changed, 4 insertions(+), 5 deletions(-)

commit 1a83ae4238fb52a588d296f62e049544e09809cf
Author: tedu <tedu@openbsd.org>
Date:   Thu Mar 28 16:45:16 2013 +0000

    no need for a lot of code to include proc.h

 sys/net/if_pfsync.c | 3 +--
 sys/net/pf_ioctl.c  | 3 +--
 sys/net/pf_lb.c     | 3 +--
 3 files changed, 3 insertions(+), 6 deletions(-)

commit 61e99e92ebfd22588ddf41668337b1842a7bf20e
Author: bluhm <bluhm@openbsd.org>
Date:   Thu Mar 28 00:32:11 2013 +0000

    Unfortunately the satosin, sintosa, ifatoia, satosin6, sin6tosa,
    ifatoia6 macros do not check the source type.  They just cast
    anything.  Remove needless casts and do not use those macros if the
    source type does not match.  Remove duplicate defines.
    No binary change.  OK kettenis@ krw@

 sys/net/pf.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

commit a67c559c2f12ad6fe0a483084e3d099794245e58
Author: mcbride <mcbride@openbsd.org>
Date:   Wed Mar 27 13:32:28 2013 +0000

    Use the correct src/dst ports depending on direction (one of src or dst was
    wrong in each direction).
    
    Report and fix from UMEZAWA Takeshi <umezawa@iij.ad.jp>

 sys/net/pf_ioctl.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit dabd68ec8baf6a97d5368a86ec32750b3a57490b
Author: mpi <mpi@openbsd.org>
Date:   Tue Mar 26 13:19:25 2013 +0000

    Remove various read-only *maxlen variables and use IFQ_MAXLEN directly.
    
    ok beck@, mikeb@

 sys/net/if_pflog.c  | 4 ++--
 sys/net/if_pfsync.c | 4 ++--
 2 files changed, 4 insertions(+), 4 deletions(-)

commit 70ff79155f263d4ddf9be06e4a40825e6ff6d6cd
Author: sthen <sthen@openbsd.org>
Date:   Mon Mar 11 19:48:40 2013 +0000

    Add a separate "translation" counter and use this rather than "memory"
    when address translation fails due to no free ports in the configured range.
    ok mikeb@

 sys/net/pf.c    | 6 +++---
 sys/net/pfvar.h | 6 ++++--
 2 files changed, 7 insertions(+), 5 deletions(-)

commit f165d899710fd85bad73fb7858f749eeffe5eac5
Author: mikeb <mikeb@openbsd.org>
Date:   Tue Feb 26 14:56:05 2013 +0000

    Don't try to purge one-time rules from the main ruleset.
    Reported by Wesley M.A. on misc@,  ok deraadt

 sys/net/pf_ioctl.c | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

commit 411745789847ab6ca147cfc671612b43854b9844
Author: mikeb <mikeb@openbsd.org>
Date:   Mon Feb 18 14:48:13 2013 +0000

    DIOCRCLRASTATS ioctl wasn't specifying a timestamp when cleared
    table statistics so it appeared later on as the Epoch.  Noticed
    by [the] Shining on bugs@.  Thanks!
    
    ok sthen, waver from deraadt

 sys/net/pf_table.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 8911d0abb6d0d3b3a76fcf69317fdd82a7ba4251
Author: bluhm <bluhm@openbsd.org>
Date:   Sun Jan 20 22:51:16 2013 +0000

    Make pf TCP sequence number tracking less strict by one octet for
    FIN packets.  The data of a TCP packet must fit into the announced
    window, but this is not required for the sequence number of the
    FIN.  A packet with the FIN bit set and containing data that fits
    exactly into the announced window was blocked.  Our stack generates
    such packets when the receive buffer size is set to 1024.  Now pf
    uses only the data lenght for window comparison.
    OK henning@

 sys/net/pf.c | 15 +++++++++------
 1 file changed, 9 insertions(+), 6 deletions(-)

commit f8db2aa21459fb234673186b65bf4c7c9bcad7d3
Author: henning <henning@openbsd.org>
Date:   Thu Jan 17 00:48:04 2013 +0000

    first or second coming, commie or not commie, one m in coming is sufficient
    ok claudio

 sys/net/pfvar.h | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 8009377efd849427424633045c6ab2741bf1e70b
Author: markus <markus@openbsd.org>
Date:   Wed Jan 16 09:18:34 2013 +0000

    Unbreak the negation toggle code when re-loading pf tables. Otherwise
    negating existing entries on re-load does not work (e.g. changing
    192.168.6.0/24 to !192.168.6.0/24 in table was ignoed).
    ok mikeb@, henning@ mpf@, bluhm@,

 sys/net/pf_table.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 3f915362174c8ce20f77d1b10e79285a75c46744
Author: markus <markus@openbsd.org>
Date:   Sat Dec 29 14:59:52 2012 +0000

    make sure the entry from tree_src_tracking is still in the pool;
    fixes nat with sticky address and ip address change on pppoe(4) for example;
    ok henning@, zinke@; mikeb@

 sys/net/pf_lb.c | 101 +++++++++++++++++++++++++++++++++++++++++++-------------
 1 file changed, 78 insertions(+), 23 deletions(-)

commit 60152e752e0c6baac9d7b7130ada301fc8043c9c
Author: markus <markus@openbsd.org>
Date:   Sat Dec 29 14:54:45 2012 +0000

    reset the counter in case its current value has been removed
    from the pool (e.g. ifconfig em0 1.2.3.4 -alias)
    ok henning@, mikeb@

 sys/net/pf_lb.c | 21 ++++++++++++++++-----
 1 file changed, 16 insertions(+), 5 deletions(-)

commit 2b27abb2788e691bba44696bea82862cdaeb491a
Author: markus <markus@openbsd.org>
Date:   Sat Dec 29 14:53:05 2012 +0000

    pass pf_pool directly to pfr_pool_get(); simplifies the API;
    ok henning@, zinke@, mikeb@

 sys/net/pf_lb.c    | 78 ++++++++++--------------------------------------------
 sys/net/pf_table.c | 68 +++++++++++++++++++++++++++++------------------
 sys/net/pfvar.h    |  8 +++---
 3 files changed, 59 insertions(+), 95 deletions(-)

commit 0e41552f15443759aac5d94c4a67ad2fb0d8a7fd
Author: gsoares <gsoares@openbsd.org>
Date:   Fri Dec 28 17:52:06 2012 +0000

    change the malloc(9) flags from M_DONTWAIT to M_NOWAIT; OK millert@

 sys/net/pf_if.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 0f91ce4066d269279a85fd431ac389496f70fbc9
Author: mikeb <mikeb@openbsd.org>
Date:   Fri Nov 23 18:35:25 2012 +0000

    make sure to always pass an array of struct pf_src_node pointers to
    the pf_map_addr.  doing otherwise leads to the stack corruption.
    bug was reported and fix tested by arjan schrijver, thanks!
    ok jsing, henning, florian who has also found the same bug in
    pf_route and pf_route6 functions.

 sys/net/pf.c | 21 +++++++++++++--------
 1 file changed, 13 insertions(+), 8 deletions(-)

commit 8d0493f38e20ad3c0b3c67dc2eb17d33b5b00c9f
Author: deraadt <deraadt@openbsd.org>
Date:   Thu Nov 15 17:44:10 2012 +0000

    this code is shared into userland, and there it should not pull
    in sys/mbuf.h
    ok claudio

 sys/net/pf_ruleset.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit c339ce32bc331cd6e04c41bd4aea3ac7b6ccd499
Author: henning <henning@openbsd.org>
Date:   Tue Nov 6 12:32:41 2012 +0000

    backout csum diff for the moment, requested by theo

 sys/net/if_pflog.c |   4 +-
 sys/net/pf.c       | 501 +++++++++++++++++++++++++++++++++++++----------------
 sys/net/pf_norm.c  |  22 ++-
 sys/net/pfvar.h    |  10 +-
 4 files changed, 372 insertions(+), 165 deletions(-)

commit b69257a87b494135b0c3688b3d232c2aaf22db1b
Author: henning <henning@openbsd.org>
Date:   Thu Nov 1 07:55:55 2012 +0000

    redo most of the protocol (tcp/udp/...) checksum handling
    -assume we have hardware checksum offloading. stop mucking with the
     checksum in most of the stack
    -stop checksum mucking in pf, just set a "needs checksumming" flag if needed
    -in all output pathes, very late, if we figure out the outbound interface
     doesn't have hw cksum offloading, do the cksum in software. this especially
     makes the bridge path behave like a regular output path
    -little special casing for bridge still required until the broadcast path
     loses its disgusting shortcut hacks, but at least it's in one place now
     and not all over the stack
    in6_proto_cksum_out mostly written by krw@
    started at k2k11 in iceland more than 1.5 years ago - yes it took that
    long, this stuff is everything but easy.
    this happens to fix the infamous pf rdr bug that made us turn off proto
    cksum offloading on almost all interface drivers.
    ok camield sthen claudio, testing by many, thanks!

 sys/net/if_pflog.c |   4 +-
 sys/net/pf.c       | 501 ++++++++++++++++-------------------------------------
 sys/net/pf_norm.c  |  22 +--
 sys/net/pfvar.h    |  10 +-
 4 files changed, 165 insertions(+), 372 deletions(-)

commit 5e6d0011f65d0cf32371f6153de1dca7799b156f
Author: florian <florian@openbsd.org>
Date:   Tue Oct 30 12:09:05 2012 +0000

    Use time_uptime for expiration values as time_second can be skewed at
    runtime while time_uptime is monotonic. Prevent underflows in
    pfsync(4) and pflow(4) by using signed variables.  pfsync(4) problem
    pointed out by camield.
    
    Diff originally by dlg, frag and pflow bits by me.
    
    feedback dlg
    man page tweak jmc
    
    Various versions of the pflow bits tested by Hrvoje Popovski
    (hrvoje AT srce DOT hr), thanks!
    
    ok benno, henning, dlg

 sys/net/if_pfsync.c | 10 +++++-----
 sys/net/pf.c        | 53 +++++++++++++++++++++++++++++------------------------
 sys/net/pf_ioctl.c  |  6 +++---
 sys/net/pf_norm.c   | 10 +++++-----
 sys/net/pfvar.h     | 15 +++++++--------
 5 files changed, 49 insertions(+), 45 deletions(-)

commit 88149a5db4ddb033c5a5a49d1b3fa5875e1f0042
Author: benno <benno@openbsd.org>
Date:   Sun Oct 21 13:06:02 2012 +0000

    Add the IP_DIVERTFL socket option on divert(4) sockets to control
    which packets (as in direction) of the traffic will be diverted
    through the divert socket.
    ok claudio@, henning@

 sys/net/pf.c | 9 +++++----
 1 file changed, 5 insertions(+), 4 deletions(-)

commit 41ca043403f3d89b6ed686390bd88abb6c12c7cc
Author: markus <markus@openbsd.org>
Date:   Tue Oct 9 11:16:28 2012 +0000

    simplify hook_disestablish() handling by always resetting the hook when
    the syncdev gets set. this also makes sure we no longer leak hooks on
    repeatet 'ifconfig syncdev' invocations.
    ok mikeb@

 sys/net/if_pfsync.c | 27 ++++++++-------------------
 1 file changed, 8 insertions(+), 19 deletions(-)

commit 4b27cf5c9ad432d39a7ffff20e714f2ec19625ef
Author: markus <markus@openbsd.org>
Date:   Mon Oct 8 18:33:23 2012 +0000

    make sure we don't call hook_disestablish() twice e.g. ifconfig -syncdev
    followed by ifconfig destroy; ok mikeb

 sys/net/if_pfsync.c | 18 +++++++++++++-----
 1 file changed, 13 insertions(+), 5 deletions(-)

commit 560d7a29d176f6a3c49c9aba7ab7a1a7a51c938a
Author: camield <camield@openbsd.org>
Date:   Mon Oct 8 17:41:55 2012 +0000

    Forward declare struct m_tag in netinet/ip_ipsp.h so we don't need to
    include sys/mbuf.h in net/pfvar.h.
    
    Flagged by and ok guenther@

 sys/net/pfvar.h | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

commit ddd231671eeab03939da5f0310b544e91d12ec45
Author: camield <camield@openbsd.org>
Date:   Fri Oct 5 12:32:27 2012 +0000

    include sys/mbuf.h

 sys/net/pfvar.h | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit afba1a08eea30d05d541c5a37b4b3d14537a4c50
Author: mikeb <mikeb@openbsd.org>
Date:   Thu Sep 20 17:37:47 2012 +0000

    pfsync_cancel_full_update needs to restore carp demotions since
    it's cancelling the bulk update and can leave the machine in a
    demoted state.
    
    bug was noticed by benno, who was kind enough to verify that the
    fix is working fine.  ok mpf, benno

 sys/net/if_pfsync.c | 24 ++++++++++++++----------
 1 file changed, 14 insertions(+), 10 deletions(-)

commit fb4f30fce9bdd775265a7605922eeb0019664e82
Author: blambert <blambert@openbsd.org>
Date:   Thu Sep 20 10:25:03 2012 +0000

    spltdb() was really just #define'd to be splsoftnet(); replace the former
    with the latter
    
    no change in md5 checksum of generated files
    
    ok claudio@ henning@

 sys/net/if_pfsync.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 5ed988c1ddb0274e1874b51f2250696d39724985
Author: camield <camield@openbsd.org>
Date:   Thu Sep 20 09:43:49 2012 +0000

    Lower pf frags limit to not risk running out of mbuf clusters
    when dealing with lots of IP fragments.
    
    This sets the default to 25% of the mbuf cluster maximum (hint
    from beck).  And the example in the manpage is sane now.
    
    ok mikeb henning beck deraadt

 sys/net/pf_ioctl.c | 8 +++++++-
 sys/net/pfvar.h    | 9 ++++-----
 2 files changed, 11 insertions(+), 6 deletions(-)

commit d120651bd995459fe1d18c9ce039a086931f39e1
Author: mikeb <mikeb@openbsd.org>
Date:   Wed Sep 19 13:47:17 2012 +0000

    update the tdb replay counter endian conversion to 64 bits;
    ok camield mpf

 sys/net/if_pfsync.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit f3b9ef5adaf46eed6d18616c7ff5273cd069471c
Author: blambert <blambert@openbsd.org>
Date:   Wed Sep 19 12:35:07 2012 +0000

    More radix internals pushdown; place rn_mpath_next, which accepts and
    returns radix_node pointers, inside a new rt_mpath_next, which accepts
    and returns rtentry pointers, and start using that instead.
    
    ok claudio@

 sys/net/pf.c | 10 ++++------
 1 file changed, 4 insertions(+), 6 deletions(-)

commit 08263cb1b79db2a3882e28adb4bf1ab2f466a144
Author: henning <henning@openbsd.org>
Date:   Tue Sep 18 10:11:52 2012 +0000

    prio 0 is valid, therefore, I chose an "impossible" value for prio meaning
    "not set" and used a PF_PRIO_NOTSET define for it. now that means that
    everything that creates a struct pf_rule doesn't get away with bzero'ing it,
    which turned out to be not so nice. so get rid of PF_PRIO_NOTSET, instead,
    make a rule+state flag PFSTATE_SETPRIO which indicates wether the prio
    should be set. ok benno claudio mikeb

 sys/net/pf.c       | 23 ++++++++++-------------
 sys/net/pf_ioctl.c |  9 ++++-----
 sys/net/pfvar.h    |  5 +++--
 3 files changed, 17 insertions(+), 20 deletions(-)

commit 538596657140c9166e7df97fd176152d317155dc
Author: mikeb <mikeb@openbsd.org>
Date:   Thu Aug 30 11:43:36 2012 +0000

    Sloppy state tracking renders ICMP direction check useless
    and harmful as we might see only half of the connection in
    the asymmetric setups but ignore the state match.  The bug
    was reported and fix was verified by Insan Praja <insan ()
    ims-solusi ! com>.  Thanks!  OK mcbride, henning

 sys/net/pf.c | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

commit e9087f97e106411832be332935215859d9758b03
Author: mikeb <mikeb@openbsd.org>
Date:   Thu Jul 26 12:25:31 2012 +0000

    rename all_state_flags to state_flags to finish the transition
    to the 16 bit flags;  reminded by claudio, ok henning

 sys/net/if_pfsync.c | 5 ++---
 sys/net/pf.c        | 6 ++----
 sys/net/pfvar.h     | 6 +++---
 3 files changed, 7 insertions(+), 10 deletions(-)

commit 15e15606eb9aa47cd46db94568f43ad4ac62d43c
Author: henning <henning@openbsd.org>
Date:   Fri Jul 13 11:14:04 2012 +0000

    remove confuzzling comment
    :dlg: the xxx can go
    ...and this time commit to the real repo and not the one on my laptop

 sys/net/pfvar.h | 5 +----
 1 file changed, 1 insertion(+), 4 deletions(-)

commit 3d0247e0e830807b93929e294fbfab1232f59cfc
Author: bluhm <bluhm@openbsd.org>
Date:   Tue Jul 10 17:33:48 2012 +0000

    With address family translation, the ip length of the quoted ip
    packet within the icmp error packet was wrong.  Fix this by using
    the pd2.tot_len of the inner packet and substract the old header's
    length.
    OK mikeb@ henning@

 sys/net/pf.c | 11 ++++++-----
 1 file changed, 6 insertions(+), 5 deletions(-)

commit 643014734128bf599247a8453cc8eb8839a0361b
Author: henning <henning@openbsd.org>
Date:   Tue Jul 10 09:38:22 2012 +0000

    define a PFSTATE_SCRUBMASK. relying on numeric order of flags is stupid
    and bound to break sooner or later.

 sys/net/pfvar.h | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit d387fefa36ce98a143b89539b0b6064585cd3e12
Author: zinke <zinke@openbsd.org>
Date:   Mon Jul 9 15:20:57 2012 +0000

    Enable support for the 'weight' keyword in the 'least-states'
    load balancing case, this allows Weighted Least States (WLS).
    Everything prepared on c2k11 with help from mcbride@.
    
    This finally makes PF ready for the cloud.
    
    ok henning@ mikeb@ pyr@

 sys/net/pf_lb.c | 34 ++++++++++++++++++++++++++++------
 1 file changed, 28 insertions(+), 6 deletions(-)

commit ab0a082ea6cc3719bc897ff6d06efa7c3826eda5
Author: henning <henning@openbsd.org>
Date:   Sun Jul 8 07:58:09 2012 +0000

    there was a limit on the number of pflog interfaces - 16. remove that.
    mostly by dynamically allocating pflogifs instead of making that a static
    array. ok claudio zinke

 sys/net/if_pflog.c | 55 +++++++++++++++++++++++++++++++++++++++++++-----------
 sys/net/if_pflog.h |  4 +---
 sys/net/pf_ioctl.c |  4 +---
 3 files changed, 46 insertions(+), 17 deletions(-)

commit a5bef0578623993c2c558fbcae838ce8213e82d8
Author: henning <henning@openbsd.org>
Date:   Sat Jul 7 16:24:32 2012 +0000

    rename prio in struct pf_rule and related structs to set_prio so it is
    utterly clear this is not a filter criteria but a packet modification thing.
    also preparation for upcoming changes, including one to unscrew this mess
    (I should not have to touch half the tree for this - ifixitlater)
    not user visible, ok gcc

 sys/net/pf.c       | 40 ++++++++++++++++++++--------------------
 sys/net/pf_ioctl.c | 13 +++++++------
 sys/net/pfvar.h    |  8 ++++----
 3 files changed, 31 insertions(+), 30 deletions(-)

commit c495b7d2c66ba230fdbd7c70a3f7d42f5776bf61
Author: henning <henning@openbsd.org>
Date:   Sat Jul 7 15:20:14 2012 +0000

    restore DIOCKILLSTATE semantics to what they were before the NAT rewrite.
    when you kill states by IP, it is not all that clear which IP we're talking
    about - before or after rewriting?
    the old semantics were to always look at the "original" IP, i. e. before
    rewriting. ever since the NAT rewrite we were unconditionally looking
    at the wire side state key, which is the original address for PF_IN states,
    but not for PF_OUT. So look at the SK_STACK state key in the PF_OUT case.
    should fix "authpf doesn't remove NAT states" seen on misc a while ago
    ok & testing & half of the analysis bob (he sez beck)

 sys/net/pf_ioctl.c | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

commit 36582347dafabee0bf9e918c2e41c54c394be494
Author: mikeb <mikeb@openbsd.org>
Date:   Sat Jun 30 00:16:15 2012 +0000

    Fix a number of problems introduced by the link state handling commit:
    
    1) demote by 32 on the first bulk update to prevent failovers w/o having
       a full state table;
    
    2) don't do any demotion adjustments on the link up event and undemote
       when bulk update finishes (or times out) preventing a race between
       nodes getting a link state update asynchronously.
    
    With phessler; tested by phessler and Kapetanakis Giannis.  Thanks!
    
    Looked through by henning and dlg.  Now the correct version.

 sys/net/if_pfsync.c | 82 +++++++++++++++++++++++++++++++++++++++++------------
 1 file changed, 64 insertions(+), 18 deletions(-)

commit 8a5273e7fbccf079323d6793aa48aaa82eec7752
Author: mikeb <mikeb@openbsd.org>
Date:   Sat Jun 30 00:14:23 2012 +0000

    backout rev1.185 as it's not what i have intended to commit

 sys/net/if_pfsync.c | 25 +++++++------------------
 1 file changed, 7 insertions(+), 18 deletions(-)

commit b277cddfec92395be1d2758143253ca0bf9401ac
Author: mikeb <mikeb@openbsd.org>
Date:   Fri Jun 29 15:12:21 2012 +0000

    add ESN-related bits missed in the previous commit

 sys/net/if_pfsync.c | 10 ++++++----
 sys/net/if_pfsync.h | 12 +++++++-----
 2 files changed, 13 insertions(+), 9 deletions(-)

commit 6b4cbaf181c6b60701d9fb888fd0e7a4333eecbd
Author: mikeb <mikeb@openbsd.org>
Date:   Fri Jun 29 14:48:04 2012 +0000

    Add support for the Extended (64-bit) Sequence Number as defined
    in RFC4302 and RFC4303.  Right now only software crypto engine is
    capable of doing it.
    
    Replay check was rewritten to implement algorithm described in the
    Appendix A of RFC4303 and the window size was increased to 64.
    
    Tested against OpenBSD, Linux (strongswan) and Windows.
    
    No objection from the usual suspects.

 sys/net/if_pfsync.h | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit e0261a74cda6422e4634ab4273c25b4217e96c38
Author: mikeb <mikeb@openbsd.org>
Date:   Thu Jun 28 13:59:21 2012 +0000

    Fix a number of problems introduced by the link state handling commit:
    
    1) demote by 32 on the first bulk update to prevent failovers w/o having
       a full state table;
    
    2) don't do any demotion adjustments on the link up event and undemote
       when bulk update finishes (or times out) preventing a race between
       nodes getting a link state update asynchronously.
    
    With phessler; tested by phessler and Kapetanakis Giannis.  Thanks!
    
    Looked through by henning and dlg.

 sys/net/if_pfsync.c | 25 ++++++++++++++++++-------
 1 file changed, 18 insertions(+), 7 deletions(-)

commit 04cb8426ac763a4d2411961b74555e1ecf1ec581
Author: mikeb <mikeb@openbsd.org>
Date:   Tue Jun 26 13:14:42 2012 +0000

    initialize 'reason' variable before passing it to the pflog_packet;
    from david hill;  ok henning

 sys/net/pf.c | 10 +++++++---
 1 file changed, 7 insertions(+), 3 deletions(-)

commit 60dfe711eef94b241e1e0209e53ef155ac84abbd
Author: mpf <mpf@openbsd.org>
Date:   Sat May 12 13:08:48 2012 +0000

    Ignore/preserve ECN bits on ToS matching and scrubbing.
    The lower 2 bits of the tos-header are used for ECN.
     (http://tools.ietf.org/html/rfc2474#section-3)
    OK henning@, haesbaert@

 sys/net/pf.c      | 4 ++--
 sys/net/pf_norm.c | 4 ++--
 2 files changed, 4 insertions(+), 4 deletions(-)

commit 5f8d4e81c30e11ee89b206a3e0fa67da00282144
Author: mikeb <mikeb@openbsd.org>
Date:   Wed Apr 11 17:42:53 2012 +0000

    fix all the suser calls which pass an incorrect p_acflag argument;
    figured out by and ok guenther

 sys/net/if_pfsync.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 61f9916f1557c79e150c5c1182e3e134f83c127a
Author: naddy <naddy@openbsd.org>
Date:   Wed Apr 11 13:29:14 2012 +0000

    SLIST_REMOVE_NEXT -> SLIST_REMOVE_AFTER for better consistency and
    compatibility with FreeBSD/NetBSD.
    Also rename SIMPLEQ_REMOVE_NEXT to SIMPLEQ_REMOVE_AFTER.
    
    ok mikeb@ guenther@

 sys/net/pf.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 1f95a411d85ac417bee894ee5e9d80b26dfa5ceb
Author: camield <camield@openbsd.org>
Date:   Sat Apr 7 14:28:45 2012 +0000

    remove superfluous return, ok mikeb

 sys/net/if_pfsync.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit b7a1b0f6149b03b33a671eaa7a3fcd5b4686e34a
Author: mikeb <mikeb@openbsd.org>
Date:   Tue Apr 3 15:09:03 2012 +0000

    Fix kernel compilation with pf but without pfsync pseudo-device by
    moving the state export functionality from pfsync code into pf.
    Based on the initial diff diff by guenther, ok henning.

 sys/net/if_pfsync.c | 65 ++----------------------------------------------
 sys/net/pf.c        | 71 ++++++++++++++++++++++++++++++++++++++++++++++++++++-
 sys/net/pf_ioctl.c  |  8 +++---
 sys/net/pfvar.h     |  4 ++-
 4 files changed, 80 insertions(+), 68 deletions(-)

commit f39ea0951c0698618b5e396c1780afa9c56fe240
Author: claudio <claudio@openbsd.org>
Date:   Wed Mar 28 19:41:05 2012 +0000

    Another pid that needs to be the process pid and not the thread one.
    OK deraadt@, guenther@

 sys/net/pf_ioctl.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 2633ae8c4c8a6488faf018a1099a19b6390683f2
Author: mikeb <mikeb@openbsd.org>
Date:   Sun Feb 5 22:38:06 2012 +0000

    Improve the ICMPv6 direction check
    
    Following bluhm's advice this changes the way we setup state keys and
    perform state lookups for ICMPv6 Neighbor Discovery packets:
      - replace the NS-dst with ND target address;
      - replace the NA-src with ND target address;
      - replace the NA-dst with unspecified address if it is a multicast.
    
    This allows pf to match Address Resolution, Neighbor Unreachability
    Detection and Duplicate Address Detection packets to the corresponding
    states without the need to create new ones or match unrelated ones.
    As a side effect we're doing now one state table lookup for ND packets
    instead of two.
    
    Fixes a bug uncovered by one of the previous commits that virtually
    breaks IPv6 connectivity after few minutes of use.
    
    ok stsp henning, with and ok bluhm

 sys/net/pf.c | 111 ++++++++++++++++++++++++++++++++++++++++-------------------
 1 file changed, 75 insertions(+), 36 deletions(-)

commit f1029a736aa24c8be37f67e98806279dee97d787
Author: bluhm <bluhm@openbsd.org>
Date:   Fri Feb 3 01:57:50 2012 +0000

    The kernel did not compile without INET6.  Put some #ifdefs into
    pf to fix that.
    - add #ifdef INET6 in obvious places
    - af translation is only possible with both INET and INET6
    - interleave #endif /* INET6 */ and closing brace correctly
    - it is not necessary to #ifdef function prototypes
    - do not compile af translate functions at all instead of empty stub,
      then the linker will report inconsistencies
    - pf_poolmask() actually takes an sa_family_t not an u_int8_t argument
    No binary change for GENERIC compiled with -O2 and -UDIAGNOSTIC.
    reported by Olivier Cochard-Labbe; ok mikeb@ henning@

 sys/net/if_pflog.c  | 10 ++++++++-
 sys/net/if_pfsync.c |  4 ++--
 sys/net/pf.c        | 62 +++++++++++++++++++++++++++++++++++------------------
 sys/net/pf_lb.c     |  6 +++++-
 sys/net/pf_norm.c   | 10 +++++++--
 sys/net/pfvar.h     |  6 ++----
 6 files changed, 67 insertions(+), 31 deletions(-)

commit c75b48ae94c2dcf098f66491698eff5ba8c86774
Author: mikeb <mikeb@openbsd.org>
Date:   Sat Jan 28 14:07:02 2012 +0000

    improve icmp virtual id generation for ND and MLD packets so that
    two consecutive host addresses won't generate the same value which
    is used as a port number in state entries;  ok bluhm, sperreault

 sys/net/pf.c | 22 +++++++++++++---------
 1 file changed, 13 insertions(+), 9 deletions(-)

commit e467ea25dcd38bb0915aea967646b5a365bd88dd
Author: mikeb <mikeb@openbsd.org>
Date:   Sat Jan 28 14:00:06 2012 +0000

    try to lookup the icmp state based on a correct packet descriptor;
    ok bluhm, henning

 sys/net/pf.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 7b5712b8f7e9e3875ee4173ce7f76c2bbd6056c4
Author: bluhm <bluhm@openbsd.org>
Date:   Fri Jan 27 15:30:16 2012 +0000

    If some length checks in pflog_bpfcopy() failed, the function
    returned early.  As a result tcpdump -i pflog0 printed uninitialized
    kernel memory for short packets.  Fix this by copying the mbuf data
    we have if we cannot decode the packet.
    ok mikeb@ henning@

 sys/net/if_pflog.c | 19 ++++++++++---------
 1 file changed, 10 insertions(+), 9 deletions(-)

commit f3805d0fe5d68b5dd0169ecbb8fe960b464417ae
Author: bluhm <bluhm@openbsd.org>
Date:   Thu Jan 26 20:16:06 2012 +0000

    Clean up the pf normalization code:
    - Let pf_normalize_ip() and pf_normalize_ip6() take the struct
      pf_pdesc pd as argument.
    - Always check wether the mbuf got NULL after normalization to make
      the code more robust.
    - Make the code structure of pf_normalize_ip6() more like
      pf_normalize_ip() to make the differences obvious.
    ok henning@

 sys/net/pf.c      | 15 +++++++--------
 sys/net/pf_norm.c | 41 +++++++++++++++++++++--------------------
 sys/net/pfvar.h   |  6 +++---
 3 files changed, 31 insertions(+), 31 deletions(-)

commit 3230e625906e70ac7f4bdc09f40ff972fa4ddaf2
Author: bluhm <bluhm@openbsd.org>
Date:   Thu Jan 26 18:19:59 2012 +0000

    Minor fixes for pf_walk_header6():
    - Fragment offset is in network byte order.
    - Check for legal short fragments before calling pf_pull_hdr() to
      avoid bogus reason accounting.
    - When checking wether the protocol header is within the fragment,
      count the IPv6 payload length relative to the end of the IPv6 header.
    ok henning@

 sys/net/pf.c | 32 +++++++++++++++++---------------
 1 file changed, 17 insertions(+), 15 deletions(-)

commit dba347c9d1b9bec85aa234dbb21f2073f4be0ac6
Author: mikeb <mikeb@openbsd.org>
Date:   Thu Jan 26 11:30:39 2012 +0000

    when table content changes we need to reset index
    to the initial value and do not use the counter;
    reported by Sebastian Benoit and Daniel Krambrock,
    tested by Sebastian Benoit, ok henning zinke

 sys/net/pf_table.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

commit cd457656856485c785ade8c07adffa56398e5c6a
Author: bluhm <bluhm@openbsd.org>
Date:   Mon Jan 23 18:37:20 2012 +0000

    Do not keep state when dropping overlapping IPv6 fragments in pf
    and IPv6 stack.
    ok sperreault@

 sys/net/pf_norm.c | 35 ++++++++++-------------------------
 1 file changed, 10 insertions(+), 25 deletions(-)

commit 481342296b650adaa97b3588606222cb5355022f
Author: chl <chl@openbsd.org>
Date:   Wed Jan 18 17:21:50 2012 +0000

    Remove dead assignments and newly created unused variables.
    
    Found by LLVM/Clang Static Analyzer.
    
    ok henning@ markus@

 sys/net/pf.c | 8 ++------
 1 file changed, 2 insertions(+), 6 deletions(-)

commit a293f40587d6f7443bfc4d7aafb1975dcedcbd56
Author: bluhm <bluhm@openbsd.org>
Date:   Tue Jan 17 21:12:17 2012 +0000

    Fix trailing whitespace.

 sys/net/pf.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit dfff4707a175439816ac9c272755781a01f833bb
Author: bluhm <bluhm@openbsd.org>
Date:   Mon Jan 16 16:38:01 2012 +0000

    Pass struct pf_pdesc to pf_walk_option6() and pf_walk_header6() to
    make their argument list shorter.  Also fix a bug where pf_walk_option6()
    used the outer header in the pd2 case.
    ok henning@ mikeb@

 sys/net/pf.c    | 118 ++++++++++++++++++++++++++------------------------------
 sys/net/pfvar.h |   3 +-
 2 files changed, 57 insertions(+), 64 deletions(-)

commit afbf55e364e78343817938dfb08024bf1ee1bb8c
Author: mikeb <mikeb@openbsd.org>
Date:   Mon Jan 16 10:28:02 2012 +0000

    do carp demotion adjustments on syncdev link state change.
    this prevents backup to failover back to master immediately
    after getting link back on carpdev interface if underlying
    pfsync interface went down as well.  instead pfsync will
    request a bulk update to get new states from the master.
    
    sthen and mpf like the idea, ok dlg

 sys/net/if_pfsync.c | 56 ++++++++++++++++++++++++++++++++++++++++++++++++++++-
 1 file changed, 55 insertions(+), 1 deletion(-)

commit d949acfd8f7a6b4dc5c90571f8addec40aa7b49c
Author: bluhm <bluhm@openbsd.org>
Date:   Sun Jan 15 22:55:35 2012 +0000

    Calling pf_normalize_ip() from pf_setup_pdesc() was bad as the
    latter is called from pf packet logging.  This resulted in normalization
    and reassembly of bad packets to be logged.  So rearrange the code
    and move the call to pf_test().
    ok henning@

 sys/net/if_pflog.c |   6 +--
 sys/net/pf.c       | 146 +++++++++++++++++++++++------------------------------
 sys/net/pf_norm.c  |   5 +-
 sys/net/pfvar.h    |   6 ++-
 4 files changed, 73 insertions(+), 90 deletions(-)

commit 8b45f36762a46592fae9d315895ecca95fad6a5f
Author: bluhm <bluhm@openbsd.org>
Date:   Fri Jan 13 11:24:35 2012 +0000

    Drop IPv6 packets built from overlapping fragments in pf reassembly.
    The reassembly state will be dropped after timeout, all related
    fragments are dropped until that.  This is conforming to RFC 5722.
    - Sort pf_fragment fields while there.
    - If the fr_queue is empty, we had overlapping fragments, don't add
      new ones.
    - If we detect overlapping IPv6 fragments, flush the fr_queue and
      drop all fragments immediately.
    - Rearrange debug output, to make clear what happens.
    - An IPv4 fragment that is totaly overlapped does not inclease the
      bad fragment counter.
    - Put an KASSERT into pf_isfull_fragment() to make sure that the
      fr_queue is never emtpy there.
    discussed with Fernando Gont; ok henning@

 sys/net/pf_norm.c | 51 +++++++++++++++++++++++++++++++++++++++++++--------
 1 file changed, 43 insertions(+), 8 deletions(-)

commit dc8c96a47047fe4d7769ea4afc5227fc373922de
Author: bluhm <bluhm@openbsd.org>
Date:   Tue Jan 3 17:06:38 2012 +0000

    Instead of having two functions pf_free_fragment() and pf_remove_fragment()
    doing more or less the same, merge them into one.  Just remove
    fragment entries from the queue in pf_join_fragment() before they
    are freed.  Then pf_remove_fragment() is not needed anymore.
    ok henning@

 sys/net/pf_norm.c | 43 +++++++++++++++++++------------------------
 1 file changed, 19 insertions(+), 24 deletions(-)

commit 2c0d332046ddc8bc46f7e48c967303115e9ae165
Author: mpf <mpf@openbsd.org>
Date:   Wed Dec 21 23:00:16 2011 +0000

    Just use pd->sidx and pd->didx to reverse the state key arguments
    in pf_test_state_*(). This needs less code and is more consistent.
    OK mikeb, markus, henning.

 sys/net/pf.c | 44 ++++++++++++--------------------------------
 1 file changed, 12 insertions(+), 32 deletions(-)

commit 4d67ea46f7e4a53cc6fa8ac218a326c5b1b1c2ec
Author: mikeb <mikeb@openbsd.org>
Date:   Wed Dec 21 14:46:24 2011 +0000

    don't attempt to run pf_translate on fragments: it will fail miserably.
    also don't do af translation if pf_translate didn't succeed.  ok henning

 sys/net/if_pflog.c | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

commit b96cc44e9ebd1e03144918ab4d5eacfcbe612681
Author: mikeb <mikeb@openbsd.org>
Date:   Mon Dec 19 23:32:36 2011 +0000

    improve the icmp direction check to deal correctly with af-to states
    (there only one state and it's direction is always PF_IN) and don't
    exclude icmp echo replies from the test.
    
    ok mcbride, claudio on previous version, ok henning, "looks good" deraadt

 sys/net/pf.c | 14 ++++++++++----
 1 file changed, 10 insertions(+), 4 deletions(-)

commit fc302162c084a606ed0ee2d4fe83635ba8ad7c53
Author: mikeb <mikeb@openbsd.org>
Date:   Mon Dec 12 21:30:27 2011 +0000

    fixup af-to regression with match rules
    
    pfctl should not infer the af-to behavior from the af/naf difference.
    instead, we should be clear that this is an af-to rule.  essentially
    this change converts FOM_AFTO marker into a rule flag PFRULE_AFTO so
    that we don't rely on ambiguous checks (like r->af != r->naf) when
    setting things up.
    
    positive review and comments from claudio, ok henning, sperreault

 sys/net/pf.c       | 6 +++---
 sys/net/pf_ioctl.c | 5 ++---
 sys/net/pfvar.h    | 3 ++-
 3 files changed, 7 insertions(+), 7 deletions(-)

commit aa22e11530481584d5007cdcf52b29e734f136f4
Author: haesbaert <haesbaert@openbsd.org>
Date:   Fri Dec 2 03:15:31 2011 +0000

    Kill unused IFCAP_IPSEC and IFCAP_IPCOMP.
    
    ok claudio@ henning@ mikeb@

 sys/net/pf.c | 7 +++----
 1 file changed, 3 insertions(+), 4 deletions(-)

commit b5e8e2fec3bd238b9549c70627e59d977bf0a18d
Author: mcbride <mcbride@openbsd.org>
Date:   Thu Dec 1 20:43:03 2011 +0000

    Make sure we only enter pf_route() when undefering in the PF_ROUTETO case.
    
    ok dlg claudio

 sys/net/if_pfsync.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 3230bc44b9a759b5d1bb2480e4b874cdc5ae2218
Author: dlg <dlg@openbsd.org>
Date:   Tue Nov 29 10:17:52 2011 +0000

    use a u_int64_t for the state id in pfsync_state. this makes it consistent
    with every other thing that stores the state id (including other pfsync
    messages).
    
    includes improvements to the systat code to consider the creatorid as well
    as the state id in its cache to avoid collisions between states created on
    different hosts.
    
    tested by me in production and on amd64 talking to sparc64.
    ok henning@

 sys/net/if_pfsync.c | 18 +++++++++---------
 sys/net/pf_ioctl.c  |  4 ++--
 sys/net/pfvar.h     |  4 ++--
 3 files changed, 13 insertions(+), 13 deletions(-)

commit d00fc39b016605c28a4a03afa535a88dab370431
Author: dlg <dlg@openbsd.org>
Date:   Mon Nov 28 01:04:50 2011 +0000

    deprecate PFTM_UNTIL_PACKET. nothing in the tree uses it, and
    pf_state_expires() handled it incorrectly.
    
    discussed with mikeb@
    ok henning@

 sys/net/pf.c       | 4 +---
 sys/net/pf_ioctl.c | 5 ++---
 sys/net/pfvar.h    | 5 ++---
 3 files changed, 5 insertions(+), 9 deletions(-)

commit 737d6da5eb23e242612226d9d22a9a119b57349a
Author: mikeb <mikeb@openbsd.org>
Date:   Sun Nov 27 16:06:30 2011 +0000

    Protect more operations in the pfsync_clone_destroy to prevent
    accidental race conditions.  From Erik Lax, thanks!  ok dlg

 sys/net/if_pfsync.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 1a4fe523da150e53dc62c25cef96502ad540a747
Author: mcbride <mcbride@openbsd.org>
Date:   Sat Nov 26 03:28:46 2011 +0000

    Apply route-to to deferred packet; without this the first packet of a
    connection does not observe the route-to option.
    
    ok dlg mikeb

 sys/net/if_pfsync.c | 37 +++++++++++++++++++++++++++++--------
 sys/net/pf.c        |  6 +-----
 sys/net/pfvar.h     |  6 +++++-
 3 files changed, 35 insertions(+), 14 deletions(-)

commit 59f6b0159d3ee9f0014ffd7e131e245a96073247
Author: dlg <dlg@openbsd.org>
Date:   Fri Nov 25 12:52:10 2011 +0000

    use time_uptime to set state creation values as time_second can be
    skewed at runtime by things like date(1) and ntpd. time_uptime is
    monotonic and therefore more useful to compare against.
    
    ok deraadt@ mikeb@

 sys/net/if_pfsync.c | 6 +++---
 sys/net/pf.c        | 6 +++---
 sys/net/pf_ioctl.c  | 4 ++--
 sys/net/pf_norm.c   | 4 ++--
 4 files changed, 10 insertions(+), 10 deletions(-)

> 2662e31fc3e2add106ed0e8fae9993fcc8ce66a9

commit ccdf19f34912ba5ba7e1164e4842e32c4e8f5dde
Author: mikeb <mikeb@openbsd.org>
Date:   Wed Nov 16 11:59:28 2011 +0000

    Improve flag setting ioctl so that bulk updates are requested
    only when we're going up, not when we set PROMISC or any other
    flag.  Fixes spontaneous CARP failovers when running tcpdump
    on pfsync.
    
    ok henning, mcbride, camield

 sys/net/if_pfsync.c | 9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

commit 3d99ce6dbe52f552bf8c1a218fc0e12ae056cf73
Author: camield <camield@openbsd.org>
Date:   Wed Nov 9 12:36:03 2011 +0000

    State expire time is a baseline time ("last active") for expiry
    calculations, and does _not_ denote the time when to expire.  So
    it should never be added to (set into the future).
    
    Try to reconstruct it with an educated guess on state import and
    just set it to the current time on state updates.
    
    This fixes a problem on pfsync listeners where the expiry time
    could be double the expected value and cause a lot more states
    to linger.
    
    Timeout code from mikeb.
    
    Found and testing by Maxim Bourmistrov.
    
    ok mikeb dlg

 sys/net/if_pfsync.c | 23 +++++++++++------------
 1 file changed, 11 insertions(+), 12 deletions(-)

> 07b6b55dce035842b2b25d60e4424046d52bb811

commit 143f2191c593bce7b1c27357f84b44e74d6076dd
Author: mikeb <mikeb@openbsd.org>
Date:   Fri Nov 4 22:11:11 2011 +0000

    Select a correct protocol for a stack side state key when importing
    an icmp<->icmp6 state (nat64);  ok henning, mcbride, dlg

 sys/net/if_pfsync.c | 16 ++++++++++++++--
 1 file changed, 14 insertions(+), 2 deletions(-)

commit f71f45bb02dc1faeca35a4b89dbf5791bcbae7d2
Author: mikeb <mikeb@openbsd.org>
Date:   Mon Oct 31 22:02:52 2011 +0000

    Don't forget to cancel bulk update failure timeout when destroying an
    interface.  Problem report and fix from Erik Lax, thanks!

 sys/net/if_pfsync.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

> e3b670692add9964eacc62e6d3d88e6315bb2a1e

commit 8ded9df8bfda2690ec52ca594adc147bdf4a5e08
Author: mikeb <mikeb@openbsd.org>
Date:   Sun Oct 30 23:04:38 2011 +0000

    Allow setting big MTU values on the pfsync interface but not larger
    than the syncdev MTU.  Prompted by the discussion with and tested
    by Maxim Bourmistrov;  ok dlg, mpf

 sys/net/if_pfsync.c | 13 ++++++-------
 1 file changed, 6 insertions(+), 7 deletions(-)

> dabfce9a5a40b4733c79f8421c42856b98d0409b

commit ed06a821bcd3dce713e2b7279b03d966ec0cbc62
Author: mikeb <mikeb@openbsd.org>
Date:   Fri Oct 21 15:45:55 2011 +0000

    strengthen some checks to prevent m_copy* routines from operating
    on mbuf chains of insufficient length;  prevents crashes seen by
    dhill.  also bring in some chunks omitted in the nat64 commit and
    are essential for correct packet interpretation.
    
    tested by dhill and me, ok henning

 sys/net/if_pflog.c | 38 +++++++++++++++++++++++++++++---------
 1 file changed, 29 insertions(+), 9 deletions(-)

commit 7dde5f4db51ebe1700f5d22b43e63c17c42abd31
Author: mikeb <mikeb@openbsd.org>
Date:   Fri Oct 21 09:21:44 2011 +0000

    add forgotten fixup for icmp6 id's when translating;  ok henning

 sys/net/pf.c | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

commit c4a7c7154eb8d9418074dd40ce20aacaf27275ca
Author: mikeb <mikeb@openbsd.org>
Date:   Thu Oct 20 08:57:26 2011 +0000

    remove a bogus chunk accidentally introduced by mcbride in rev1.141;
    mcbride agrees, ok mpf, dlg

 sys/net/if_pfsync.c | 23 +----------------------
 1 file changed, 1 insertion(+), 22 deletions(-)

commit 97326e01c96e69168e367df5630a19ba8c336f1a
Author: claudio <claudio@openbsd.org>
Date:   Thu Oct 13 18:23:39 2011 +0000

    Since the IPv6 madness is not enough introduce NAT64 -- which is actually
    "af-to" a generic IP version translator for pf(4).
    Not everything perfect yet but lets fix these things in the tree.
    Insane amount of work done by sperreault@, mikeb@ and reyk@.
    Looked over by mcbride@ henning@ and myself at eurobsdcon.
    OK mcbride@ and general put it in from deraadt@

 sys/net/if_pflog.c  |  125 +++++--
 sys/net/if_pflog.h  |    5 +-
 sys/net/if_pfsync.c |   22 +-
 sys/net/pf.c        | 1033 +++++++++++++++++++++++++++++++++++++++++++++------
 sys/net/pf_ioctl.c  |    4 +-
 sys/net/pf_lb.c     |  144 ++++++-
 sys/net/pfvar.h     |   13 +-
 7 files changed, 1173 insertions(+), 173 deletions(-)

commit fca02781bf57c11730eabc34ca0f5f5fa03b6176
Author: henning <henning@openbsd.org>
Date:   Fri Oct 7 17:10:08 2011 +0000

    rename some vars and functions
    unfortunately altq is one giant namespace violation. rename just those that
    conflict with new stuff for now only to be found on my laptop. reduce pain,
    the diff is huge already. ok ryan

 sys/net/pf_ioctl.c | 43 +++++++++++++++++++++++--------------------
 sys/net/pfvar.h    |  5 +----
 2 files changed, 24 insertions(+), 24 deletions(-)

commit ff3dbd29a807d0215ac6fde5b6f30ff5e5ced7e5
Author: henning <henning@openbsd.org>
Date:   Fri Oct 7 14:24:10 2011 +0000

    remove inaccurate comment - we don't have state tableS any more, there is
    just one and the variable name is clear enough. ryan ok

 sys/net/pf.c | 4 +---
 1 file changed, 1 insertion(+), 3 deletions(-)

commit 3eb3edc410f73f7cdae62dd39e3e9dd8b6162e4b
Author: henning <henning@openbsd.org>
Date:   Fri Oct 7 14:02:48 2011 +0000

    pf_poolqueue is long dead, remove corpses. from eurobsdcon, ryan ok

 sys/net/pfvar.h | 5 +----
 1 file changed, 1 insertion(+), 4 deletions(-)

commit 776f210a757411e26516e1d4d37240d9efa6bc98
Author: bluhm <bluhm@openbsd.org>
Date:   Wed Sep 28 17:15:45 2011 +0000

    As requested by henning, move the mbuf pointer into struct pf_pdesc.
    Also sort pd to the beginning of the functions' parameter lists for
    consistency.
    ok henning

 sys/net/if_pflog.c |  16 +-
 sys/net/if_pflog.h |   6 +-
 sys/net/pf.c       | 420 ++++++++++++++++++++++++++---------------------------
 sys/net/pf_norm.c  |  40 ++---
 sys/net/pfvar.h    |  27 ++--
 5 files changed, 253 insertions(+), 256 deletions(-)

commit 83ff067218f181c3f4790eaca4267c7fc93a2ab6
Author: bluhm <bluhm@openbsd.org>
Date:   Thu Sep 22 14:57:12 2011 +0000

    As I have touched half of pf lines anyway, fix whitespaces now.
    KNF, no binary change.

 sys/net/pf.c      | 40 ++++++++++++++++++++--------------------
 sys/net/pf_norm.c | 28 ++++++++++++++--------------
 sys/net/pfvar.h   | 18 +++++++++---------
 3 files changed, 43 insertions(+), 43 deletions(-)

commit eb24aab1704c8963c480a62ce5b6e6a97a69f9bc
Author: bluhm <bluhm@openbsd.org>
Date:   Wed Sep 21 19:07:30 2011 +0000

    Check the protocol header length for tcp, udp, icmp, icmp6 in
    pf_setup_pdesc().  It is better to check and bail out early than
    to rely on pf_pull_hdr() later.
    ok henning mpf

 sys/net/pf.c      | 20 ++++++++++++++++++--
 sys/net/pf_norm.c |  6 +-----
 2 files changed, 19 insertions(+), 7 deletions(-)

commit fb75e2fc14979f5b774b62725ae6bc2acfe75268
Author: bluhm <bluhm@openbsd.org>
Date:   Tue Sep 20 15:17:26 2011 +0000

    pf_setup_pdesc() panics if address family is neither AF_INET nor
    AF_INET6.  So remove useless af switch defaults here and there.
    Always use "switch(af)" instead of "if (af) else" for af dependent
    code.  Always use AF_ defines instead of PF_ when checking af values.
    ok claudio mpf henning

 sys/net/pf.c | 47 ++++++++++++++++++++++-------------------------
 1 file changed, 22 insertions(+), 25 deletions(-)

commit 47de5c193e9f75aa21eaa2fbb7e230829669037b
Author: bluhm <bluhm@openbsd.org>
Date:   Tue Sep 20 10:51:18 2011 +0000

    Put kif and dir into pdesc an use this instead of passing the values
    around.  This is a mechanical change.  Initialize pd2 and use it
    where appropriate.
    ok henning on an earlier version; ok mpf

 sys/net/if_pflog.c |  19 ++--
 sys/net/if_pflog.h |   6 +-
 sys/net/pf.c       | 248 ++++++++++++++++++++++++++---------------------------
 sys/net/pf_norm.c  |   4 +-
 sys/net/pfvar.h    |  20 ++---
 5 files changed, 144 insertions(+), 153 deletions(-)

commit 110e53770d136c90a07e61bf0a447a8a00eef6dc
Author: bluhm <bluhm@openbsd.org>
Date:   Mon Sep 19 12:51:52 2011 +0000

    Consolidate pf function parameters.  Move off and hdrlen into pdesc
    and change their type from int to u_int32_t.  Do not pass struct
    tcphdr *th and sa_family_t af, it is in pd anyway.  Do not use af
    and pd->af intermixed, the latter makes clear where it comes from.
    Do not calculate the packet length again if pd already has it.  Use
    pd2.off instead of off2.
    go go go go don't stop henning@ mpf@

 sys/net/if_pflog.c |   9 +-
 sys/net/pf.c       | 297 ++++++++++++++++++++++++-----------------------------
 sys/net/pf_norm.c  |  31 +++---
 sys/net/pfvar.h    |  23 +++--
 4 files changed, 169 insertions(+), 191 deletions(-)

commit c62e803e5c0ac6162315276380201e9ca72a2923
Author: bluhm <bluhm@openbsd.org>
Date:   Sun Sep 18 13:50:13 2011 +0000

    Move the pdesc initialization code into pf_setup_pdesc().  Unify
    some IPv4 and IPv6 code.  Make sure that both code paths set the
    same fields in the same order.
    ok mpf henning

 sys/net/if_pflog.c | 12 +++++-------
 sys/net/pf.c       | 46 ++++++++++++++++++++++------------------------
 sys/net/pfvar.h    |  4 ++--
 3 files changed, 29 insertions(+), 33 deletions(-)

commit 94b88d7ed8e86848c4adf35464ed80fe33a26eae
Author: miod <miod@openbsd.org>
Date:   Sun Sep 18 11:17:57 2011 +0000

    Fix various format string types to as a minimum match the width of the
    variables being processed.
    ok bluhm@ henning@

 sys/net/pf_lb.c   | 4 ++--
 sys/net/pf_norm.c | 8 ++++----
 2 files changed, 6 insertions(+), 6 deletions(-)

commit fb9fe53b92080261450b9b807e770bc5ac929b23
Author: bluhm <bluhm@openbsd.org>
Date:   Sun Sep 18 10:40:54 2011 +0000

    Move the call to pf_test_rule() for fragments that have not been
    reassembled by normalization from pf_setup_pdesc() to pf_test().
    This simplifies the paramter list of pf_setup_pdesc() as it can
    concentrate on its job filling the pf_pdesc struct.
    ok henning mpf

 sys/net/if_pflog.c |  5 ++---
 sys/net/pf.c       | 37 +++++++++++++++++--------------------
 sys/net/pfvar.h    |  7 ++-----
 3 files changed, 21 insertions(+), 28 deletions(-)

commit cf78ed89d0a0399f5c534bb0cf6de665e27ca6ed
Author: bluhm <bluhm@openbsd.org>
Date:   Sat Sep 17 16:01:55 2011 +0000

    The pd->ip_sum and pd->proto_sum fields are not needed.  Replace
    the one occurrence in pf_test_state_icmp() that uses pd2.ip_sum by
    a local variable.  Remove ip_sum and proto_sum from struct pf_pdesc.
    ok claudio henning

 sys/net/pf.c    | 31 ++++++++++++++-----------------
 sys/net/pfvar.h |  5 +----
 2 files changed, 15 insertions(+), 21 deletions(-)

commit 9c874c64ace1cb481c666a42349feb17096a4171
Author: henning <henning@openbsd.org>
Date:   Sat Sep 17 11:34:49 2011 +0000

    move initialisation of pd->nsaddr and pd->ndaddr from pf_test_rule to
    pf_setup_pdesc. fixes logging of packets passed statefully. ok bluhm

 sys/net/pf.c | 25 ++++++++++---------------
 1 file changed, 10 insertions(+), 15 deletions(-)

commit ddd2494207b94b3165e5eee9a4de573eb7ded305
Author: bluhm <bluhm@openbsd.org>
Date:   Sat Sep 17 10:12:37 2011 +0000

    Deduplicate IPv4 and IPv6 code that handles fragments that have not
    been reassembled by normalization.
    ok henning claudio

 sys/net/pf.c | 49 +++++++++++++++++++------------------------------
 1 file changed, 19 insertions(+), 30 deletions(-)

commit c981122504bff2584d0ec2fc513f2dbf83b0c8b0
Author: mikeb <mikeb@openbsd.org>
Date:   Tue Aug 30 00:40:47 2011 +0000

    Add support for one shot rules that remove themselves from an active
    ruleset after match.  In case this is the only rule in the anchor,
    the anchor will be destroyed automatically after the rule is matched.
    This is an extremely handy technique for firewall proxies.
    
    ok henning, mcbride

 sys/net/pf.c       |  5 ++++-
 sys/net/pf_ioctl.c | 20 +++++++++++++++++++-
 sys/net/pfvar.h    |  5 ++++-
 3 files changed, 27 insertions(+), 3 deletions(-)

commit dbf088bb22b07faed141425237b03f4708bec452
Author: mpf <mpf@openbsd.org>
Date:   Wed Aug 3 12:28:40 2011 +0000

    Remove redundant prototype for pf_socket_lookup().
    It's already in pfvar.h
    OK mcbride@

 sys/net/pf.c | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

commit b4c7c56e5a262a36adcdbcf708e643c9352af4e9
Author: dlg <dlg@openbsd.org>
Date:   Wed Aug 3 00:01:30 2011 +0000

    someone (*cough*henning*cough*) made pf_state.state_flags a u_int16_t
    without growing it in pfsync_state too.
    
    to keep the wire format compat this uses some of the pad bytes to send
    all the state flags on the wire as well as maintaining the old state_flags
    field. after 5.0 we'll deprecate the original field and only use the new
    one.
    
    discussed with mcbride and deraadt and based on a diff from deraadt.
    tested against an "old" pfsync locally.
    ok mcbride@ henning@ deraadt@

 sys/net/if_pfsync.c | 7 +++++--
 sys/net/pfvar.h     | 7 ++++---
 2 files changed, 9 insertions(+), 5 deletions(-)

commit 527cad9d47e0fc187d78bb4927e338c1901d17a8
Author: mcbride <mcbride@openbsd.org>
Date:   Tue Aug 2 13:13:57 2011 +0000

    Replace one byte of padding with sa_family_t af in pfsync_state_key;
    Reject states with pfsync_state->af == 0 in pfsync_state_import(), in
    preparation for states which specify an address family in each state key
    instead (change will take place post-5.0).
    
    ok dlg henning mikeb

 sys/net/if_pfsync.c | 5 ++++-
 sys/net/pfvar.h     | 5 +++--
 2 files changed, 7 insertions(+), 3 deletions(-)

commit 42af0bf3e4532b8fdef283eb074face615e0adb8
Author: mcbride <mcbride@openbsd.org>
Date:   Fri Jul 29 10:48:35 2011 +0000

    Make sure we use the right tbl/dyn pointer to check the pfrkt_refcntcost;
    improved debugging for error cases inside the weighted round-robin loop.
    
    original diff from claudio, ok henning

 sys/net/pf_lb.c | 24 +++++++++++++++++-------
 1 file changed, 17 insertions(+), 7 deletions(-)

commit 96909b1162394996b9f542726e5fd0f2b98b570c
Author: henning <henning@openbsd.org>
Date:   Thu Jul 28 11:03:49 2011 +0000

    fix set skip group matching: don't match partial strings, i. e. 'set skip on
    lo' must not match a group 'local'. diff from sthen who is not around for a
    few days, ok me and mpf. I can't find the mail of the guy who initially
    ran into this problem, sorry for that, thanks for reporting!

 sys/net/pf_if.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit cbdc262e2cf4b8ae7ef8f0658c4c936b34dda046
Author: mcbride <mcbride@openbsd.org>
Date:   Wed Jul 27 00:26:10 2011 +0000

    Add support for weighted round-robin in load balancing pools and tables.
    Diff from zinke@ with a some minor cleanup.
    ok henning claudio deraadt

 sys/net/pf.c       |  12 +---
 sys/net/pf_lb.c    |  75 ++++++++++++++++++------
 sys/net/pf_table.c | 163 +++++++++++++++++++++++++++++++++++++++++------------
 sys/net/pfvar.h    |  24 +++++---
 4 files changed, 202 insertions(+), 72 deletions(-)

commit 8ca826b851742ec291f4e7dbb150649972f61a36
Author: mcbride <mcbride@openbsd.org>
Date:   Sun Jul 24 12:13:10 2011 +0000

    OS fingerprinting can only be done on rules that explicitly specify TCP
    now, put it in the IPPROTO_TCP case of the pf_test_rule() inner loop.
    
    ok henning sthen

 sys/net/pf.c | 11 +++++------
 1 file changed, 5 insertions(+), 6 deletions(-)

commit 90b3c57e947867f00b29e63b9488fc6d4e91b1d3
Author: bluhm <bluhm@openbsd.org>
Date:   Sat Jul 23 21:17:47 2011 +0000

    Replace the IPv6 header walking loop in pf_test_state_icmp() with
    the common function pf_walk_header6().  For that, pf_walk_header6()
    can now extract both the information wether it is a fragment and
    the final protocol if it is the first fragment.  This allows to
    match the icmp6 too big packet of a first fragment to the reassembled
    packet's state.  This is neccesary if a refragmented fragment is
    to big for the Path-MTU.
    Note that pd.proto contains the real protocol number for the first
    fragment and IPPROTO_FRAGMENT for later fragments.  pd.virtual_protocol
    is set to PF_VPROTO_FRAGMENT for all fragments.
    ok mcbride@

 sys/net/pf.c | 137 +++++++++++++++++++++++++++++++++--------------------------
 1 file changed, 76 insertions(+), 61 deletions(-)

commit 1a6e932b82851f5e5484015d04ff3502e93a4c2f
Author: mcbride <mcbride@openbsd.org>
Date:   Fri Jul 22 14:57:31 2011 +0000

    Sync 'block return' behaviour for ICMP packets with our IP stack:
    Rather than silently dropping ALL icmp packets, return icmp/icmp6 error
    for 'informational' message types (but continue dropping ICMP errors
    unconditionally).
    
    ok markus sthen henning

 sys/net/pf.c | 9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

commit 3a68afc70bfd110ffb1ccdcf003f51c6562ae123
Author: henning <henning@openbsd.org>
Date:   Fri Jul 22 13:05:29 2011 +0000

    fix typos, martin pelikan

 sys/net/pf.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

commit b2dc8969458c960364c4f9a379cb6737dc51bada
Author: mikeb <mikeb@openbsd.org>
Date:   Mon Jul 18 21:03:10 2011 +0000

    unbreak set-tos for ipv6;  reported by babut at yandex dot ru,
    with input and ok from bluhm and claudio

 sys/net/pf_norm.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 7ce93f3346255cfe40d986ecaeafa936bc9246aa
Author: bluhm <bluhm@openbsd.org>
Date:   Sat Jul 9 17:42:19 2011 +0000

    If ipv4+icmp6 or ipv6+icmp packets were embedded into an icmp
    payload, we missed to drop them.  While there, also add a reason
    to the corresponding check in pf_test().
    ok mcbride@ claudio@

 sys/net/pf.c | 18 +++++++++++++++---
 1 file changed, 15 insertions(+), 3 deletions(-)

commit e4fc4bddb9a469d90bd9ccb90462b69a0c0a650d
Author: mikeb <mikeb@openbsd.org>
Date:   Fri Jul 8 22:11:17 2011 +0000

    ensure that we won't enter an endless loop while iterating over
    an address pool.  problem found and solution tested by claudio.
    ok claudio, henning, "reads fine" to zinke

 sys/net/pf_table.c | 18 ++++++++++++------
 1 file changed, 12 insertions(+), 6 deletions(-)

commit a5a170216ab29059dcbfe242b527b52efbc85a4b
Author: henning <henning@openbsd.org>
Date:   Fri Jul 8 18:50:51 2011 +0000

    surprisingly, we use pf as classifier for the new priority queueing
    implementation. ok ryan mpf sthen and also testing pea and halex looked
    at it and commented as well

 sys/net/pf.c       | 31 ++++++++++++++++++++++++++-----
 sys/net/pf_ioctl.c |  8 +++++++-
 sys/net/pfvar.h    | 13 +++++++++----
 3 files changed, 42 insertions(+), 10 deletions(-)

commit d68283bbf091216852406752738c14e17e487487
Author: bluhm <bluhm@openbsd.org>
Date:   Thu Jul 7 20:46:36 2011 +0000

    There were two loops in pf_setup_pdesc() and pf_normalize_ip6()
    walking over the IPv6 header chain.  Merge them into one loop,
    adjust some length checks and fix IPv6 jumbo option handling.  Also
    allow strange but legal IPv6 packets with plen=0 passing through
    pf.  IPv6 jumbo packets still get dropped.
    testing dhill@; ok mcbride@ henning@

 sys/net/pf.c      | 269 +++++++++++++++++++++++++++++++++++++++---------------
 sys/net/pf_norm.c | 131 +-------------------------
 sys/net/pfvar.h   |   4 +-
 3 files changed, 200 insertions(+), 204 deletions(-)

commit 04c69899a72c2c5a192e4fb287684dc7110651ff
Author: mcbride <mcbride@openbsd.org>
Date:   Thu Jul 7 00:47:18 2011 +0000

    Fold pf_test_fragment() into pf_test_rule(), reduce code and fixes
    a bunch of bugs with fragment handling not being in sync with the
    rest of the ruleset.
    
    Much feedback from mpf, bluhm & markus
    Thanks to Tony Sarendal for help with testing
    
    ok bluhm; various previous versions ok henning, claudio, mpf, markus

 sys/net/if_pflog.c |   5 +-
 sys/net/pf.c       | 383 +++++++++++++++++++++++------------------------------
 sys/net/pfvar.h    |  11 +-
 3 files changed, 179 insertions(+), 220 deletions(-)

commit b16ad3f87a2a363604f1c3906e865ce63c3737fc
Author: henning <henning@openbsd.org>
Date:   Wed Jul 6 02:42:27 2011 +0000

    cosnistently use IFQ_SET_MAXLEN, surfaced in a discussion with + ok bluhm

 sys/net/if_pflog.c  | 4 ++--
 sys/net/if_pfsync.c | 4 ++--
 2 files changed, 4 insertions(+), 4 deletions(-)

commit 818e894b06f116f5d6d98d8523360a5429d110bb
Author: bluhm <bluhm@openbsd.org>
Date:   Tue Jul 5 22:28:44 2011 +0000

    Explicitly reserve space for special ICMP6 headers in pf_hdrs, like
    it was done for pf_headers in pf.c.
    ok mcbride@ henning@

 sys/net/if_pflog.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit 074ee1f915734980777e8b57a86e731ed52ad23e
Author: bluhm <bluhm@openbsd.org>
Date:   Tue Jul 5 22:00:04 2011 +0000

    Instead of passing the ip header and mbuf to pf_reassemble(), lookup
    the header address in the mbuf.
    ok henning@

 sys/net/pf_norm.c | 20 ++++++++++----------
 1 file changed, 10 insertions(+), 10 deletions(-)

commit 2702a080d51e81563abaf7b85910d12f6a9f4584
Author: mikeb <mikeb@openbsd.org>
Date:   Tue Jul 5 19:53:43 2011 +0000

    add missing ifdefs for INET6;  diff from form, ok henning, bluhm, claudio

 sys/net/pf.c      | 12 +++++++++++-
 sys/net/pf_norm.c |  4 +++-
 2 files changed, 14 insertions(+), 2 deletions(-)

commit a417e0b35d63a7ce700fc9576e88c43e6c0a1ee7
Author: dhill <dhill@openbsd.org>
Date:   Mon Jul 4 20:40:58 2011 +0000

    use mtod.
    
    no change in binary
    
    "Sure" claudio@

 sys/net/if_pfsync.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 4fe6abd45fc91714b99e306476d15630a3310f59
Author: bluhm <bluhm@openbsd.org>
Date:   Mon Jul 4 18:12:51 2011 +0000

    Rename the pf_pdesc field rh_cnt to badopts as it is also used for
    IPv4 options now.
    ok mcbride@ henning@

 sys/net/pf.c    | 10 +++++-----
 sys/net/pfvar.h |  4 ++--
 2 files changed, 7 insertions(+), 7 deletions(-)

commit 1d2240748b6a437e4b57462a4b0dcaed62795fef
Author: bluhm <bluhm@openbsd.org>
Date:   Mon Jul 4 16:26:23 2011 +0000

    IPv4 packets with IP options get dropped and no state is created.
    IPv6 packets with routing headers get also dropped.  Use the same
    fix for them to avoid that a state is created.
    ok claudio@

 sys/net/pf.c | 18 +++++++-----------
 1 file changed, 7 insertions(+), 11 deletions(-)

commit c8bc4f6e29c81be57dd0661d6c0d921b6d3a3a02
Author: claudio <claudio@openbsd.org>
Date:   Mon Jul 4 06:54:49 2011 +0000

    Bye bye pf_test6(). Only one pf_test function for both IPv4 and v6.
    The functions were 95% identical anyway. While there use struct pf_addr
    in struct pf_divert instead of some union which is the same.
    OK bluhm@ mcbride@ and most probably henning@ as well

 sys/net/pf.c    | 317 +++++++++-----------------------------------------------
 sys/net/pfvar.h |  13 +--
 2 files changed, 53 insertions(+), 277 deletions(-)

commit bcb1194831744c2654e97e20c96298e26d039b9e
Author: zinke <zinke@openbsd.org>
Date:   Sun Jul 3 23:37:55 2011 +0000

    bring in least-states load balancing algorithm
    
    ok mcbride@ henning@

 sys/net/pf.c       |  36 +++++++---
 sys/net/pf_lb.c    | 200 ++++++++++++++++++++++++++++++++++++++++++++++++++---
 sys/net/pf_table.c | 145 +++++++++++++++++++++++++++++++++-----
 sys/net/pfvar.h    |  35 ++++++++--
 4 files changed, 372 insertions(+), 44 deletions(-)

commit 72cf18cc6e5179658c46953cc07bcb9107fea374
Author: bluhm <bluhm@openbsd.org>
Date:   Sun Jul 3 23:33:38 2011 +0000

    In pf_setup_pdesc() the code for analysing TCP and UDP headers was
    the same for v4 and v6.  Deduplicate by moving the protocol switch
    after the address family switch.
    ok henning@ claudio@

 sys/net/pf.c | 155 +++++++++++++++++++++++------------------------------------
 1 file changed, 60 insertions(+), 95 deletions(-)

commit 145e9a67454dd23606067f639d9c86284b364f40
Author: henning <henning@openbsd.org>
Date:   Sun Jul 3 19:07:32 2011 +0000

    reduce kernel compile time dramatically
    (you don't need to fix this file for it to compile. oups. forgotten in the
    last commit)

 sys/net/if_pflog.h | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 12f79f830d442993b3ba85960a0f6f080c0c08a1
Author: henning <henning@openbsd.org>
Date:   Sun Jul 3 18:42:45 2011 +0000

    garbage collect unused parameter to PFLOG_PACKET
    i found this somewhere in my forest, I don't really remember writing it, the
    context indicates I did this in iceland... getting this is to make a 1000+
    lines diff less painful (how do I always end up with those)

 sys/net/pf.c | 31 +++++++++++++------------------
 1 file changed, 13 insertions(+), 18 deletions(-)

commit 485b8ec3159948d94a02130a0156f7fac0b07987
Author: claudio <claudio@openbsd.org>
Date:   Sun Jul 3 18:08:02 2011 +0000

    Refactor the fragment handling in pf_setup_pdesc() so that AF_INET
    and AF_INET6 are doing the fragment handling the same way. Makes
    code more readable.
    With and OK bluhm@

 sys/net/pf.c      | 71 +++++++++++++++++++++++++------------------------------
 sys/net/pf_norm.c |  8 ++++++-
 2 files changed, 39 insertions(+), 40 deletions(-)

commit 20fca4fcc4bcc0cc3c8c4f14225f5d74122b2bda
Author: bluhm <bluhm@openbsd.org>
Date:   Fri Jul 1 21:00:40 2011 +0000

    The pf_headers union may also contain a mld_hdr or nd_neighbor_solicit
    struct.  List those types explicitly to make sure that the union
    contains enough memory.  Before we were just lucky.
    ok henning@

 sys/net/pf.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit 78d25123eae4270b3d2869c5ed9927068bfa0786
Author: claudio <claudio@openbsd.org>
Date:   Thu Jun 23 19:10:40 2011 +0000

    Set pd->af very early in pf_setup_pdesc() since the AF is used in
    the pflog code and not setting it will cause a panic in pf_setup_pdesc().
    Fixes dhill's crashes with funky v6 packets. OK bluhm@

 sys/net/pf.c | 5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)

commit aaeeeb502bbf3cd3a2a417dfc2983861b6206d11
Author: bluhm <bluhm@openbsd.org>
Date:   Tue Jun 21 08:59:47 2011 +0000

    There is no need to handle fragmented TCP reset packets in a special
    way.  Remove PFDESC_IP_REAS and pf_pdesc flags completely.
    ok claudio@ henning@

 sys/net/pf.c      |  9 ++++-----
 sys/net/pf_norm.c | 10 +++-------
 sys/net/pfvar.h   |  8 +++-----
 3 files changed, 10 insertions(+), 17 deletions(-)

commit 20369f39989c8ddcd33a913f90cfa0b98c2b488f
Author: claudio <claudio@openbsd.org>
Date:   Mon Jun 20 19:03:41 2011 +0000

    More cleanup in pf_test/pf_test6 this time mostly the fragment
    handling. More to come to make the two codepathes a bit more identical.
    tested by many (esp. krw@ and sthen@) input and OK bluhm@

 sys/net/if_pflog.c |   4 +-
 sys/net/pf.c       | 177 ++++++++++++++++++++++++++++++-----------------------
 sys/net/pf_norm.c  |  32 +++-------
 sys/net/pfvar.h    |  13 ++--
 4 files changed, 117 insertions(+), 109 deletions(-)

commit 1cc20b7039f63e398d8a146ee7f6aedfd11c1716
Author: mcbride <mcbride@openbsd.org>
Date:   Tue Jun 14 10:14:01 2011 +0000

    KNF (no change in .o files)

 sys/net/pf.c       | 23 ++++++++++++-----------
 sys/net/pf_table.c | 16 +++++++++++-----
 2 files changed, 23 insertions(+), 16 deletions(-)

commit b664558cb9382930db2376c2f381cd454c35693f
Author: sthen <sthen@openbsd.org>
Date:   Thu Jun 2 22:08:40 2011 +0000

    When checking to see if a rule is referenced by any source-tracking nodes,
    actually check how many src nodes reference it, rather than checking the
    max_src_nodes for the rule which makes no sense. From Martin Pelikan.

 sys/net/pf.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 3e14320c4f11492650228c858b56ccba44fe67d0
Author: sthen <sthen@openbsd.org>
Date:   Thu Jun 2 22:03:30 2011 +0000

    Don't destroy a non-persistent table if referenced by src_nodes. Fixes
    a crash if max-src-* options are triggered both before and after a ruleset
    reload, when the rules are overloading to a non-persistent table.
    Discovered by and fix from Martin Pelikan.

 sys/net/pf_ioctl.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 3296111e59501ee00d301f0bcf7ad474b44ba732
Author: claudio <claudio@openbsd.org>
Date:   Wed May 25 06:48:12 2011 +0000

    Don't do last minute changes to diffs. Revert the argument change to
    pf_scrub in the rule (no-state) case. Since the action (a) may be NULL
    for e.g. the implicit pass rule. Should fix the panics seen by other
    people.

 sys/net/pf.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

commit 48c45e6969bbc97d7bc0adadc9fde97d8c44d7ef
Author: claudio <claudio@openbsd.org>
Date:   Tue May 24 14:01:51 2011 +0000

    Merge pf_scrub_ip() and pf_scrub_ip6() into a single function.  Call
    pf_scrub with the right arugments in the rule case so that match
    rules will work as expected.  As a benefit allow setting the tos
    on IPv6 packets as well.
    OK henning@

 sys/net/pf.c      | 14 +++++++++-----
 sys/net/pf_norm.c | 44 +++++++++++++++++++++++++-------------------
 sys/net/pfvar.h   |  5 ++---
 3 files changed, 36 insertions(+), 27 deletions(-)

commit 5480721ed15fca323a685788c70ad9371c0eeaf3
Author: claudio <claudio@openbsd.org>
Date:   Sun May 22 13:21:24 2011 +0000

    Do not pass AF specific information to pf_test_rule() and PFLOG_PACKET()
    because either the info is already available in struct pd or easy
    to figure out.  Makes pf_test() and pf_test6() even more similar
    (with the target to remove one of them in the near future).
    OK henning@

 sys/net/if_pflog.c |  6 ++--
 sys/net/if_pflog.h |  6 ++--
 sys/net/pf.c       | 80 ++++++++++++++++++++++++++++++------------------------
 sys/net/pfvar.h    |  4 +--
 4 files changed, 52 insertions(+), 44 deletions(-)

commit 02794fcc905fd6be5e08682fccbd280f19ea7f9c
Author: sthen <sthen@openbsd.org>
Date:   Fri May 20 22:50:44 2011 +0000

    Change 'set skip on <...>' to work with interface groups.
    Feedback from various people, ok henning@
    
    Previously if an interface type (without number), e.g. "set skip on vlan"
    or "set skip on em" was used, it would have the undocumented behaviour of
    matching any interface of that type.
    
    Now it will only match an interface which is a member of the named group.
    This results in some changed behaviour:
    
    If you currently use "set skip" with a physical interface type (e.g.
    "set skip on ix") you will need to add the interface to a group of that
    name: 'ifconfig ix0 group ix' or add 'group ix' to hostname.ix0.
    
    Interfaces cloned at runtime (e.g. lo, trunk, vlan, pppoe, carp, gif,
    mpe and others) default to being in a group named after the interface type,
    so for these interfaces there will be no change in behaviour unless you
    have deliberately changed groups, e.g. 'ifconfig carp456 -group carp'.

 sys/net/pf_if.c | 15 +++++++++------
 1 file changed, 9 insertions(+), 6 deletions(-)

commit e41548933ff2d3a76ba21882e87675770874ec17
Author: mikeb <mikeb@openbsd.org>
Date:   Tue May 17 12:44:05 2011 +0000

    exclude link local address from the dynamic interface address pool
    so that rules like "pass out on vr1 inet6 nat-to (vr1)" won't map
    to the non routable ipv6 link local address; with suggestions and
    ok claudio, henning

 sys/net/pf_lb.c    | 15 ++++++++++++---
 sys/net/pf_table.c | 12 +++++++++---
 sys/net/pfvar.h    |  4 ++--
 3 files changed, 23 insertions(+), 8 deletions(-)

commit dda46e081c914a53cca99225de98dcc0d41f936f
Author: oga <oga@openbsd.org>
Date:   Fri May 13 14:31:16 2011 +0000

    Revert the pf->socket linking diff.
    
    at least krw@, pirofti@ and todd@ have been seeing panics (todd and krw
    with xxxterm not sure about pirofti) involving pool corruption while
    using this commit.
    
    krw and todd confirm that this backout fixes the problem.
    
    ok blambert@ krw@, todd@ henning@ and kettenis@
    
                Double link between pf states and sockets.  Henning has
                already implemented half of it.  The additional part is: -
                The pf state lookup for outgoing packets is optimized by
                using mbuf->inp->state.
                - For incomming tcp, udp, raw, raw6 packets the socket
                lookup always is optimized by using mbuf->state->inp.
                - All protocols establish the link for incomming packets.
                - All protocols set the inp in the mbuf for outgoing packets.
                  This allows the linkage beginning with the first packet
                  for outgoing connections.
                - In case of divert states, delete the state when the socket
                  closes.  Otherwise new connections could match on old
                  states instead of being diverted to the listen socket.
                ok henning@

 sys/net/pf.c | 27 ++-------------------------
 1 file changed, 2 insertions(+), 25 deletions(-)

commit 2e011994180729dee8410d5627ca15c433066067
Author: dlg <dlg@openbsd.org>
Date:   Tue May 10 01:10:08 2011 +0000

    when undeferring a packet, try to timeout_del first to check if you
    actually removed it from the timeout wheel before releasing it. if
    timeout_del returns 0 then you know the timeout is about to run or
    is already running, meaning it will free itself so you dont have
    to.
    
    this handling is only done for the undefer paths at SOFTNET since
    it is higher than SOFTCLOCK which timeouts run from. it is possible
    for a timeout to start running at softclock and get interrupted by
    softnet. the undefer in process context blocks both these interrupts
    while it undefers, so it is impossible for the timeout to run and
    cause the list to be in this inconsistent state.

 sys/net/if_pfsync.c | 21 ++++++++++++++-------
 1 file changed, 14 insertions(+), 7 deletions(-)

commit 806fbec1d553e93c38dd90d3d16e0d84e730756a
Author: bluhm <bluhm@openbsd.org>
Date:   Sun Apr 24 19:36:54 2011 +0000

    Double link between pf states and sockets.  Henning has already
    implemented half of it.  The additional part is:
    - The pf state lookup for outgoing packets is optimized by using
      mbuf->inp->state.
    - For incomming tcp, udp, raw, raw6 packets the socket lookup always
      is optimized by using mbuf->state->inp.
    - All protocols establish the link for incomming packets.
    - All protocols set the inp in the mbuf for outgoing packets.
      This allows the linkage beginning with the first packet for
      outgoing connections.
    - In case of divert states, delete the state when the socket closes.
      Otherwise new connections could match on old states instead of
      being diverted to the listen socket.
    ok henning@

 sys/net/pf.c | 27 +++++++++++++++++++++++++--
 1 file changed, 25 insertions(+), 2 deletions(-)

commit aac78b59b9a5776c0595955a5c07546f7f9cdc43
Author: bluhm <bluhm@openbsd.org>
Date:   Sat Apr 23 10:00:36 2011 +0000

    pf_scrub_ip() does not modify the given mbuf pointer.  So don't
    pass a pointer to a pointer to make the code in pf_test() clearer.
    ok henning@

 sys/net/pf.c      | 10 +++++-----
 sys/net/pf_norm.c |  8 +++-----
 sys/net/pfvar.h   |  6 +++---
 3 files changed, 11 insertions(+), 13 deletions(-)

commit 9b9a2dfde6feb0e646c458a24afdae3ad23a7c41
Author: bluhm <bluhm@openbsd.org>
Date:   Fri Apr 22 15:49:28 2011 +0000

    pf_pooladdr_pl does not exist anymore.  Remove its extern declaration.
    ok henning@

 sys/net/pfvar.h | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 76fd32f7b47bcff24bd24ddb68547943b79bf3bf
Author: chl <chl@openbsd.org>
Date:   Tue Apr 19 21:58:03 2011 +0000

    Fix potential null dereference.
    
    Found by LLVM/Clang Static Analyzer.
    
    ok henning@

 sys/net/pf_ioctl.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

commit 03231384230c57d154faefce8f5310190771ab47
Author: mikeb <mikeb@openbsd.org>
Date:   Tue Apr 12 10:47:29 2011 +0000

    put the accepted socket of a diverted connection into the routing domain
    of a connection originator.  this allows one to query the source rdomain
    with a SO_RTABLE socket option.  figured out with reyk, ok claudio.

 sys/net/pf.c    | 4 +++-
 sys/net/pfvar.h | 3 ++-
 2 files changed, 5 insertions(+), 2 deletions(-)

commit 101b31cc9dd052af2325e4ce99688efd8614da6c
Author: miod <miod@openbsd.org>
Date:   Thu Apr 7 19:35:05 2011 +0000

    Correctly initialize local variables in pf_check_proto_cksum(), even for
    less blessed and non-loved protocols; temporary fix for correctness until
    the henning tornado rampages this function.
    "pls commit, ok" henning@

 sys/net/pf.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 13119ca0d4a8f542fcb8f41acb2f0bf81df25980
Author: claudio <claudio@openbsd.org>
Date:   Wed Apr 6 13:18:39 2011 +0000

    Allow PF to filter on the rdomain a packet belongs to. This allows to
    write rules like "pass in on rdomain 1".
    Tested by phessler@, OK henning@

 sys/net/pf.c       | 11 ++++++++++-
 sys/net/pf_ioctl.c |  9 +++++++--
 sys/net/pfvar.h    | 18 ++++++++++--------
 3 files changed, 27 insertions(+), 11 deletions(-)

commit 1f110531fa1c94bd1893000ce7fceae0c771a628
Author: henning <henning@openbsd.org>
Date:   Tue Apr 5 20:36:59 2011 +0000

    in pf_check_proto_cksum, consider packets with the CSUM_OUT flags set
    to be ok. there is no checksum we could verify and for the moment these
    are locally generated packets anyway. and this really is just the stupid
    'stealth bridge detection' countermeasure shit (when you want a "stealth"
    bridge and explictely ask pf to return RSTs/icmp errors, you need to
    seek medical help in any case).
    this is needed so that we eventually can move the in_proto_cksum_out (and
    its ipvshit counterpart once we get it) calls to after the pf_test calls
    in the output routines
    ok dlg fondue-kinda-ok claudio

 sys/net/pf.c | 9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

commit 1911f71f7fbc27e419c63b8c872d0e8f1b0f5bff
Author: henning <henning@openbsd.org>
Date:   Tue Apr 5 18:01:21 2011 +0000

    mechanic rename M_{TCP|UDP}V4_CSUM_OUT -> M_{TCP|UDP}_CSUM_OUT
    ok claudio krw

 sys/net/pf.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 1a3657e9c6ce1b6ad6a0a04db40e034bf3667dbb
Author: sthen <sthen@openbsd.org>
Date:   Tue Apr 5 15:51:41 2011 +0000

    handle ACK prioritization for v6, ok henning@

 sys/net/pf.c | 28 ++++++++++++++++++----------
 1 file changed, 18 insertions(+), 10 deletions(-)

commit b197f0db71d8efd99c87003b90f0aa3195981ebd
Author: mikeb <mikeb@openbsd.org>
Date:   Tue Apr 5 13:48:18 2011 +0000

    ditch fastroute, an ipf feature that made its way into pf before
    route-to and friends were introduced making it obsolete. one even
    has to look it up int the ipf manual to get and idea what it's
    supposed to do.  reuse some kernel bits for the upcoming nat64
    stuff.  "kill it with fire" from mcbride, "what mcbride said"
    from mpf, "kill kill kill" and ok henning.

 sys/net/pf.c    | 11 ++++++-----
 sys/net/pfvar.h |  4 ++--
 2 files changed, 8 insertions(+), 7 deletions(-)

commit e0426537cc7e13983d85e75acf809d8f4f651927
Author: henning <henning@openbsd.org>
Date:   Mon Apr 4 17:44:43 2011 +0000

    de-guttenberg our stack a bit
    we don't need 7 f***ing copies of the same code to do the protocol checksums
    (or not, depending on hw capabilities). claudio ok

 sys/net/pf.c | 17 ++---------------
 1 file changed, 2 insertions(+), 15 deletions(-)

commit fa1ebba97a7542d726dabe566544450c5d69a892
Author: henning <henning@openbsd.org>
Date:   Mon Apr 4 14:16:48 2011 +0000

    and stop special casing the bridge for the ip cksum hardware offload
    decision here too, just like in ip_output, pointless.

 sys/net/pf.c | 5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)

commit b88aeb3d1fc136de505d51ef45b4eb8565c05296
Author: henning <henning@openbsd.org>
Date:   Mon Apr 4 14:14:53 2011 +0000

    stop fiddling with the ip checksum here too, it is always recalculated
    in all output pathes anyway.
    even worse than in the rest of pf, here we ran circles to update the ip
    cksum every time we flip a tiny bit in the header...
    pretty sure dlg claudio ok'd it and it is damn obvious anyway

 sys/net/pf_norm.c | 41 +++++++----------------------------------
 1 file changed, 7 insertions(+), 34 deletions(-)

commit 17831a2c296fcea7aff7e47afc0d29847bc37e78
Author: henning <henning@openbsd.org>
Date:   Mon Apr 4 14:00:16 2011 +0000

    there is no point at all in updating the ip checksum. it is always
    recalculated in all output pathes anyway (why did it take us 10 years to
    notice?). ok claudio definate ok dlg

 sys/net/pf.c | 128 ++++++++++++++++++++++-------------------------------------
 1 file changed, 48 insertions(+), 80 deletions(-)

commit 1258b93c473fb5f41409a976a89eb9c871a687bd
Author: dlg <dlg@openbsd.org>
Date:   Sat Apr 2 17:16:34 2011 +0000

    dont let pfsync defer packets for states with NOSYNC set.

 sys/net/if_pfsync.c | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

commit 3eee984ecb3ca4fc93797b2aa6e06229b7b1eaf9
Author: claudio <claudio@openbsd.org>
Date:   Fri Mar 25 10:54:22 2011 +0000

    Include original rdomain in DIOCNATLOOK. This allows userland proxies
    to establish cross rdomain proxy sessions.
    OK henning@, mpf@

 sys/net/pf_ioctl.c | 3 ++-
 sys/net/pfvar.h    | 3 ++-
 2 files changed, 4 insertions(+), 2 deletions(-)

commit 365a44d8cad2b5da242d8f69cba3b331565a9776
Author: bluhm <bluhm@openbsd.org>
Date:   Thu Mar 24 20:09:44 2011 +0000

    Reassemble IPv6 fragments in pf.  In the forward case, pf refragments
    the packets with the same maximum size.  This allows the sender to
    determine the optimal fragment size by Path MTU Discovery.
    testing sthen@ matthieu@
    ok claudio@

 sys/net/pf.c      |  19 ++++-
 sys/net/pf_norm.c | 230 +++++++++++++++++++++++++++++++++++++++++++++++++-----
 sys/net/pfvar.h   |   5 +-
 3 files changed, 231 insertions(+), 23 deletions(-)

commit 9ba4cdcc9cc19aec497745da1f07d8a552d1340f
Author: bluhm <bluhm@openbsd.org>
Date:   Wed Mar 23 18:34:17 2011 +0000

    Extract the address family independent functions from pf fragment
    reassembly code.  This makes it possible to reuse them for IPv6.
    ok claudio@

 sys/net/pf_norm.c | 515 ++++++++++++++++++++++++++++++------------------------
 1 file changed, 284 insertions(+), 231 deletions(-)

commit e6290fe9d9f45704bbdd9e398eaadb44aafb4c6a
Author: bluhm <bluhm@openbsd.org>
Date:   Mon Mar 7 23:30:18 2011 +0000

    Declare the inline function pf_addr_compare() non-static in pfvar.h
    to make it reusable by pf fragment reassembly.  No functional change.
    discussed with henning@, claudio@, deraadt@, kettenis@
    ok guenther@

 sys/net/pf.c    | 6 ++----
 sys/net/pfvar.h | 4 +++-
 2 files changed, 5 insertions(+), 5 deletions(-)

commit f1030b202f19266efb6a0912766d1bd368f12ebc
Author: bluhm <bluhm@openbsd.org>
Date:   Sat Mar 5 01:53:16 2011 +0000

    The function pf_tag_packet() never fails.  Remove a redundant check
    and make it void.
    ok henning@, markus@, mcbride@

 sys/net/pf.c    | 18 ++++--------------
 sys/net/pfvar.h |  4 ++--
 2 files changed, 6 insertions(+), 16 deletions(-)

commit 4dc13b9ab6ed8e807968f3207fdb7b9ca7e96db1
Author: dlg <dlg@openbsd.org>
Date:   Wed Mar 2 12:02:26 2011 +0000

    when sending deferred packets use ip6_output for v6 frames instead of
    blindly assuming everything is v4 to be sent with ip_output.
    
    problem originally reported by Marco Fretz.
    fix verified locally.
    ok henning@ mcbride@

 sys/net/if_pfsync.c | 20 +++++++++++++++++---
 1 file changed, 17 insertions(+), 3 deletions(-)

commit 1b42bb2ec6941dc4dea4c291e51ed5ceef353272
Author: mikeb <mikeb@openbsd.org>
Date:   Wed Feb 23 15:46:14 2011 +0000

    fixup source address rewriting for the icmp errors with the rdr-to setup.
    problem was reported by babut at yandex dot ru in the pr 6564, tested by
    the pr originator and me, ok henning mcbride.  shaves off a bunch of XXXs.

 sys/net/pf.c | 15 ++++++---------
 1 file changed, 6 insertions(+), 9 deletions(-)

commit b328f2324c1fd85c10114f3ec9d05d568abf0c3b
Author: sthen <sthen@openbsd.org>
Date:   Mon Feb 14 11:01:36 2011 +0000

    Add missing byte-order swap to pf_match_addr_range. Without this, rules
    using address ranges (e.g. "10.1.1.1 - 10.1.1.5") did not match addresses
    correctly on little-endian systems.  ok henning@

 sys/net/pf.c | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

> 0df377cbb8747aee4e6460e16fa41ce84ad34e00

commit 49528bd570d1579cf001fd60ffff9e91d3d719ce
Author: bluhm <bluhm@openbsd.org>
Date:   Sun Feb 6 23:12:12 2011 +0000

    pf_translate() may be called from pflog_packet().  Make sure that
    IPv4-ICMP6 and IPv6-ICMP packets are not rewritten in case they are
    dropped and logged.
    spotted by mikeb@; ok henning@

 sys/net/pf.c | 33 +++++++++++++++++++--------------
 1 file changed, 19 insertions(+), 14 deletions(-)

commit de5c2bfb741be4e00faf6b0f3063370589c39a8e
Author: bluhm <bluhm@openbsd.org>
Date:   Sun Feb 6 13:08:49 2011 +0000

    pf_test() and pf_test6() drop IPv4-ICMP6 and IPv6-ICMP packets.  Do
    not do the same check in pf_test_rule() again.
    ok henning

 sys/net/pf.c | 6 +-----
 1 file changed, 1 insertion(+), 5 deletions(-)

commit 0fb0da3d3d18a0905d29f3ff2d9e4d6401c5a978
Author: bluhm <bluhm@openbsd.org>
Date:   Sat Feb 5 17:29:05 2011 +0000

    When a packet with an unusual protocol number got rewritten, the
    header lenght was uninitialized.  This resulted in a panic in
    m_clget().  Initialize hdrlen with 0 and call m_copyback() only if
    necessary.
    ok henning@

 sys/net/pf.c | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

commit 476042822b075f9903b1248ddc306b5272de0ea1
Author: bluhm <bluhm@openbsd.org>
Date:   Tue Feb 1 16:10:31 2011 +0000

    The check for invalid IPv6 fragment size in pf_normalize_ip6() was
    wrong.  As an effect small valid fragmented packets got dropped and
    some invalid fragmented packets were passed.  plen is the payload
    lenght of the ipv6 packet without the ipv6 header.  off is relative
    to the whole packet including the ipv6 header.  Add sizeof(struct
    ip6_hdr) in the calculation.
    ok henning@ markus@

 sys/net/pf_norm.c | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

commit a89d0abd592a1eb705c08a38fe9f77f608073491
Author: bluhm <bluhm@openbsd.org>
Date:   Sat Jan 22 11:43:57 2011 +0000

    Pf must not scrub packets which will be dropped anyway.
    ok henning@ markus@

 sys/net/pf.c | 58 ++++++++++++++++++++++++++++++----------------------------
 1 file changed, 30 insertions(+), 28 deletions(-)

commit ca040a55b10a7a27b7c04715e4e2c1305a71f97e
Author: bluhm <bluhm@openbsd.org>
Date:   Thu Jan 20 15:03:03 2011 +0000

    The reason accounting in pf_reassemble() was not correct.  Change
    pf_reassemble() to return PF_DROP or PF_PASS and *m0 is NULL or the
    reassembled packet.  In case of PF_DROP, the mbuf must be valid,
    e.g. for logging, and will be freed later.  In case the reassembled
    packet is too big, use the reassembled mbuf for PF_DROP.
    ok henning@ markus@

 sys/net/pf_norm.c | 57 +++++++++++++++++++++++++++++++++----------------------
 1 file changed, 34 insertions(+), 23 deletions(-)

commit da128df59cc684502fa46853ea6fa9b3e960c707
Author: bluhm <bluhm@openbsd.org>
Date:   Wed Jan 19 11:39:56 2011 +0000

    Give pf_normalize_ip() the same 3 way semantics as pf_test().
    - PF_DROP, the packet is bad, the mbuf still exists and must be freed.
    - PF_PASS and *m0 is NULL, the packet has been processed, not an error.
    - PF_PASS and *m0 is not NULL, continue with packet processing.
    This fixes a potential mbuf use after free.
    ok henning@ markus@ mpf@

 sys/net/pf.c      | 6 +++++-
 sys/net/pf_norm.c | 4 ++--
 2 files changed, 7 insertions(+), 3 deletions(-)

commit fa9a085e94082abefe07254f8f289cb4ca7ac057
Author: mcbride <mcbride@openbsd.org>
Date:   Tue Jan 11 13:35:58 2011 +0000

    Perform IP options check in pf_test_rule(), before creating state.
    
    ok claudio henning dlg miod

 sys/net/pf.c    | 72 ++++++++++++++++++++++++++++++++++-----------------------
 sys/net/pfvar.h |  3 ++-
 2 files changed, 45 insertions(+), 30 deletions(-)

commit c8ae8f0d4d3d5a4b28922e4cc7f4beb78b9e0b7a
Author: dlg <dlg@openbsd.org>
Date:   Tue Jan 11 08:33:27 2011 +0000

    delay deferred packets for a maximum of 20ms instead of 100 ticks (which
    varies by arch). the 20ms is still up for discussion.
    
    ok deraadt@

 sys/net/if_pfsync.c | 6 ++----
 1 file changed, 2 insertions(+), 4 deletions(-)

commit 0b25aa5597b3a81b7245dd7325abc60f09fe444f
Author: bluhm <bluhm@openbsd.org>
Date:   Mon Jan 10 18:57:59 2011 +0000

    If pf_test() was called recursively, the global variable pf_hdrs
    could be used multiple times for different packets.  This happened
    when pflow(4) was used.  Instead of a global variable, store the
    pf_headers in a local variable on the stack.
    david@ found the bug, narrowed it down and tested the fix.
    ok henning@

 sys/net/pf.c | 12 +++++++-----
 1 file changed, 7 insertions(+), 5 deletions(-)

commit 8b846838ff2a5859e410768985e3c60a566a49c7
Author: mcbride <mcbride@openbsd.org>
Date:   Mon Jan 10 10:26:38 2011 +0000

    DPFPRINTF already adds the "pf: ", no need to put it in the error
    string.
    
    ok henning dlg claudio

 sys/net/pf.c | 31 +++++++++++++++----------------
 1 file changed, 15 insertions(+), 16 deletions(-)

commit b7feb74bef1250a17bab3da11c7ae46b669cb7e6
Author: bluhm <bluhm@openbsd.org>
Date:   Thu Jan 6 14:01:36 2011 +0000

    Put htons() around ip_randomid() for pf scrub random-id to make it
    consistent with the network stack.
    ok mcbride@ henning@

 sys/net/pf_norm.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 04a3ab6a00adbc53691eedc588a78866bd5b31a8
Author: bluhm <bluhm@openbsd.org>
Date:   Wed Jan 5 17:36:55 2011 +0000

    Remove mbuf ptr save dance in pf_test6().  It was a leftover with
    misleading comment that did nothing.
    ok henning@ jsing@

 sys/net/pf.c | 13 ++-----------
 1 file changed, 2 insertions(+), 11 deletions(-)

commit 9ded2a93a9190c91cc23ca433f67bdeae370f36c
Author: bluhm <bluhm@openbsd.org>
Date:   Fri Dec 31 12:26:57 2010 +0000

    Remove dead code from pf_norm.c.  The fragment cache is some leftover
    from fragment crop.  PFFRAG_NOBUFFER and PFFRAG_DROP are never set.
    pf_cache_pl and pf_cent_pl have no pool_get.
    ok henning@

 sys/net/pf_norm.c | 106 ++++++++----------------------------------------------
 1 file changed, 15 insertions(+), 91 deletions(-)

commit 0053f46481cc911737c319665f02db01c52755de
Author: bluhm <bluhm@openbsd.org>
Date:   Fri Dec 31 12:21:36 2010 +0000

    Address comparisson is implemented twice in pf.c.  Put this into a
    common function pf_addr_compare().
    ok henning@

 sys/net/pf.c | 113 +++++++++++++++++++----------------------------------------
 1 file changed, 37 insertions(+), 76 deletions(-)

commit ea7d1040bbc43ec3952ff5bb7c3336e341e159e4
Author: henning <henning@openbsd.org>
Date:   Fri Dec 24 20:12:56 2010 +0000

    in pf_src_connlimit, the indices to sk->addr were swapped.
    tracked down and diff sent by Robert B Mills <rbmills at sdf.lonestar.org>
    thanks, very good work! ok claudio

 sys/net/pf.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

> 40874f18de0027b8ae8bf303f98a278ef6c69bb7

commit 04523091a16553628956e63cc3d1b31f792bdfe6
Author: claudio <claudio@openbsd.org>
Date:   Wed Dec 15 14:22:25 2010 +0000

    Be more careful when copying the pf rule from userland into the kernel.
    All pointers in the struct need to be cleared and reset. So instead of
    bcopy the struct and clear some fields start with a clean struct and
    assign the values that need to be copied.
    Fixes a local vulnerability but only root can issue the problematic ioctl().
    Reported by Jean Sigwald, has been in snaps for a while and OK deraadt@

 sys/net/pf_ioctl.c | 272 +++++++++++++++++++++++++++++------------------------
 1 file changed, 147 insertions(+), 125 deletions(-)

commit 8930bf12932cc0e73a96bc27ebb0c70c62773c30
Author: jsg <jsg@openbsd.org>
Date:   Tue Dec 7 11:39:40 2010 +0000

    remove a bunch of unused arguments
    ok henning@

 sys/net/if_pflog.c |  4 +--
 sys/net/pf.c       | 78 ++++++++++++++++++++++++++----------------------------
 sys/net/pfvar.h    |  4 +--
 3 files changed, 42 insertions(+), 44 deletions(-)

commit 7803b86442713a6e7e93ceebb3c00357a6193df8
Author: dlg <dlg@openbsd.org>
Date:   Mon Nov 29 06:48:09 2010 +0000

    use m_pulldown to get a contig view of the pfsync_header instead of
    m_pullup.
    
    not really a significant change since most rx bufs (which we read pfsync
    packets from) are a single contig cluster coming off the network, so we
    rarely hit the case m_pullup was called in.

 sys/net/if_pfsync.c | 17 +++++------------
 1 file changed, 5 insertions(+), 12 deletions(-)

commit 715f5bf131320c2aafedcfbf83423286535a1746
Author: dlg <dlg@openbsd.org>
Date:   Mon Nov 29 05:31:38 2010 +0000

    get rid of struct pfsync_pkt. it was used to store data on the stack to
    pass to all the submessage handlers, but only the flags part of it was
    ever used. just pass the flags directly instead.

 sys/net/if_pfsync.c | 76 ++++++++++++++++++++++-------------------------------
 sys/net/if_pfsync.h |  4 +--
 2 files changed, 34 insertions(+), 46 deletions(-)

commit a56f056f5a36c251b9526d16a9f35015b8ca7b46
Author: dlg <dlg@openbsd.org>
Date:   Sun Nov 28 11:43:41 2010 +0000

    there's no need to take splsoftnet in the input packet action handlers
    since theyre only ever called from pfsync_input, which is only called
    from ipintr, which is only called by softnet.

 sys/net/if_pfsync.c | 28 +---------------------------
 1 file changed, 1 insertion(+), 27 deletions(-)

commit 636c1ede2c7b2fad52df8c986db735b91e0825d2
Author: tedu <tedu@openbsd.org>
Date:   Sat Nov 20 23:58:13 2010 +0000

    throw some yields into the pf table code so it doesn't lock up the kernel.
    ok deraadt henning

 sys/net/pf_table.c | 22 ++++++++++++++++++++--
 1 file changed, 20 insertions(+), 2 deletions(-)

commit 1bdebab703f74534a296a7113cdfb99488e38174
Author: tedu <tedu@openbsd.org>
Date:   Sat Oct 23 15:38:18 2010 +0000

    remove PFR_FLAG_ATOMIC.  not used, and doesn't work as advertised.
    ok henning

 sys/net/pf_table.c | 122 +++++++++++++----------------------------------------
 sys/net/pfvar.h    |   3 +-
 2 files changed, 31 insertions(+), 94 deletions(-)

commit c735457bb80aa45c0d12a65640f689a235716630
Author: deraadt <deraadt@openbsd.org>
Date:   Mon Oct 18 15:55:27 2010 +0000

    Revert non-compatible and undocumented bullshit commited by 3 developers
    who decided to just do it on their own.  henning, mcbride, jsing -- shame
    on you -- if you had shown this diff to just 1 other network developer,
    the astounding mistake in it would have been noticed.  Start practicing
    inclusionary development instead of going alone.
    ok claudio

 sys/net/pfvar.h | 16 +---------------
 1 file changed, 1 insertion(+), 15 deletions(-)

commit daab1a9612efc7ba9b593f61aa54a87f4f5db32a
Author: jsing <jsing@openbsd.org>
Date:   Sun Oct 17 12:14:28 2010 +0000

    Add quirks support to operating system fingerprinting. tcpdump part
    by mcbride@.
    
    ok mcbride@ henning@

 sys/net/pfvar.h | 16 +++++++++++++++-
 1 file changed, 15 insertions(+), 1 deletion(-)

commit 2551ddbafe9497fd35a29f54688f9658e7e45f3c
Author: mcbride <mcbride@openbsd.org>
Date:   Thu Sep 30 07:14:02 2010 +0000

    Convert printf()'s to DPFDEBUG() macro.
    
    ok dlg

 sys/net/pf_table.c | 43 ++++++++++++++++++++++++++-----------------
 1 file changed, 26 insertions(+), 17 deletions(-)

commit 0e3682043aff3765bb8655032657d487264ab101
Author: dlg <dlg@openbsd.org>
Date:   Mon Sep 27 23:45:48 2010 +0000

    must have either PR_WAITOK or PR_NOWAIT set.

 sys/net/if_pfsync.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 1164d0876051dfb84605b1955a566375b042a4c0
Author: henning <henning@openbsd.org>
Date:   Fri Sep 24 02:28:10 2010 +0000

    itojun picked exactly the right reason in that REASON_SET call. really no
    reason to question himself by adding an XXX

 sys/net/pf.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit cf5fe7fa16fde05fa3e5fa7633e856cbe0cdf19e
Author: henning <henning@openbsd.org>
Date:   Fri Sep 24 02:22:37 2010 +0000

    use pd->rdomain for the PF_MISMATCHAW checks in pf_test_fragment instead of
    hardcoding 0.
    roughly almost a bit equivalent to what pf_test_rule does. changing the
    rdomain for not reassembled fragments is not going to work ever, so the
    full dance pf_test_rule does doesn't make sense here.
    speaking of sense, I don't see anything remotely resembling sense in
    pf filtering on fragments without reassembling them first.
    with/ok claudio

 sys/net/pf.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit acaa8452683b72eb424a7d0c0489494624379103
Author: henning <henning@openbsd.org>
Date:   Fri Sep 24 02:15:00 2010 +0000

    no need to pf_tag_packet in the stateless case in pf_test since
    pf_test_rule will have done it already, as correctly XXX-comment noted by
    claudio almost a year ago.
    pf_test6 (which is scarily different there) didn't have that at all.

 sys/net/pf.c | 4 +---
 1 file changed, 1 insertion(+), 3 deletions(-)

commit 79398eefa69d7c55d70d3c80c1153223355d7c77
Author: henning <henning@openbsd.org>
Date:   Fri Sep 24 02:06:47 2010 +0000

    hello, this is captain obvious speaking:
    /*  XXX This does NOT affect pass rules! */
    SLIST_FOREACH(ri, &s->match_rules, entry) {
    ...
    delete that comment, entirely superfluous

 sys/net/pf.c | 8 +-------
 1 file changed, 1 insertion(+), 7 deletions(-)

commit aa43084d8ddf5ba76e28ee91bfc725d36567ab84
Author: henning <henning@openbsd.org>
Date:   Fri Sep 24 01:56:12 2010 +0000

    remove misleading XXX comment. it is pretty clear by now that
    pf_compare_state_keys will stay, we play safe.

 sys/net/pf.c | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

commit 902fef77f801b07d61a164d8b64f619d87b2d739
Author: henning <henning@openbsd.org>
Date:   Fri Sep 24 01:53:22 2010 +0000

    nicer linewraps, purely cosmetic

 sys/net/pf.c | 10 ++++------
 1 file changed, 4 insertions(+), 6 deletions(-)

commit a97b96db754922551e50593454994a60b53aac03
Author: jsg <jsg@openbsd.org>
Date:   Fri Sep 24 00:55:48 2010 +0000

    kill some unused arguments to pf_create_state
    ok henning@

 sys/net/pf.c | 9 ++++-----
 1 file changed, 4 insertions(+), 5 deletions(-)

commit ce38da5678286504317d806b76b0b04d05c8ec9e
Author: mcbride <mcbride@openbsd.org>
Date:   Thu Sep 23 14:17:02 2010 +0000

    Break out rule counter update code into a separate function, makes the
    behaviour consistent between IPv4 and IPv6.
    
    From martin.pelikan@gmail.com

 sys/net/pf.c | 149 +++++++++++++++++++++++++++--------------------------------
 1 file changed, 68 insertions(+), 81 deletions(-)

commit 1603e01ae47854e55fd32943ae575c3a7c231e72
Author: henning <henning@openbsd.org>
Date:   Wed Sep 22 05:58:29 2010 +0000

    add a new log opt PF_LOG_MATCHES
    forces logging on all subsequent matching rules
    real ok theo assumed oks ryan and dlg bikeshedding everyone in the room
    implementation time ~ 1 minute

 sys/net/pf.c    | 10 +++++++---
 sys/net/pfvar.h |  3 ++-
 2 files changed, 9 insertions(+), 4 deletions(-)

commit 6df9b83b0147ebfa44ed4b008585c3675d891d13
Author: henning <henning@openbsd.org>
Date:   Wed Sep 22 02:12:36 2010 +0000

    various whitespace fixes that my hands did while i was looking for sth
    else and an unneeded if (r)

 sys/net/pf.c | 21 +++++----------------
 1 file changed, 5 insertions(+), 16 deletions(-)

commit 5bb4e92e3caa81a99e88dd81fe5dfd22184905f6
Author: sthen <sthen@openbsd.org>
Date:   Tue Sep 21 22:49:14 2010 +0000

    Don't dereference null pointers for protocols without port numbers.
    From henning@, fixed pflog_bgpcopy crashes.

 sys/net/if_pflog.c | 10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

commit d7f107b3c7fde3aed5ef0f5c513925bddf3182e5
Author: henning <henning@openbsd.org>
Date:   Tue Sep 21 11:29:12 2010 +0000

    assert copyrights / bump years

 sys/net/if_pflog.c | 3 ++-
 sys/net/pf.c       | 4 ++--
 sys/net/pfvar.h    | 3 ++-
 3 files changed, 6 insertions(+), 4 deletions(-)

commit 9779ffdc1a2195e04c330bc4f33c52e15ec1da64
Author: henning <henning@openbsd.org>
Date:   Tue Sep 21 11:05:10 2010 +0000

    aye. that should not have been forgotten. add the rewritten indicator
    to struct pflog. ok gcc

 sys/net/if_pflog.h | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

commit 4bd091e834d206e4f552e7cc965e181a8fbd2f74
Author: henning <henning@openbsd.org>
Date:   Tue Sep 21 10:45:26 2010 +0000

    stuff the original (before rewriting) addresses into the already existant
    address fields in the pflog header, same for ports, and add a "rewritten"
    indicator. ok ryan dlg

 sys/net/if_pflog.c | 21 ++++++++++++++++++---
 1 file changed, 18 insertions(+), 3 deletions(-)

commit d727e3d2f6c50ed1cb279a78d86b9a8dd00b3931
Author: henning <henning@openbsd.org>
Date:   Tue Sep 21 10:43:41 2010 +0000

    after ruleset eval is done, we must apply actions from the last matching
    pass or block rule, not the last matching rule. triggered by pr6401.
    this means that, for example, a rdr-to on a pass rule can override an
    rdr-to on a match rule that comes later in the ruleset. but that's the
    semantics: for block and pass rules, the last matching one wins, aka
    actions are applied after we're done with ruleset eval, and match rules'
    actions are applied on the fly. discussion with dlg and claudio, ok dlg ryan

 sys/net/pf.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

commit 2b6a78e3b1286bf74e209fdc22ffdf5ed00a9606
Author: henning <henning@openbsd.org>
Date:   Tue Sep 21 10:37:33 2010 +0000

    do not increment states_tot on match rules. it is purely cosmetic, this
    value is used in verbose "show rules" output as "states creations", but
    match rules never create state. states_cur aka "States" is needed and
    correct, match rules are being associated with states. ok ryan

 sys/net/pf.c | 6 ++----
 1 file changed, 2 insertions(+), 4 deletions(-)

commit 32a6b7901d7de8fd637307b1bf5f8da92dbc2c04
Author: henning <henning@openbsd.org>
Date:   Tue Sep 21 07:04:24 2010 +0000

    make "match log" rules log on the fly. thus you can log and see the packet
    as it is in the very same moment pf hits that match rule. really awesome
    with multiple rdr-to and the like. ok dlg - ryan would ok it too if he was
    here right now

 sys/net/pf.c | 20 ++++++++------------
 1 file changed, 8 insertions(+), 12 deletions(-)

commit 70d5a44e72be74ccfb2196ec78e3a10f3d844c66
Author: henning <henning@openbsd.org>
Date:   Tue Sep 21 04:09:33 2010 +0000

    remove now obsolete XXX comment

 sys/net/pf.c | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

commit 72d1fa51d6773e9a0559c1094601272f195c2633
Author: henning <henning@openbsd.org>
Date:   Tue Sep 21 04:06:37 2010 +0000

    pflog overhaul
    pflog was logging the "wrong" as in not yet rewritten (nat/rdr) addresses.
    to address this without making an extra copy of the mbuf chain:
    -introduce bpf_mtap_pflog, which is a 1:1 copy of bpf_mtap_hdr, except that
    it supplies bpf_catchpacket with pflog_bpfcopy as copy function instead of
    plain bcopy
    -said new shiny pflog_bpfcopy knows what a pflog packet looks like, copies
    everything into bpf's buffer, contructs a fake mbuf (which is allocated once
    at attach time and reused over and over) which points to the bpf buffer
    as data storage
    -call pf_setup_pdesc on said fake mbuf
    -then call pf_translate to rewrite the addresses as needed right in the
    bpf buffer
    this changes the pflog header as we have to pass the new addresses/ports
    around. relies on canacar's awesome work in libpcap to work olrite with the
    new, longer pflog header as well as with the old, shorter one.
    almost completely written at c2k10 in canada, finished here at j2k10 in
    japan. ok ryan dlg

 sys/net/if_pflog.c | 98 +++++++++++++++++++++++++++++++++++++++++++++++-------
 sys/net/if_pflog.h | 14 ++++++--
 2 files changed, 97 insertions(+), 15 deletions(-)

commit 96b7396b8a1b7a819b80551a0ef126f6cc5aeced
Author: henning <henning@openbsd.org>
Date:   Tue Sep 21 03:42:17 2010 +0000

    make pf_translate (void so far) return 1 if it actually changed something
    and 0 if it didn't so we know wether we have to rewrite or not.
    ok ryan dlg
    and in just an hour from now on this might have reached cvs eventually
    from njetwork challenged j2k10 in japan

 sys/net/pf.c    | 69 ++++++++++++++++++++++++++++++++++++++++-----------------
 sys/net/pfvar.h |  4 +++-
 2 files changed, 52 insertions(+), 21 deletions(-)

commit c4202972a3c7a3ecd493f292e9bf3fb741935a85
Author: henning <henning@openbsd.org>
Date:   Tue Sep 21 02:51:35 2010 +0000

    factor our the code to set up pf_pdesc, a central structure in pf carrying
    information about the packet we're currently dealing with, into its own
    function. ok ryan dlg and additional testing sthen

 sys/net/pf.c    | 494 +++++++++++++++++++++++++++++++-------------------------
 sys/net/pfvar.h |   8 +-
 2 files changed, 279 insertions(+), 223 deletions(-)

commit ffaa3a2a5e6b7e69ba93880c2a4056e3dc2f7f01
Author: blambert <blambert@openbsd.org>
Date:   Wed Sep 8 08:53:57 2010 +0000

    creating a pfsync interface is always done from process context, so
    we can pass M_WAITOK to malloc(9) (which was already done a few lines
    down, which set off my aesthetic alarm).
    
    While here, include malloc.h, since we're calling malloc.
    
    ok dlg@

 sys/net/if_pfsync.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

commit 859d5ed4e977cc7c386c854ab9a07632d5d7da87
Author: krw <krw@openbsd.org>
Date:   Sat Aug 7 03:50:01 2010 +0000

    No "\n" needed at the end of panic() strings.
    
    Bogus chunks pointed out by matthew@ and miod@. No cookies for
    marco@ and jasper@.
    
    ok deraadt@ miod@ matthew@ jasper@ macro@

 sys/net/pf_table.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit ef4bccd7509e7afa389cd6f3eddde1ae4d0cd48f
Author: bluhm <bluhm@openbsd.org>
Date:   Thu Aug 5 17:21:19 2010 +0000

    In pf_icmp_mapping() the ICMP and ICMPv6 types shared the same
    number space.  In fact they are independent and must be handled
    separately.  Fix traceroute via pf by splitting pf_icmp_mapping()
    into IPv4 and IPv6 sections.
    ok henning@ mcbride@; tested mcbride@; sure deraadt@

 sys/net/pf.c | 291 +++++++++++++++++++++++++++++++++--------------------------
 1 file changed, 165 insertions(+), 126 deletions(-)

commit 836e28141f097fd7f6dad73a702d776ddf270c83
Author: dlg <dlg@openbsd.org>
Date:   Wed Jul 28 06:52:05 2010 +0000

    pfsync_bulk_fail was mucking around with pfsync_softc and sending packets
    without holding splsoftnet. this adds the necessary protection.
    
    reported by patrick coleman

 sys/net/if_pfsync.c | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

commit 269a21860d3c611c8b2db03765a702212ecab53c
Author: jsg <jsg@openbsd.org>
Date:   Sun Jul 25 23:36:31 2010 +0000

    Add missing braces so a loop will function as intended.
    ok dlg@

 sys/net/if_pfsync.c | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

commit 05d65ec4bc6b2a183ce998415c6c4d3200280c4d
Author: reyk <reyk@openbsd.org>
Date:   Fri Jul 9 16:58:06 2010 +0000

    Add support for using IPsec in multiple rdomains.
    
    This allows to run isakmpd/iked/ipsecctl in multiple rdomains
    independently (with "route exec"); the kernel will pickup the rdomain
    from the process context of the pfkey socket and load the flows and
    SAs into the matching rdomain encap routing table.  The network stack
    also needs to pass the rdomain to the ipsec stack to lookup the
    correct rdomain that belongs to an interface/mbuf/... You can now run
    individual IPsec configs per rdomain or create IPsec VPNs between
    multiple rdomains on the same machine ;).  Note that a primary enc(4)
    in addition to enc0 interface is required per rdomain, eg. enc1 rdomain 1.
    
    Test by some people, mostly on existing "rdomain 0" setups.  Was in
    snaps for some days and people didn't complain.
    
    ok claudio@ naddy@

 sys/net/if_pfsync.c | 5 +++--
 sys/net/if_pfsync.h | 4 ++--
 2 files changed, 5 insertions(+), 4 deletions(-)

commit 1a382ea1e39e366f58e5bea9d805ac36b2fda5d9
Author: dlg <dlg@openbsd.org>
Date:   Fri Jul 9 13:09:34 2010 +0000

    instead of saying we're using the all the states in the table when
    sending a bulk update, only say we're using the states referenced
    by the next and last pointers into the table. this means the pf
    timeout thread can keep trimming states during a bulk update.

 sys/net/if_pfsync.c | 11 +++++------
 1 file changed, 5 insertions(+), 6 deletions(-)

commit 5600ceb1b4dd7dfd531dcfc8829a1659dd30a6de
Author: dlg <dlg@openbsd.org>
Date:   Fri Jul 9 12:07:21 2010 +0000

    -#if 1 || defined(PFSYNC_DEBUG)
    +#if defined(PFSYNC_DEBUG)

 sys/net/if_pfsync.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 0a1dce1e14c83ddfe880ceba68dcbb68b01521be
Author: dlg <dlg@openbsd.org>
Date:   Fri Jul 9 11:16:45 2010 +0000

    the current code doesnt detect when its filled a bulk packet so it
    keeps on building them, which means that it floods the tx ring on
    the pfsync interface rather than actually sending many packets.
    
    this change correctly calculates when we've filled a bulk update
    packet.
    
    many thanks to david@ for making me go chase this. ive been wondering
    why the state count on my firewalls has had such a discrepency for
    a long time now.

 sys/net/if_pfsync.c | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

commit 160907470cc02866a5eeded6e1a2668f1e97686c
Author: dlg <dlg@openbsd.org>
Date:   Fri Jul 9 09:01:32 2010 +0000

    sending of bulk updates has been very broken since r1.124.
    pfsync_bulk_start sets up a bulk transfer by doing this:
    
            sc->sc_bulk_next = TAILQ_FIRST(&state_list);
            sc->sc_bulk_last = sc->sc_bulk_next;
    
    and then calls pfsync_bulk_update which loops over state_list like
    this:
    
            st = sc->sc_bulk_next;
            while (st != sc->sc_bulk_last) {
    
    basically bulk updates never got sent.
    
    this diff handles jjs problem by not attempting to send a bulk
    update when the state table is empty and fixed the loop to break
    at the right times.
    
    reported by david@ who's initial tests are positive.
    reviewed by mcbride@
    tested in production at work.

 sys/net/if_pfsync.c | 38 ++++++++++++++++++++++----------------
 1 file changed, 22 insertions(+), 16 deletions(-)

commit 27d7d55d9e388fdc775fc38e05c5081691cba448
Author: sthen <sthen@openbsd.org>
Date:   Thu Jul 8 19:30:16 2010 +0000

    Use correct alignment for scrub max-mss. Based on a diff from deraadt.
    "that looks about right even though the offset calculation is pure
    horror" claudio@, ok deraadt@

 sys/net/pf_norm.c | 17 +++++++++--------
 1 file changed, 9 insertions(+), 8 deletions(-)

commit 41b18b7efaec5eccb1adb3e63aeb9377f4c90ebf
Author: blambert <blambert@openbsd.org>
Date:   Fri Jul 2 02:40:15 2010 +0000

    m_copyback can fail to allocate memory, but is a void fucntion so gymnastics
    are required to detect that.
    
    Change the function to take a wait argument (used in nfs server, but
    M_NOWAIT everywhere else for now) and to return an error
    
    ok claudio@ henning@ krw@

 sys/net/pf.c      | 60 ++++++++++++++++++++++++++++++-------------------------
 sys/net/pf_norm.c | 10 +++++-----
 2 files changed, 38 insertions(+), 32 deletions(-)

commit 1757139b4240b8453ceb92f7f1c2e9cca8977e31
Author: henning <henning@openbsd.org>
Date:   Thu Jul 1 19:45:29 2010 +0000

    g/c unused param to pf_translate

 sys/net/pf.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

commit a24529de4eb34d76a8c3c354a0d15f0f61d7df23
Author: henning <henning@openbsd.org>
Date:   Wed Jun 30 18:10:55 2010 +0000

    fix route label awesomeness, issue also known as PR6416
    broken by ryan in australia
    problem found & nagging by sthen
    jsg found the fix but failed to apply the cluestick correctly ;)
    test & ok sthen

 sys/net/pf_ioctl.c | 8 +-------
 1 file changed, 1 insertion(+), 7 deletions(-)

commit ec55ae92823884a7b39b0c5acea35bb6957f5485
Author: mcbride <mcbride@openbsd.org>
Date:   Mon Jun 28 23:21:41 2010 +0000

    Clean up iterface stats handling:
    - 'make -Fi' reset ALL the interface statistics
         can be restricted with -i ifname
    - 'make -Fa -i ifname' fail (it's meaningless)
    - get rid of a silly little struct that's only used for one thing
    
    ok henning

 sys/net/pf_if.c    | 13 +++++++++++--
 sys/net/pf_ioctl.c | 19 +++++++++++++------
 sys/net/pfvar.h    | 10 +++-------
 3 files changed, 27 insertions(+), 15 deletions(-)

commit dcabaadaeee58cb89eca442d363dc47a44c98826
Author: claudio <claudio@openbsd.org>
Date:   Mon Jun 28 18:50:36 2010 +0000

    Add the rtable id as an argument to rn_walktree(). Functions like
    rt_if_remove_rtdelete() need to know the table id to be able to correctly
    remove nodes.
    Problem found by Andrea Parazzini and analyzed by Martin Pelikán.
    OK henning@

 sys/net/pf_table.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 709e8610e59b4f8ce41ce7c61fe4b8649bf1778d
Author: henning <henning@openbsd.org>
Date:   Sun Jun 27 21:58:35 2010 +0000

    fix a comment and add a new one to make clear what the mbuf ptr save dance
    is for, it is not very obvious... with ryan and jsing

 sys/net/pf.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

commit ccf63ac6cba56e63577b75549a881a53da283500
Author: henning <henning@openbsd.org>
Date:   Sun Jun 27 01:39:43 2010 +0000

    stuff nsaddr/ndaddr/nsport/ndport (addrs/ports after NAT, used a lot while
    walking the ruleset and up until state is fully set up) into pf_pdesc instead
    of passing around those 4 seperately all the time, also shrinks the argument
    count for a few functions that have/partialy had an insane count of arguments.
    kinda preparational since we'll need them elsewhere too, soon
    ok ryan jsing

 sys/net/pf.c    | 95 ++++++++++++++++++++++++++-------------------------------
 sys/net/pf_lb.c | 79 ++++++++++++++++++++++-------------------------
 sys/net/pfvar.h | 14 ++++-----
 3 files changed, 88 insertions(+), 100 deletions(-)

commit 855cbf87cce23197303ceee6a73cabd0c7c5bc83
Author: mcbride <mcbride@openbsd.org>
Date:   Sun Jun 27 01:28:44 2010 +0000

    Fix DIOCCHANGERULE ioctl broken in the remove of the address pools.
    Reported by Alexander Vladimirov.

 sys/net/pf_ioctl.c | 8 +-------
 1 file changed, 1 insertion(+), 7 deletions(-)

commit 997566b99e1608040148a6c7fd6dcd5952221d45
Author: henning <henning@openbsd.org>
Date:   Sat Jun 26 16:49:01 2010 +0000

    bye bye DLT_OLD_PFLOG & friends. dead since 2003. 7 years oughta be enough
    ok ryan theo reyk

 sys/net/if_pflog.h | 13 +------------
 1 file changed, 1 insertion(+), 12 deletions(-)

commit a9676496ff31316f12b555e6c55d21d9e9a6304c
Author: dlg <dlg@openbsd.org>
Date:   Mon May 24 02:11:04 2010 +0000

    remove bpfdetach() here, because it is called correctly in if_detach()
    afterwards
    
    diff from gleydson soares
    ok claudio@

 sys/net/if_pfsync.c | 5 +----
 1 file changed, 1 insertion(+), 4 deletions(-)

commit 5bcaec1df012b974442ad7eba88624da0516a655
Author: claudio <claudio@openbsd.org>
Date:   Wed May 12 08:11:11 2010 +0000

    bzero() the full compressed update struct before setting the values.
    This is needed because pf_state_peer_hton() skips some fields in certain
    situations which could result in garbage beeing sent to the other peer.
    This seems to fix the pfsync storms seen by stephan@ and so dlg owes me
    a whiskey.
    OK dlg@, stephan@

 sys/net/if_pfsync.c | 5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)

> 0e2fe5f990c2ae034a5175cfc3048af7294eaad5

commit 8e084c5af5dafc76eaa2d2f07be860e6c6a856f4
Author: claudio <claudio@openbsd.org>
Date:   Fri May 7 13:33:16 2010 +0000

    Start cleaning up the mess called rtalloc*. Kill rtalloc2, make rtalloc1
    accept flags for report and nocloning. Move the rtableid into struct route
    (with a minor twist for now) and make a few more codepathes rdomain aware.
    Appart from the pf.c and route.c bits the diff is mostly mechanical.
    More to come...
    OK michele, henning

 sys/net/pf.c    | 45 ++++++++++++++++++++++++++-------------------
 sys/net/pfvar.h | 16 +++++++++-------
 2 files changed, 35 insertions(+), 26 deletions(-)

commit 148c63edd46b7d3faa7ea2041c95bd9add3207cc
Author: robert <robert@openbsd.org>
Date:   Wed Apr 28 12:46:18 2010 +0000

    Cast 'a' to (void *) in the REASON_SET macro. Makes gcc4 happy.
    ok henning@

 sys/net/pfvar.h | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit fb7345c90eb362437db59101e4d6e6e1adc6b70a
Author: mpf <mpf@openbsd.org>
Date:   Sun Apr 25 17:38:53 2010 +0000

    Properly adjust group demotion counters when groups are added or
    removed.  Extend carp demote logging to also show the reason for
    the demote.  Return EINVAL instead of ERANGE if a carpdemote request
    is out range.  Requested from otto.
    OK mcbride, henning.

 sys/net/if_pfsync.c | 13 ++++++++-----
 1 file changed, 8 insertions(+), 5 deletions(-)

commit 5a056a9fd031aa8ee869147bfd782c94278a7b58
Author: pyr <pyr@openbsd.org>
Date:   Tue Mar 23 22:34:49 2010 +0000

    Fix a crash in pfsync when running IPSEC.
    Found out the hard way by Laurent ``bucky'' Lavaud and myself.
    
    Input by claudio@, ok dlg@

 sys/net/if_pfsync.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit bb0ef34296ab3fd7c5513b5f13e3c37dbd774480
Author: dlg <dlg@openbsd.org>
Date:   Mon Mar 1 12:29:35 2010 +0000

    shuffle slightly and add more splassert.
    
    also protect the flushing of the deferred packet queue in clone_destroy
    with the right spls. noticed by claudio@

 sys/net/if_pfsync.c | 14 ++++++++++----
 1 file changed, 10 insertions(+), 4 deletions(-)

commit 41061370cb55bf64c847e49310726149ac38400c
Author: henning <henning@openbsd.org>
Date:   Wed Feb 24 15:04:40 2010 +0000

    put back the line of code that copies the timestamp out for tables
    tracked down by  Dan Harnett <daniel at harnett.name>

 sys/net/pf_table.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit 6bc50d1d1b3d47aa89ff6ca611a49c423b0e583a
Author: dlg <dlg@openbsd.org>
Date:   Wed Feb 17 00:00:04 2010 +0000

    dont defer broadcast or multicast packets.
    
    ok sthen@ henning@

 sys/net/if_pfsync.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 0c449d8997416a3237f58655ac29a655a936c8d5
Author: sthen <sthen@openbsd.org>
Date:   Thu Feb 4 14:10:12 2010 +0000

    pf_get_sport() picks a random port from the port range specified in a
    nat rule. It should check to see if it's in-use (i.e. matches an existing
    PF state), if it is, it cycles sequentially through other ports until
    it finds a free one. However the check was being done with the state
    keys the wrong way round so it was never actually finding the state
    to be in-use.
    
    - switch the keys to correct this, avoiding random state collisions
    with nat. Fixes PR 6300 and problems reported by robert@ and viq.
    
    - check pf_get_sport() return code in pf_test(); if port allocation
    fails the packet should be dropped rather than sent out untranslated.
    
    Help/ok claudio@.

 sys/net/pf.c    | 18 +++++++++++++-----
 sys/net/pf_lb.c | 43 ++++++++++++++++++++++++-------------------
 2 files changed, 37 insertions(+), 24 deletions(-)

> 8fc6e19c2cb11354b05d5d53798f487e79724012

commit 0d704094c639d14cdadf716f65878a8a39db8b8f
Author: mcbride <mcbride@openbsd.org>
Date:   Wed Jan 20 21:41:17 2010 +0000

    One \ too many in pfvar.h. From Daniel Dickman <didickman@gmail.com>
    
    ok otto

 sys/net/pfvar.h | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit a2fdc13d74f1d4d0dc6fb225baebe69667a4e148
Author: mcbride <mcbride@openbsd.org>
Date:   Mon Jan 18 23:52:46 2010 +0000

    Convert pf debug logging to using log()/addlog(), a single standardised
    definition of DPFPRINTF(), and log priorities from syslog.h. Old debug
    levels will still work for now, but will eventually be phased out.
    
    discussed with henning, ok dlg

 sys/net/if_pfsync.c  |  81 ++++++-----
 sys/net/pf.c         | 382 ++++++++++++++++++++++++++-------------------------
 sys/net/pf_if.c      |  25 ++--
 sys/net/pf_ioctl.c   |  14 +-
 sys/net/pf_lb.c      |  28 ++--
 sys/net/pf_norm.c    | 114 +++++++--------
 sys/net/pf_ruleset.c |  35 ++---
 sys/net/pf_table.c   |   3 +-
 sys/net/pfvar.h      |  36 ++++-
 9 files changed, 386 insertions(+), 332 deletions(-)

commit 9cfaa11c28cf72424aa99c3563c4c29a67d3460f
Author: mcbride <mcbride@openbsd.org>
Date:   Thu Jan 14 20:43:19 2010 +0000

    henning and I are both dumbasses, testing &foo against NULL is pointless.
    
    ok claudio

 sys/net/pf.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit c06d1661a6a7e46752997ac08fccb9ed250458c0
Author: mcbride <mcbride@openbsd.org>
Date:   Thu Jan 14 01:19:46 2010 +0000

    When printing states in debug output, print the rule number that created
    it if we have it.
    
    Requested by dlg, ok henning.

 sys/net/pf.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

commit 90cdfedd12d28b5265a46289d53cf13a795056f4
Author: henning <henning@openbsd.org>
Date:   Thu Jan 14 01:06:14 2010 +0000

    i forgot to remove a now obsolete comment in pf_create_state about
    incorrect error handling

 sys/net/pf.c | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

commit 9123a8646af4f6478a5c4c3069c015da4daa13be
Author: henning <henning@openbsd.org>
Date:   Thu Jan 14 00:00:05 2010 +0000

    in pf_create_state, when we fixed the leaks, we were a bit too trigger
    happy and went to use after free instead. ryan and I think we found the
    reason - just freeing that state keys in the error path is wrong as well,
    since pf_state_key_setup could have found existing, identical state keys
    and linked our state to these. if we now free them the other state that
    hung of these state keys would point back to the freed state keys. so
    instead of manually trying to free the state keys just call
    pf_state_key_detach which has all the magic checks.
    with and ok ryan

 sys/net/pf.c | 9 ++++-----
 1 file changed, 4 insertions(+), 5 deletions(-)

commit 79ead4cad420b93e0b7961a4d85d7fd1cae19da0
Author: henning <henning@openbsd.org>
Date:   Wed Jan 13 23:45:14 2010 +0000

    in pf_state_key_detach, ensure that the state key pointer on the state
    is not null, to be safe and to be able to call this with half setup
    states. with and ok ryan

 sys/net/pf.c | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

commit d6c76efee306bf98c5b07f5a3e8bf43bfe601fda
Author: jsg <jsg@openbsd.org>
Date:   Wed Jan 13 01:54:38 2010 +0000

    Remove extern reference to pf_pabuf which uses a struct
    which no longer exists. Makes gcc4 kernels compile again.
    
    ok henning@

 sys/net/pfvar.h | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

commit 6d841e4a1d580f72c8fc04b21daa3f8baf73249b
Author: dlg <dlg@openbsd.org>
Date:   Tue Jan 12 23:38:02 2010 +0000

    factor m_pulldown out of the message handlers up into pfsync_input now
    that it knows how big the messages are.
    
    rework the message handlers to use the pfsync_subheader.len value to
    iterate over the message regions.
    
    deprecate the EOF subheader since trying to pulldown a 0 byte buffer is
    fail.
    
    ok mcbride@ sperreault@

 sys/net/if_pfsync.c | 222 +++++++++++++++++-----------------------------------
 sys/net/if_pfsync.h |  17 ++--
 2 files changed, 75 insertions(+), 164 deletions(-)

commit a24c6af165dbdba9bf5428ed9c9a12660133883e
Author: dlg <dlg@openbsd.org>
Date:   Tue Jan 12 10:21:38 2010 +0000

    check the new pfsync_subheader len field on input.
    
    this makes sure there is enough of the message to try and parse it, and
    allows implementations to skip past regions prefixed by unknown subheaders.
    
    based on discussion with mcbride@ deraadt@ and simon perreault

 sys/net/if_pfsync.c | 140 ++++++++++++++++++++++++++++++----------------------
 1 file changed, 80 insertions(+), 60 deletions(-)

commit 367541725ad371fbf55e8d445c5270125fade60f
Author: mcbride <mcbride@openbsd.org>
Date:   Tue Jan 12 03:20:51 2010 +0000

    First pass at removing the 'pf_pool' mechanism for translation and routing
    actions. Allow interfaces to be specified in special table entries for
    the routing actions. Lists of addresses can now only be done using tables,
    which pfctl will generate automatically from the existing syntax.
    
    Functionally, this deprecates the use of multiple tables or dynamic
    interfaces in a single nat or rdr rule.
    
    ok henning dlg claudio

 sys/net/pf.c       |  45 +++--
 sys/net/pf_if.c    |  14 +-
 sys/net/pf_ioctl.c | 512 ++++++++---------------------------------------------
 sys/net/pf_lb.c    |  85 +++------
 sys/net/pf_table.c | 128 +++++++++-----
 sys/net/pfvar.h    | 109 ++++++------
 6 files changed, 277 insertions(+), 616 deletions(-)

commit 0898b067ba16d4a876fa36b9a80822802fb34572
Author: claudio <claudio@openbsd.org>
Date:   Tue Jan 12 02:47:07 2010 +0000

    Remove bpfdetach() call right in front of the if_detach() call since
    bpfdetach() will be called in if_detach(). Diff by Gleydson Soares

 sys/net/if_pflog.c  | 5 +----
 sys/net/if_pfsync.c | 5 +----
 2 files changed, 2 insertions(+), 8 deletions(-)

commit 38614c96874023486b78f0dc53f8240413c854aa
Author: henning <henning@openbsd.org>
Date:   Mon Jan 11 04:07:07 2010 +0000

    "final" leak in state creation: in pf_state_key_setup, if we actually
    need two state keys (NAT case), and we succeed allocating the first one
    but fail getting the second we'd leak the first one. obvious and thus ok'd
    by dlg ryan and theo within seconds

 sys/net/pf.c | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

commit 83813cf59e7f8fd966964827f5d05f054a0b0199
Author: henning <henning@openbsd.org>
Date:   Mon Jan 11 03:52:03 2010 +0000

    fix a bug in pf_create_state that was a major source of amusement for me
    over the last couple of weeks (ever since I found it): when we are out of
    memory for the state keys we leak the state. oh the irony.
    instead of just fixing that one case rework the error handling in the entire
    function. verified painfully by yours truly by forcefully exercising each
    and every error path in there. ryan ok

 sys/net/pf.c | 53 +++++++++++++++++++++--------------------------------
 1 file changed, 21 insertions(+), 32 deletions(-)

commit 9feff036dd4402b45c9849e12e0f62838f5a3444
Author: dlg <dlg@openbsd.org>
Date:   Mon Jan 11 00:19:11 2010 +0000

    remove some debug code that snuck in somehow.

 sys/net/if_pfsync.c | 8 ++------
 1 file changed, 2 insertions(+), 6 deletions(-)

commit 4efe3db76e8ef36e372fa5336e892089734d1349
Author: dlg <dlg@openbsd.org>
Date:   Sun Jan 10 23:54:21 2010 +0000

    replace a pad in the pfsync subheader with a length field. it stores the
    length of its message in dwords. multiply that by the count of the messages
    to figure out how to skip to the next subheader.
    
    "old" code still thinks the len field is a pad, which it doesnt look at, so
    new messages with a filled in len are still parsed correctly by "old" code.
    
    input and ok mcbride@
    sounds good! Simon Perreault

 sys/net/if_pfsync.c | 8 +++++++-
 sys/net/if_pfsync.h | 6 +++---
 2 files changed, 10 insertions(+), 4 deletions(-)

commit 95b4320893b1402bf7269ad8ed2a02aadae2ace2
Author: dlg <dlg@openbsd.org>
Date:   Thu Dec 24 04:24:19 2009 +0000

    add support to pf for filtering a packet by the interface it was received
    on. use the received-on IFNAME filter option on a pf.conf rule to restrict
    which packet the interface had to be received on. eg:
    
      pass out on em0 from $foo to $bar received-on fxp0
    
    ive been running this in production for a week now. i find it particularly
    usefull with interface groups.
    
    no objections, and a few "i like"s from henning, claudio, deraadt, mpf

 sys/net/pf.c       | 29 ++++++++++++++++++++++++++++-
 sys/net/pf_ioctl.c | 24 +++++++++++++++++++++++-
 sys/net/pfvar.h    |  4 +++-
 3 files changed, 54 insertions(+), 3 deletions(-)

commit c3e2fff9d09e7bbc740d931b3a1a4ab5a0cd8e3f
Author: henning <henning@openbsd.org>
Date:   Mon Dec 14 12:31:45 2009 +0000

    fix sticky-address - by pretty much re-implementing it. still following
    the original approach using a source tracking node.
    the reimplementation i smore flexible than the original one, we now have an
    slist of source tracking nodes per state. that is cheap because more than
    one entry will be an absolute exception.
    ok beck and jsg, also stress tested by Sebastian Benoit <benoit-lists at fb12.de>

 sys/net/if_pfsync.c |   4 +-
 sys/net/pf.c        | 231 +++++++++++++++++++++++++++++++++-------------------
 sys/net/pf_ioctl.c  |  20 ++---
 sys/net/pf_lb.c     |  53 ++++++------
 sys/net/pfvar.h     |  60 +++++++++-----
 5 files changed, 227 insertions(+), 141 deletions(-)

commit f5b489e17d61326b15ccfbaabedf6be717aceeaa
Author: sthen <sthen@openbsd.org>
Date:   Tue Dec 8 08:26:33 2009 +0000

    move "pf: key search" and "pf: key setup" messages to PF_DEBUG_NOISY
    instead of MISC. "makes a little bit more sense" henning@

 sys/net/pf.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit c3a39c045ebbfc4230462e09778c6f5ca963c6de
Author: otto <otto@openbsd.org>
Date:   Thu Dec 3 12:23:52 2009 +0000

    fix order dependency of pfsync interface setup, with claudio;
    ok claudio@ dlg@

 sys/net/if_pfsync.c | 46 +++++++++++++++++++++++++++-------------------
 1 file changed, 27 insertions(+), 19 deletions(-)

commit 49c2c3cc3a357cea1ec14c910365d4024793f714
Author: dlg <dlg@openbsd.org>
Date:   Thu Nov 26 14:34:49 2009 +0000

    magical fix for a fault which reliably brings my firewalls down. i think
    not having sks and sks set to NULL causes random memory to be pool_put().
    
    ok deraadt@ jsing@

 sys/net/pf.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 15350bd4da35191f548cdd04a5eaef1fee5f68f7
Author: henning <henning@openbsd.org>
Date:   Tue Nov 24 13:23:55 2009 +0000

    kill obsolete natpass

 sys/net/pf_ioctl.c | 3 +--
 sys/net/pfvar.h    | 7 +++----
 2 files changed, 4 insertions(+), 6 deletions(-)

commit 160609ead6b6cd227e6fd9d84902c07370518255
Author: henning <henning@openbsd.org>
Date:   Mon Nov 23 18:41:21 2009 +0000

    with the old code we initialized the state keys early in some cases
    and thus had to get rid of them if we didn't create state. this is no
    longer the case, kill dead code. ok claudio

 sys/net/pf.c | 12 ++----------
 1 file changed, 2 insertions(+), 10 deletions(-)

commit be780ff4342f91a40e5d017d14d31a2590e3a0ac
Author: henning <henning@openbsd.org>
Date:   Mon Nov 23 18:10:43 2009 +0000

    one kinda-missing log |= PFLOG_FORCE in the v6 case, spotted by claudio

 sys/net/pf.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit c9a1e0e0f94ded457207d5e1fce82d65c8ef5695
Author: henning <henning@openbsd.org>
Date:   Mon Nov 23 18:04:10 2009 +0000

    sync the handling of the log flag from pf_test (where it is correct)
    to pf_test6 (where it is wrong in some edge cases, for match rules and
    logs a packet twice in some cases). ok claudio

 sys/net/pf.c | 50 ++++++++++++++++++++++++++++++++------------------
 1 file changed, 32 insertions(+), 18 deletions(-)

commit 77c98e7b758c0b4f1898a3a6cf54808c58d5bee4
Author: henning <henning@openbsd.org>
Date:   Mon Nov 23 17:22:11 2009 +0000

    pf_test_fragment: we need to bail out if action == PF_DROP, not
    if action != PF_PASS. same was changed in pf_test_rule a while back
    but the fragment case was forgotten. since everybody reassembles nobody
    ran into this.

 sys/net/pf.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 463155b8b141c76ec4d6fffcc7541c801161cca0
Author: henning <henning@openbsd.org>
Date:   Mon Nov 23 17:18:05 2009 +0000

    sync some comments with reality

 sys/net/pf.c | 10 ++++------
 1 file changed, 4 insertions(+), 6 deletions(-)

commit e727da643402dc2bd16c9dbfb32cc56cc922db58
Author: henning <henning@openbsd.org>
Date:   Mon Nov 23 16:03:10 2009 +0000

    remove the nat_rule pointer on pf_state and pf_pdesc, obsolete after
    the NAT rewrite and ever since then only checked in a couple of plaes
    but never set. same for nat_src_node on pf_state.
    with this the NAT rewrite made pf over 1000 lines shorter.

 sys/net/if_pfsync.c | 14 +++-----
 sys/net/pf.c        | 97 +++++++++++------------------------------------------
 sys/net/pf_ioctl.c  | 11 ++----
 sys/net/pfvar.h     |  7 +---
 4 files changed, 28 insertions(+), 101 deletions(-)

commit 9f66a89a86815a8813c07efeb97e4f7b564a7db6
Author: henning <henning@openbsd.org>
Date:   Sun Nov 22 22:34:50 2009 +0000

    cleanup after the NAT changes. we used to have multiple rulesets (scrub,
    NAT, filter). now we only have one. no need for an array any more. simplifies
    the code quite a bit.
    in the process fix the abuse of PF_RULESET_* by (surprise, isn't it) the
    table code.
    written at the filesystem hackathon in stockholm, committed from the
    hardware hackathon in portugal. ok gcc and jsing

 sys/net/if_pfsync.c  |   7 +-
 sys/net/pf.c         |  22 ++---
 sys/net/pf_ioctl.c   | 250 ++++++++++++++++++++-------------------------------
 sys/net/pf_ruleset.c |  51 ++---------
 sys/net/pfvar.h      |  17 ++--
 5 files changed, 126 insertions(+), 221 deletions(-)

commit 3449b8f8c356ed60e35416d700257a2ccdecc0dc
Author: henning <henning@openbsd.org>
Date:   Sat Nov 21 20:54:27 2009 +0000

    knf

 sys/net/pf.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 46a29fb82d95d694b30d983b4a5c5cafbeeb79ea
Author: deraadt <deraadt@openbsd.org>
Date:   Thu Nov 12 06:53:24 2009 +0000

    be paranoid in case the action array changes size (again, grr)
    ok dlg

 sys/net/if_pfsync.c | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

commit 5e04876a432c2ffcbf1f9b2ed1d535cd28b5e0ba
Author: jsg <jsg@openbsd.org>
Date:   Wed Nov 11 10:31:44 2009 +0000

    Fix some memory leaks in error cases.
    Found by parfait.
    
    ok henning@

 sys/net/pf_ioctl.c | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

commit ccb5db17167325a773c11fceddee8baf4dde042c
Author: dlg <dlg@openbsd.org>
Date:   Mon Nov 9 23:46:38 2009 +0000

    bump pfsync protocol version
    
    requested by deraadt@

 sys/net/if_pfsync.h | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit af7905a8ccf622839e43d296d041c784fbb18090
Author: michele <michele@openbsd.org>
Date:   Thu Nov 5 20:50:14 2009 +0000

    IPv6 support for divert sockets.
    
    tested by phessler@ pyr@
    ok claudio@
    "go ahead" deraadt@

 sys/net/pf.c | 20 +++++++++++++++++++-
 1 file changed, 19 insertions(+), 1 deletion(-)

commit 58d9d7d5e265f2e8b59db827ef34a02ee03969bd
Author: claudio <claudio@openbsd.org>
Date:   Tue Nov 3 17:41:02 2009 +0000

    Use u_int16_t for rdomains for everything. Using various types makes
    everything just more complicated. Make sure the structs align nicely.
    OK deraadt@

 sys/net/pf_ioctl.c | 4 ++--
 sys/net/pfvar.h    | 9 +++++----
 2 files changed, 7 insertions(+), 6 deletions(-)

commit 7d3e2ec58b6d4be05995eca25f2bb0f69aabb677
Author: claudio <claudio@openbsd.org>
Date:   Tue Nov 3 10:59:04 2009 +0000

    rtables are stacked on rdomains (it is possible to have multiple routing
    tables on top of a rdomain) but until now our code was a crazy mix so that
    it was impossible to correctly use rtables in that case. Additionally pf(4)
    only knows about rtables and not about rdomains. This is especially bad when
    tracking (possibly conflicting) states in various domains.
    This diff fixes all or most of these issues. It adds a lookup function to
    get the rdomain id based on a rtable id. Makes pf understand rdomains and
    allows pf to move packets between rdomains (it is similar to NAT).
    Because pf states now track the rdomain id as well it is necessary to modify
    the pfsync wire format. So old and new systems will not sync up.
    A lot of help by dlg@, tested by sthen@, jsg@ and probably more
    OK dlg@, mpf@, deraadt@

 sys/net/if_pfsync.c |  89 ++++++++++++++++++-------------
 sys/net/if_pfsync.h |  34 +++++++-----
 sys/net/pf.c        | 149 +++++++++++++++++++++++++++++++++++-----------------
 sys/net/pf_ioctl.c  |   9 ++--
 sys/net/pf_lb.c     |  11 ++--
 sys/net/pfvar.h     |  20 +++++--
 6 files changed, 205 insertions(+), 107 deletions(-)

commit a3cf6b8e67aee74107785c96f192f7f908eeac2f
Author: jsg <jsg@openbsd.org>
Date:   Thu Oct 29 10:28:27 2009 +0000

    I missed updating a line for the AF_INET6 route case when
    splitting things out into a seperate pool.
    Problem noticed and fix tested by sthen@
    
    ok claudio@

 sys/net/pf.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 7fa5c09028f8ba7bd29ecd7387dae06e66f18075
Author: jsg <jsg@openbsd.org>
Date:   Wed Oct 28 20:11:01 2009 +0000

    Add a dedicated pf pool for route options as suggested by henning,
    which unbreaks ie route-to after the recent pf changes.
    
    With much help debugging and pointing out of missing bits from claudio@
    
    ok claudio@ "looks good" henning@

 sys/net/pf.c       | 29 +++++++++++++++--------------
 sys/net/pf_ioctl.c | 47 +++++++++++++++++++++++++++++++++++++----------
 sys/net/pfvar.h    |  8 ++++----
 3 files changed, 56 insertions(+), 28 deletions(-)

commit f1638404ba0c53306d1b01045a1c7c17d655615f
Author: claudio <claudio@openbsd.org>
Date:   Tue Oct 6 21:21:48 2009 +0000

    Redo the route lookup in the output (and IPv6 forwarding) path if the
    destination of a packet was changed by pf. This allows for some evil
    games with rdr-to or nat-to but is mostly needed for better rdomain/rtable
    support. This is a first step and more work and cleanup is needed.
    
    Here a list of what works and what does not (needs a patched pfctl):
    pass out rdr-to:
    from local rdr-to local addr works (if state tracking on lo0 is done)
    from remote rdr-to local addr does NOT work
    from local rdr-to remote works
    from remote rdr-to remote works
    
    pass in nat-to:
    from remote nat-to local addr does NOT work
    from remote nat-to non-local addr works
    non-local is an IP that is routed to the FW but is not assigned on the FW.
    The non working cases need some magic to correctly rewrite the incomming
    packet since the rewriting would happen outbound which is too late.
    
    "time to get it in" deraadt@

 sys/net/pf.c    | 42 +++++++++++++++++++++++++++++-------------
 sys/net/pfvar.h |  3 ++-
 2 files changed, 31 insertions(+), 14 deletions(-)

commit f303407acae0deded5e96b4f2dde6a948b2a381f
Author: mcbride <mcbride@openbsd.org>
Date:   Tue Oct 6 02:31:36 2009 +0000

    Replace if (af) tests operating as an af blacklist with stricter switch
    statements operating as a whitelist, taking care to allow af 0 (which is
    the wildcard value in pf rules)
    
    diff from Vadim Zhukov
    ok henning

 sys/net/pf_ioctl.c | 89 ++++++++++++++++++++++++++++++++----------------------
 1 file changed, 53 insertions(+), 36 deletions(-)

commit d85f7bc16ff4db5aedffd92a6397af819385204f
Author: michele <michele@openbsd.org>
Date:   Sun Oct 4 16:08:37 2009 +0000

    Add (again) support for divert sockets. They allow you to:
    
    - queue packets from pf(4) to a userspace application
    - reinject packets from the application into the kernel stack.
    
    The divert socket can be bound to a special "divert port" and will
    receive every packet diverted to that port by pf(4).
    
    The pf syntax is pretty simple, e.g.:
    
    pass on em0 inet proto tcp from any to any port 80 divert-packet port 1
    
    A lot of discussion have happened since my last commit that resulted
    in many changes and improvements.
    I would *really* like to thank everyone who took part in the discussion
    especially canacar@ who spotted out which are the limitations of this approach.
    
    OpenBSD divert(4) is meant to be compatible with software running on
    top of FreeBSD's divert sockets even though they are pretty different and will
    become even more with time.
    
    discusses with many, but mainly reyk@ canacar@ deraadt@ dlg@ claudio@ beck@
    tested by reyk@ and myself
    ok reyk@ claudio@ beck@
    manpage help and ok by jmc@

 sys/net/pf.c    | 20 +++++++++++++++++++-
 sys/net/pfvar.h |  6 +++---
 2 files changed, 22 insertions(+), 4 deletions(-)

commit a6f09bf26bb306d9b10eb849722efdbee1eba64a
Author: dlg <dlg@openbsd.org>
Date:   Mon Sep 28 03:01:23 2009 +0000

    when inserting a state, turn the error that pf_state_insert returns
    into something usable by ioctl. makes DIOCADDSTATE on /dev/pf cope
    when inserting an already existing state.

 sys/net/if_pfsync.c | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

commit 9657ea0feeebf34452017bd2888b5f4ce919c426
Author: henning <henning@openbsd.org>
Date:   Wed Sep 16 12:28:19 2009 +0000

    style: in pf_test_state_other, fix indentation, kill excessive newlines,
    add break in the last case block

 sys/net/pf.c | 9 +++------
 1 file changed, 3 insertions(+), 6 deletions(-)

commit cf7c0bf78a33ef206aa59fa45176c4e59da4de08
Author: henning <henning@openbsd.org>
Date:   Wed Sep 16 12:26:55 2009 +0000

    fix copy & paste error from almost a year ago (bad ryan)
    PF_ANEQ call in pf_test_state_other in the IPVshit case used AF_INET, found
    by claudio

 sys/net/pf.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 7cbbb26b385f13095c3ebf990e77751dfe816685
Author: michele <michele@openbsd.org>
Date:   Tue Sep 8 17:52:17 2009 +0000

    I had not enough oks to commit this diff.
    Sorry.

 sys/net/pf.c    | 20 +-------------------
 sys/net/pfvar.h |  6 +++---
 2 files changed, 4 insertions(+), 22 deletions(-)

commit 80675fabd846bdaf9816f6d446670bfe39ce0505
Author: michele <michele@openbsd.org>
Date:   Tue Sep 8 17:00:40 2009 +0000

    Add support for divert sockets. They allow you to:
    
    - queue packets from pf(4) to a userspace application
    - reinject packets from the application into the kernel stack.
    
    The divert socket can be bound to a special "divert port" and will
    receive every packet diverted to that port by pf(4).
    
    The pf syntax is pretty simple, e.g.:
    
    pass on em0 inet proto tcp from any to any port 80 divert-packet port 8000
    
    test, bugfix and ok by reyk@
    manpage help and ok by jmc@
    no objections from many others.

 sys/net/pf.c    | 20 +++++++++++++++++++-
 sys/net/pfvar.h |  6 +++---
 2 files changed, 22 insertions(+), 4 deletions(-)

commit b7b6c0c1ca4ad5b21d4316f4ea554785e78262bc
Author: sthen <sthen@openbsd.org>
Date:   Mon Sep 7 08:27:45 2009 +0000

    Fix static-port, found by jmc@. ok henning@.

 sys/net/pf_lb.c | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

commit adfe24cd0f10c9b23d439bb53ade28c05cd415a7
Author: jsing <jsing@openbsd.org>
Date:   Tue Sep 1 15:51:06 2009 +0000

    Clear the IP_DF bit if no-df is enabled, not if it is not enabled.
    
    Issue reported by Matthew Dempsky. Same fix suggested by fgsch@.
    
    ok henning@

 sys/net/pf_norm.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 0ef3d4febe3200701d0a0488bc5855afeb77dbb9
Author: henning <henning@openbsd.org>
Date:   Tue Sep 1 13:42:00 2009 +0000

    the diff theo calls me insanae for:
    rewrite of the NAT code, basically. nat and rdr become actions on regular
    rules, seperate nat/rdr/binat rules do not exist any more.
    match in on $intf rdr-to 1.2.3.4
    match out on $intf nat-to 5.6.7.8
    the code is capable of doing nat and rdr in any direction, but we prevent
    this in pfctl for now, there are implications that need to be documented
    better.
    the address rewrite happens inline, subsequent rules will see the already
    changed addresses. nat / rdr can be applied multiple times as well.
    match in on $intf rdr-to 1.2.3.4
    match in on $intf to 1.2.3.4 rdr-to 5.6.7.8
    help and ok dlg sthen claudio, reyk tested too

 sys/net/pf.c       | 529 ++++++++++++++++++++++++-----------------------------
 sys/net/pf_ioctl.c |  98 ++++++----
 sys/net/pf_lb.c    | 312 ++++++-------------------------
 sys/net/pfvar.h    |  37 ++--
 4 files changed, 379 insertions(+), 597 deletions(-)

commit 2d5543b86cfda925e7005d1425cc410e4102e22e
Author: krw <krw@openbsd.org>
Date:   Tue Aug 25 23:21:04 2009 +0000

    Clearly copy the whole, and nothing but the whole, old buffer into
    the resized buffer.
    
    From Pawel Jakob Dawidek via Max Laier via Marc Balmer via tech@.
    As was the previous commit where I didn't mention Pawel.
    
    'should be olright' henning@

 sys/net/pf_if.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 5fd13239c8237c619960a3500c89ffb22bc4acb3
Author: krw <krw@openbsd.org>
Date:   Tue Aug 25 10:42:27 2009 +0000

    Fix order of memcpy() arguments so data is copied from src to dest,
    not the other way. At least partial fix for interfaces with >64
    aliases. From Max Laier via Marc Balmer.
    
    'seems right' sthen@ ok markus@

 sys/net/pf_if.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 077313f094bec60e34f8f3e6f44642816ea6a464
Author: jsg <jsg@openbsd.org>
Date:   Sun Aug 16 13:01:57 2009 +0000

    remove prototypes of a bunch of functions that had their implementations
    removed in pfsync v5.

 sys/net/if_pfsync.c | 6 +-----
 1 file changed, 1 insertion(+), 5 deletions(-)

> 3488c2786e8a22e9d05b244437698c4b1a5b820e

commit aa32edff6b6a5dccff2b3f9ab476439ee2c4bf26
Author: henning <henning@openbsd.org>
Date:   Tue Jul 28 11:22:33 2009 +0000

    do not leak pf_rule_item_pl items in pf_test_rule() when
    1) at least one match rule matched the packet and
    2) we do not create state
    found by me while fixing the pool_get problem, ok dlg

 sys/net/pf.c | 10 +++++++++-
 1 file changed, 9 insertions(+), 1 deletion(-)

commit 8ceb30c7149e6b3c21355b14620ab36dbd082fb3
Author: henning <henning@openbsd.org>
Date:   Tue Jul 28 11:20:09 2009 +0000

    check that pool_get actually gives us memory in pf_test_rule.
    introduced by yours truly (no idea how that could happpen), problem
    found by sthen the hard way, fix by me. ok dlg

 sys/net/pf.c | 13 +++++++++----
 1 file changed, 9 insertions(+), 4 deletions(-)

commit 0534e01c4fa6967e93bc2ac3df96f56c2f4069b4
Author: henning <henning@openbsd.org>
Date:   Tue Jul 21 14:48:08 2009 +0000

    pf_scrub_ip/ip6 prototypes are already in pfvar.h

 sys/net/pf_norm.c | 7 +------
 1 file changed, 1 insertion(+), 6 deletions(-)

commit c2a635014a4948654bbb359031552766fbd13d02
Author: markus <markus@openbsd.org>
Date:   Fri Jun 26 19:39:49 2009 +0000

    invert direction for inner icmp state lookups (e.g. traceroute with icmp)
    ok henning, jsing

 sys/net/pf.c | 20 +++++++++++---------
 1 file changed, 11 insertions(+), 9 deletions(-)

commit 4857391cb223dc0e87d0754daa82af1e85269787
Author: sthen <sthen@openbsd.org>
Date:   Thu Jun 25 09:30:28 2009 +0000

    scrub_flags is a u_int8_t, but PFSTATE_SCRUB_TCP is 0x0100, so the
    "reassemble tcp" state option failed to work correctly. Increasing this
    to u_int16_t fixes kernel/6178. ok deraadt@ henning@

 sys/net/pf_norm.c |  6 +++---
 sys/net/pfvar.h   | 12 ++++++------
 2 files changed, 9 insertions(+), 9 deletions(-)

commit 4fbacd92f5f2172b30f22a3cb2475fe028e8638d
Author: sthen <sthen@openbsd.org>
Date:   Wed Jun 24 13:27:34 2009 +0000

    move the "pf_map_addr: selected address" printf up to -xnoisy.
    ok henning@

 sys/net/pf_lb.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit c8b05fab2d90c86c24b79e6f2105b605569431c4
Author: jsing <jsing@openbsd.org>
Date:   Mon Jun 22 17:04:02 2009 +0000

    Check that the address family is appropriate before processing ICMPv4 and
    ICMPv6 messages.
    
    ok henning@

 sys/net/pf.c | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

commit 0ba1e6e32b9877d73fe92e7eca1916a727d0106b
Author: jsing <jsing@openbsd.org>
Date:   Mon Jun 22 16:55:14 2009 +0000

    Always drop ICMPv6 in IPv4 datagrams, not only when compiled with INET6.
    
    Suggested by Max Laier.
    
    ok henning@

 sys/net/pf.c | 4 +---
 1 file changed, 1 insertion(+), 3 deletions(-)

commit e64ab58c21a4d257b73e6d9d2862d086783d41d2
Author: jsing <jsing@openbsd.org>
Date:   Mon Jun 22 13:55:39 2009 +0000

    Fix scrub max-mss for IPv6 traffic.
    
    spotted by naddy@
    
    ok henning@

 sys/net/pf.c | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

commit 0c82a00626b1448ae73e168721fe336d83a4a648
Author: dlg <dlg@openbsd.org>
Date:   Wed Jun 17 04:24:02 2009 +0000

    do better detection of when we have a better version of the tcp sequence
    windows than our peer.
    
    this resolves the last of the pfsync traffic storm issues ive been able to
    produce, and therefore makes it possible to do usable active-active
    statuful firewalls with pf.
    
    lots of testing locally on the production firewalls, also tested by sthen@

 sys/net/if_pfsync.c | 9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

> fed7635002480fe6102f47bb4254dbaf567ec7a5

commit f994b649a0ffa51355f3ea007471b931a65a15b5
Author: dlg <dlg@openbsd.org>
Date:   Sun Jun 14 00:16:50 2009 +0000

    enable support for deferring the packet that creates a state so that your
    sync peers are able to get the states before the replies. previously there
    was a race where the reply could hit a partner firewall before it had the
    state for it, which caused the reply to get processed by the ruleset which
    probably would drop it.
    
    this behaviour is off by default because it does delay packets, which is
    only wanted in active-active firewalls or when an upstream router is slow
    to learn that you're moved the active member of the pfsync cluster. it also
    uses memory keeping the packets in the kernel.
    
    use "ifconfig pfsync0 defer" to enable it, "ifconfig pfsync0 -defer" to
    disable.
    
    tested by sthen@ who loves it. he's got manpage changes coming up for me.

 sys/net/if_pfsync.c | 19 +++++++++++--------
 sys/net/if_pfsync.h |  7 ++++---
 2 files changed, 15 insertions(+), 11 deletions(-)

commit f448e3942d51b9f0e67d6b912da66371aafd218d
Author: dlg <dlg@openbsd.org>
Date:   Fri Jun 12 02:03:51 2009 +0000

    rewrite the way states from pfsync are merged into the local state tree
    and the conditions on which pfsync will notify its peers on a stale update.
    
    each side (ie, the sending and receiving side) of the state update is
    compared separately. any side that is further along than the local state
    tree is merged. if any side is further along in the local state table, an
    update is sent out telling the peers about it.
    
    this has been flogged to death on my firewalls.

 sys/net/if_pfsync.c | 128 ++++++++++++++++++++++++----------------------------
 1 file changed, 59 insertions(+), 69 deletions(-)

> f18ab0ffa3fe5d96634ecc33949cac3cc26e3338

commit 255628800681005c910738d323e92a14e793beab
Author: dlg <dlg@openbsd.org>
Date:   Wed Jun 10 00:03:55 2009 +0000

    jj reported a panic in bulk updates to me. this is my attempt to fix the
    most obvious problem.
    
    if the state table is empty, we'd deref a null pointer.
    
    tested on my firewalls with big state tables, so existing use cases still
    work.

 sys/net/if_pfsync.c | 13 ++++++++-----
 1 file changed, 8 insertions(+), 5 deletions(-)

commit 94f5e683c2272434e2918f5d25029bbe543125c5
Author: henning <henning@openbsd.org>
Date:   Mon Jun 8 03:56:14 2009 +0000

    in pf_print_state_parts, do not use skw->proto to print the protocol
    but our local copy proto that we very carefully set beforehands. skw
    being NULL is perfectly valid there.

 sys/net/pf.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 3476eba6acd4b9cb93deeb3ea6b0fa2426620151
Author: henning <henning@openbsd.org>
Date:   Mon Jun 8 02:39:15 2009 +0000

    bring back the fixed PF_AEQ/ANEQ/AZERO macros, the offending use has been
    found by sthen and fixed, all other callers of these macros checked by both
    of us

 sys/net/pfvar.h | 11 +++++++----
 1 file changed, 7 insertions(+), 4 deletions(-)

commit 3ad52e89bbf085e4f38a768fed316bbbb59bd45d
Author: sthen <sthen@openbsd.org>
Date:   Mon Jun 8 02:36:06 2009 +0000

    "do not call PF_ANEQ with af=0, dragons". fixes a problem with skip
    steps found with the recent pfvar.h commit to check address families.
    from & commit req by henning.

 sys/net/pf.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit 99d0babf01dbb7273f732f4046ad9b18e9f411f9
Author: henning <henning@openbsd.org>
Date:   Mon Jun 8 01:55:42 2009 +0000

    gah. something is not quite right, sthen sees strange behaviour fixed
    by backing out the macro fix. something must rely on the broken behaviour

 sys/net/pfvar.h | 11 ++++-------
 1 file changed, 4 insertions(+), 7 deletions(-)

commit 701867fb0653b9800610670d43ef7636a593c47e
Author: henning <henning@openbsd.org>
Date:   Mon Jun 8 00:50:30 2009 +0000

    unfuck PF_AEQ PF_ANEQ PF_AZERO macos that got fucked when v6 support
    was added in 2001. yes i got bitten by inet6 shit again.
    in the ANEQ case, if af == AF_INET, (a)->addr32[0] != (b)->addr32[0]
    is false when the adresses ARE equal. now it goes right in the
    intended-for-v6 case and starts to compare the other addr32 fields -
    in the v4 case I have garbage in them, so it reports all v4 as different
    when they are in fact the same. fix by adding explicit af == INET6 test
    before going on to compare the rest.
    found the really hard way (many hours wasted, thought the bug was in my
    new code) by me. ok sthen markus claudio

 sys/net/pfvar.h | 11 +++++++----
 1 file changed, 7 insertions(+), 4 deletions(-)

commit 22760f565a521eee1242a6b1041c186acc77d298
Author: claudio <claudio@openbsd.org>
Date:   Fri Jun 5 00:05:21 2009 +0000

    Initial support for routing domains. This allows to bind interfaces to
    alternate routing table and separate them from other interfaces in distinct
    routing tables. The same network can now be used in any doamin at the same
    time without causing conflicts.
    This diff is mostly mechanical and adds the necessary rdomain checks accross
    net and netinet. L2 and IPv4 are mostly covered still missing pf and IPv6.
    input and tested by jsg@, phessler@ and reyk@. "put it in" deraadt@

 sys/net/pf.c | 46 +++++++++++++++++++++++++++++-----------------
 1 file changed, 29 insertions(+), 17 deletions(-)

commit 612f7ec93ad2d4fc26dbe131b7ef236596e0f2a1
Author: henning <henning@openbsd.org>
Date:   Sun May 31 19:10:51 2009 +0000

    make set loginterface, set hostid, set reassemble and set debug
    transactional. sanity checked claudio, requested by theo for some time

 sys/net/pf_ioctl.c | 45 +++++++++++++++++++++++++++++++++++++++------
 1 file changed, 39 insertions(+), 6 deletions(-)

commit 17af9bfeaee1660bf5ad8529117a279bd5c9959d
Author: bluhm <bluhm@openbsd.org>
Date:   Mon May 18 20:37:13 2009 +0000

    The routing table index rtableid has type unsigned int in the routing
    code.  In pf rtableid == -1 means don't change the rtableid because
    of this rule.  So it has to be signed int there.  Before the value
    is passed from pf to route it is always checked to be >= 0.  Change
    the type to int in pf and to u_int in netinet and netinet6 to make
    the checks work.  Otherwise -1 may be used as an array index and
    the kernel crashes.
    
    ok henning@

 sys/net/pf.c    | 10 +++++-----
 sys/net/pfvar.h |  4 ++--
 2 files changed, 7 insertions(+), 7 deletions(-)

commit 601378e5e2e028d603a1bd012ac55b6ed982f084
Author: dlg <dlg@openbsd.org>
Date:   Wed May 13 01:09:05 2009 +0000

    dont go splx(s) in the ioctl handler if we havent done splnet(). this adds
    the splnet calls and the extra splx(s)s necessary for it to be safe.
    
    bug found by sthen@

 sys/net/if_pfsync.c | 18 +++++++++++++++---
 1 file changed, 15 insertions(+), 3 deletions(-)

commit b78a2737acaaa91e07a6020a5db27597a7158145
Author: dlg <dlg@openbsd.org>
Date:   Wed May 13 01:01:34 2009 +0000

    only keep track of the number of updates on tcp connections. state sync on
    all the other protocols is simply pushing the timeouts along which has a
    resolution of 1 second, so it isnt going to be hurt by pfsync taking up
    to a second to send it over.
    
    keep track of updates on tcp still though, their windows need constant
    attention.
    
    tested by sthen@

 sys/net/if_pfsync.c | 10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

> 6bc752e028075471b3e4a0d89b930309b9865a48

commit 03fb22ceee163ca75fd9f3d108d896f38f77b6f4
Author: henning <henning@openbsd.org>
Date:   Thu Apr 30 12:54:32 2009 +0000

    treat log as what it is, a flag variable. effectively a noop now but stops
    us relying on where we are setting it. ok ryan dlg

 sys/net/pf.c | 24 ++++++++++++------------
 1 file changed, 12 insertions(+), 12 deletions(-)

commit 4938e2fd28e70301f2f5646109484f9f3f80ec0f
Author: dlg <dlg@openbsd.org>
Date:   Thu Apr 23 02:01:21 2009 +0000

    print the type of the icmp message we're bitching about when debugging is
    turned up in pf_icmp_state_lookup.
    
    ok sthen@

 sys/net/pf.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit af0dfc046d46f144d50b07ca8347cbf97207d087
Author: henning <henning@openbsd.org>
Date:   Fri Apr 17 18:37:06 2009 +0000

    move the lastr = r assignment behind the anchor rule check so we don't
    ever try to aplly options from the anchor rule if it was the last matching
    one but the last matching real rule. it is right but despite begging nobody
    has the balls to ok it ;(

 sys/net/pf.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 23370e62eba03a9880c7e3dfab24e60e364990e3
Author: david <david@openbsd.org>
Date:   Thu Apr 16 04:40:19 2009 +0000

    Really turn fragment reassembly on by default.  pfctl must handle this
    since the DIOCSETREASS ioctl is called on every ruleset load and was
    overriding the initial setting in pfattach().  Fix setting of the global
    no-df bitmask as well.
    ok henning@

 sys/net/pf_ioctl.c | 4 +---
 1 file changed, 1 insertion(+), 3 deletions(-)

commit a40c0c25cb913ad4c401b1a8d4a1c070233a4ea6
Author: henning <henning@openbsd.org>
Date:   Wed Apr 15 13:10:38 2009 +0000

    little dose of scrubbing after the monster changes:
    correctly inherit queue stuff, tag, rtableid from the rule if we have no
    state
    some logic simplification and removal of redundant checks
    ok dlg

 sys/net/pf.c | 31 ++++++++++++++++++-------------
 1 file changed, 18 insertions(+), 13 deletions(-)

commit 30e1024ee6c69dac950644f6f9d91dcd406b2104
Author: david <david@openbsd.org>
Date:   Wed Apr 15 05:14:45 2009 +0000

    move OK ICMP to NOISY level, makes it easier to run at MISC level; ok henning@

 sys/net/pf.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

commit 1acdb359cdbf5553a4e8a655aee6b2a8f8147d9f
Author: david <david@openbsd.org>
Date:   Wed Apr 15 05:11:49 2009 +0000

    move pfsync stale update messages to NOISY level; ok dlg@ henning@

 sys/net/if_pfsync.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

commit b692f79c8540ed0911b5afdf00b22f91280e3fd1
Author: grange <grange@openbsd.org>
Date:   Tue Apr 14 19:39:56 2009 +0000

    Correctly handle the case when state might be NULL in pf_test like
    all other code do. Should fix pr 6121.
    
    ok henning@

 sys/net/pf.c | 12 +++++++-----
 1 file changed, 7 insertions(+), 5 deletions(-)

commit 551ab43b6e8533ba11c618532b6efad617623ede
Author: jsing <jsing@openbsd.org>
Date:   Sat Apr 11 23:42:05 2009 +0000

    Avoid dereferencing a null pointer when pf attempts to translate a
    specifically crafted IP datagram.
    
    Problem noted by Sebastian Rother.
    
    ok henning@ mcbride@ sthen@

 sys/net/pf.c | 18 +++++++++++++++++-
 1 file changed, 17 insertions(+), 1 deletion(-)

commit 548ee264540727905962e932b52a1a5685a8a79a
Author: henning <henning@openbsd.org>
Date:   Tue Apr 7 13:26:23 2009 +0000

    after i took everything in this fiule apart and reassembled with a lot of
    new stuff asserting copyright is in order

 sys/net/pf_norm.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit 19c9752dfa4afa1eb82272a81f563e96cb42f8c7
Author: henning <henning@openbsd.org>
Date:   Tue Apr 7 12:48:40 2009 +0000

    turn fragment reassembly on by default. the is little to no reason to
    not do fragment reassembly. discussed with dlg and ryan in basel.
    ok ryan dlg sthen jdixon todd deraadt

 sys/net/pf_ioctl.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

commit e99532372eee714875abab50dadce52a9074bad1
Author: henning <henning@openbsd.org>
Date:   Mon Apr 6 12:05:55 2009 +0000

    1) scrub rules are completely gone.
    2) packet reassembly: only one method remains, full reassembly. crop
    and drop-ovl are gone.
    .  set reassemble yes|no [no-df]
    if no-df is given fragments (and only fragments!) with the df bit set
    have it cleared before entering the fragment cache, and thus the
    reassembled packet doesn't have df set either. it does NOT touch
    non-fragmented packets.
    3) regular rules can have scrub options.
    .  pass scrub(no-df, min-ttl 64, max-mss 1400, set-tos lowdelay)
    .  match scrub(reassemble tcp, random-id)
    of course all options are optional. the individual options still do
    what they used to do on scrub rules, but everything is stateful now.
    4) match rules
    "match" is a new action, just like pass and block are, and can be used
    like they do. opposed to pass or block, they do NOT change the
    pass/block state of a packet. i. e.
    .  pass
    .  match
    passes the packet, and
    .  block
    .  match
    blocks it.
    Every time (!) a match rule matches, i. e. not only when it is the
    last matching rule, the following actions are set:
    -queue assignment. can be overwritten later, the last rule that set a
    queue wins. note how this is different from the last matching rule
    wins, if the last matching rule has no queue assignments and the
    second last matching rule was a match rule with queue assignments,
    these assignments are taken.
    -rtable assignments. works the same as queue assignments.
    -set-tos, min-ttl, max-mss, no-df, random-id, reassemble tcp, all work
    like the above
    -logging. every matching rule causes the packet to be logged. this
     means a single packet can get logged more than once (think multiple log
     interfaces with different receivers, like pflogd and spamlogd)
    .
    almost entirely hacked at n2k9 in basel, could not be committed close to
    release. this really should have been multiple diffs, but splitting them
    now is not feasible any more. input from mcbride and dlg, and frantzen
    about the fragment handling.
    speedup around 7% for the common case, the more the more scrub rules
    were in use.
    manpage not up to date, being worked on.

 sys/net/pf.c         | 279 +++++++++++++++++--------
 sys/net/pf_ioctl.c   |  17 +-
 sys/net/pf_norm.c    | 573 +++++----------------------------------------------
 sys/net/pf_ruleset.c |   7 +-
 sys/net/pfvar.h      |  77 ++++---
 5 files changed, 310 insertions(+), 643 deletions(-)

commit da9c45cd0fb82e1dee3a6c924e92c41ca16f6f07
Author: dlg <dlg@openbsd.org>
Date:   Sat Apr 4 13:09:29 2009 +0000

    use time_uptime instead of time_second internally. time_uptime isnt
    affected by adjusting the clock.

 sys/net/if_pfsync.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

> 2662e31fc3e2add106ed0e8fae9993fcc8ce66a9

commit 4d0211cf9f8bb1913573f0d72391352510e25670
Author: dlg <dlg@openbsd.org>
Date:   Tue Mar 31 01:21:29 2009 +0000

    do not include space in the end of the from for a hmac. after discussion
    with deraadt@, mcbride@, and mpf@ it is obvious that a hmac doesnt make
    sense for pfsync.
    
    this also firms up some of the input parsing so it handles short frames a
    bit better.

 sys/net/if_pfsync.c | 25 +++++++++----------------
 sys/net/if_pfsync.h |  4 +---
 2 files changed, 10 insertions(+), 19 deletions(-)

> 9ff7e6e922dd36293d1c794b63535b3a1cd053b8

commit 00141b59bd4045ec976ba93154354bd3cf89a28b
Author: dlg <dlg@openbsd.org>
Date:   Mon Mar 23 06:19:59 2009 +0000

    wait an appropriate amount of time before giving up on a bulk update,
    rather than giving up after a hardcoded 5 seconds (which is generally much
    too short an interval for a bulk update).
    
    pointed out by david@, eyeballed by mcbride@

 sys/net/if_pfsync.c | 14 ++++++++------
 1 file changed, 8 insertions(+), 6 deletions(-)

> e3b670692add9964eacc62e6d3d88e6315bb2a1e

commit d3213cbfb5dfac30265fd3fda82cc9a604a24e92
Author: dlg <dlg@openbsd.org>
Date:   Tue Mar 17 05:06:54 2009 +0000

    we do know how to handle iack. in the rx path at least.

 sys/net/if_pfsync.c | 8 ++------
 1 file changed, 2 insertions(+), 6 deletions(-)

commit 312f620330203577f0fb9b4fbd688d760fe1fa1b
Author: miod <miod@openbsd.org>
Date:   Sun Mar 15 19:40:38 2009 +0000

    Introduce splsoftassert(), similar to splassert() but for soft interrupt
    levels. This will allow for platforms where soft interrupt levels do not
    map to real hardware interrupt levels to have soft ipl values overlapping
    hard ipl values without breaking spl asserts.

 sys/net/if_pfsync.c | 14 +++++++-------
 sys/net/pf.c        |  8 ++++----
 2 files changed, 11 insertions(+), 11 deletions(-)

commit 8c0632cd274b40630a5b61155b5258bd8e0829d9
Author: mcbride <mcbride@openbsd.org>
Date:   Sat Mar 14 23:44:09 2009 +0000

    Some ICMP types that also have icmp_id, pointed out by markus@
    
    ok henning markus

 sys/net/pf.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

> 0664b03c16e4f27927180a05794327ba1786f21c

commit 26b46f765f4625ccd2dddc5773828829ada61c48
Author: mcbride <mcbride@openbsd.org>
Date:   Mon Mar 9 13:53:09 2009 +0000

    Make the DIOCSETIFFLAG, DIOCSETLIMIT, and DIOCSETTIMEOUT ioctls
    transactional, closing PRs 4941 and 5910.  Minor flag day, requires rebuild
    of userland tools that use struct pfi_kif.
    
    ok henning deraadt

 sys/net/pf.c       | 12 ++++++------
 sys/net/pf_if.c    | 18 +++++++++++++++---
 sys/net/pf_ioctl.c | 54 ++++++++++++++++++++++++++++++++++++++++--------------
 sys/net/pfvar.h    |  5 ++++-
 4 files changed, 65 insertions(+), 24 deletions(-)

commit 016929412c6906368950e38a478feca1fa1c9351
Author: mcbride <mcbride@openbsd.org>
Date:   Sat Mar 7 01:15:41 2009 +0000

    Make sure pd2 has a pointer to the icmp header in the payload; fixes
    panic seen with some some icmp types in icmp error message payloads.
    
    Reported by david@ and insan.praja@gmail.com

 sys/net/pf.c | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

> 5fff3f1010134e6bd213132ea4de3681425a9214

commit 70bf7555ef4c33faa35582dadab7c01bcf61b3ac
Author: mcbride <mcbride@openbsd.org>
Date:   Thu Mar 5 03:09:37 2009 +0000

    Stricter state checking for ICMP and ICMPv6 packets: include the ICMP type
    in one port of the state key, using the type to determine which side should
    be the id, and which should be the type. Also:
    - Handle ICMP6 messages which are typically sent to multicast addresses but
      recieve unicast replies, by doing fallthrough lookups against the correct
      multicast address.
    - Clear up some mistaken assumptions in the PF code:
       - Not all ICMP packets have an icmp_id, so simulate one based on other
         data if we can, otherwise set it to 0.
       - Don't modify the icmp id field in NAT unless it's echo
       - Use the full range of possible id's when NATing icmp6 echoy
    
    ok henning marco
    testing matthieu todd

 sys/net/pf.c    | 418 ++++++++++++++++++++++++++++++++++++++++++++------------
 sys/net/pf_lb.c |  11 +-
 2 files changed, 334 insertions(+), 95 deletions(-)

commit 335e9592fb27d0058d625d2711d66f9091b5a514
Author: dlg <dlg@openbsd.org>
Date:   Sun Mar 1 12:02:39 2009 +0000

    rework serialisation of messages slightly.
    - pass a void *, rather than an mbuf and an offset into m_data, the callers
    can do the math for it.
    - we need to store the size of the messages these functions will serialise
    into, so dont get the funcs to return it, just add it on in the caller.

 sys/net/if_pfsync.c | 61 +++++++++++++++++++++++------------------------------
 1 file changed, 26 insertions(+), 35 deletions(-)

commit e05d2179bb9a04604d5515431dbb9acc82036c3f
Author: dlg <dlg@openbsd.org>
Date:   Sun Mar 1 11:24:36 2009 +0000

    check pfsyncs IFF_RUNNING flag before doing stuff. should save time for
    people who hate^Wdont use pfsync.

 sys/net/if_pfsync.c | 34 +++++++++++++++++++++++-----------
 1 file changed, 23 insertions(+), 11 deletions(-)

commit 1dd7b4773a71996c3ee80a2ab498392c3dc41795
Author: dlg <dlg@openbsd.org>
Date:   Sun Mar 1 10:34:38 2009 +0000

    i can't see a reason that we'd need to go to splnet to call ip_output.
    this cleans up use of splnet.

 sys/net/if_pfsync.c | 50 +++++++-------------------------------------------
 1 file changed, 7 insertions(+), 43 deletions(-)

commit 869678e2e7397efdf0d38c03feac3a6cb29ed653
Author: henning <henning@openbsd.org>
Date:   Fri Feb 27 12:37:45 2009 +0000

    fix quick reuse of tcp states.
    when we, for a new state, hit an existing tcp state which is in FIN_WAIT_2
    on both ends do not fail but insert the new state anyway and unlink the
    old one afterwards. pimp error message a bit, too.
    problem found with NAT by viq <viq@viq.ath.cx>
    ok theo markus

 sys/net/pf.c | 48 +++++++++++++++++++++++++++++++++++-------------
 1 file changed, 35 insertions(+), 13 deletions(-)
